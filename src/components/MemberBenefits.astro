---
export interface Benefit {
  id: string;
  title: string;
  subtitle: string;
  description: string;
  date: string;
  year: string;
  month: string;
  image: string;
  buttonText: string;
  category: string;
}

export interface Props {
  benefits?: Benefit[];
}

const defaultBenefits: Benefit[] = [
  {
    id: 'mothers-day',
    title: 'Happy Mother\'s Day',
    subtitle: '母親節福滿限定活動',
    description: '專為母親節特別企劃的限定優惠活動，讓您與媽媽一起享受美好時光',
    date: '31',
    year: '2025',
    month: '05',
    image: 'https://hamahairspa.com/wp-content/uploads/2025/05/hamahairspa%E6%AF%8D%E8%A6%AA%E7%AF%80%E5%84%AA%E6%83%A0-e1746153127699-1024x1024.jpg',
    buttonText: '母親節限定活動',
    category: 'VIEW MORE',
  },
  {
    id: 'special-offer',
    title: '優惠活動',
    subtitle: 'Special Offer',
    description: '全館優質套餐 Combo 1~5 會員優惠價 100，非會員專案惠活動',
    date: '10',
    year: '2024',
    month: '10',
    image: 'https://hamahairspa.com/wp-content/uploads/2024/12/95439753-4AFF-448A-A4E8-A4F5744899DF-1024x1024.png',
    buttonText: '非會員專案惠活動',
    category: 'VIEW MORE',
  },
  {
    id: 'hama-exclusive',
    title: 'Hama',
    subtitle: '海洋胸好禮',
    description: '專業海洋產品體驗，15分鐘專案服務',
    date: '06',
    year: '2024',
    month: '06',
    image: 'https://hamahairspa.com/wp-content/uploads/2025/05/hamahairspa%E6%AF%8D%E8%A6%AA%E7%AF%80%E5%84%AA%E6%83%A0-e1746153127699-1024x1024.jpg',
    buttonText: '海洋胸好禮',
    category: 'VIEW MORE',
  }
];

const { benefits = defaultBenefits } = Astro.props;
---

<section class="member-benefits">
  <div class="benefits-container">
    <!-- 標題區 -->
    <div class="benefits-header">
      <h2 class="benefits-title">MEMBER BENEFITS</h2>
      <h3 class="benefits-subtitle">會員禮遇</h3>
    </div>

    <!-- 專屬優惠按鈕 -->
    <div class="exclusive-button">
      <button class="exclusive-btn">專屬優惠</button>
    </div>

    <!-- 優惠卡片輪播 -->
    <div class="benefits-carousel">
      <div class="carousel-container" id="carouselContainer">
        <div class="carousel-track" id="benefitsTrack">
          {benefits.map((benefit, index) => (
              <div class="card-content" data-index={index}>
                <div class="card-image relative">
                  <img src={benefit.image} alt={benefit.title} />
                  <div class="image-overlay"></div>
                  <div class="card-header">
                    <span class="year">{benefit.year}</span>
                    <span class="month font-bold">{benefit.month}</span>
                  </div>
                </div>
                <div class="flex justify-between card-button">
                  <button>{benefit.buttonText}</button>
                  <div class="card-button-btn">
                    <span class="card-button-btn-title">VIEW MORE</span>
                    <svg class="card-button-btn-svg ml-4" width="28" height="28" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.82 49.1"><g id="圖層_2" data-name="圖層 2"><g id="圖層_1-2" data-name="圖層 1"><g id="圖層_2-2" data-name="圖層 2"><g id="圖層_1-2-2" data-name="圖層 1-2"><g id="_0pqL0h.tif" data-name=" 0pqL0h.tif"><path fill="currentColor" d="M0,49.1q122.32-.09,244.64-.3c3.23,0,10.37,0,16.71.05a2.4,2.4,0,0,0,1-4.61c-8.58-3.66-25.27-10.49-28.66-11.85C206.4,20.18,194.2,14.39,168,3.12c-15.47-6.64-13.25-2.38-13.7,9.81-1,26.27-1,29.12-27.76,29.15Q63.27,42.17,0,42.31Z"></path></g></g></g></g></g></svg>
                  </div>
                </div>
              </div>
          ))}
        </div>
      </div>

      <!-- 導航按鈕 -->
      <div class="carousel-navigation">
        <button class="nav-btn prev-btn" id="prevBtn">
          <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.77 49.1"><g id="圖層_2" data-name="圖層 2"><g id="圖層_1-2" data-name="圖層 1"><g id="_0pqL0h.tif" data-name="0pqL0h.tif"><path fill="currentColor" d="M263.77,49.1Q141.45,49,19.13,48.8c-3.23,0-10.37,0-16.71.05a2.4,2.4,0,0,1-1-4.61C10,40.58,26.69,33.75,30.08,32.39c27.29-12.21,39.49-18,65.69-29.27,15.47-6.64,13.25-2.38,13.7,9.81,1,26.27,1,29.12,27.76,29.15q63.27.08,126.54.23Z"></path></g></g></g></svg>
        </button>
        <div class="carousel-dots" id="carouselDots">
          <!-- 動態生成的圓點 -->
        </div>
        <button class="nav-btn next-btn" id="nextBtn">
          <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.82 49.1"><g id="圖層_2" data-name="圖層 2"><g id="圖層_1-2" data-name="圖層 1"><g id="圖層_2-2" data-name="圖層 2"><g id="圖層_1-2-2" data-name="圖層 1-2"><g id="_0pqL0h.tif" data-name=" 0pqL0h.tif"><path fill="currentColor" d="M0,49.1q122.32-.09,244.64-.3c3.23,0,10.37,0,16.71.05a2.4,2.4,0,0,0,1-4.61c-8.58-3.66-25.27-10.49-28.66-11.85C206.4,20.18,194.2,14.39,168,3.12c-15.47-6.64-13.25-2.38-13.7,9.81-1,26.27-1,29.12-27.76,29.15Q63.27,42.17,0,42.31Z"></path></g></g></g></g></g></svg>
        </button>
      </div>
    </div>
  </div>

  <style>
    .member-benefits {
      background: #f8f6f0;
      padding: 6rem 2rem;
      min-height: 100vh;
      display: flex;
      align-items: center;
      position: relative;
      overflow: hidden;
      width: 100vw;
      left: 50%;
      transform: translateX(-50%);
    }

    .benefits-container {
      max-width: 1200px;
      margin: 0 auto;
      width: 100%;
      position: relative;
      padding: 0 2rem;
    }

    /* 標題區 */
    .benefits-header {
      text-align: center;
      margin-bottom: 4rem;
    }

    .benefits-title {
      font-size: 3.5rem;
      font-weight: 300;
      color: #c4956c;
      letter-spacing: 6px;
      text-transform: uppercase;
      margin-bottom: 1rem;
    }

    .benefits-subtitle {
      font-size: 1.5rem;
      color: #8b7355;
      font-weight: 400;
      letter-spacing: 2px;
    }

    /* 專屬優惠按鈕 */
    .exclusive-button {
      margin: 20px 0;
    }

    .exclusive-btn {
      background: #c4956c;
      color: white;
      border: none;
      padding: 1rem 2rem;
      border-radius: 50px;
      font-size: 1rem;
      font-weight: 500;
      letter-spacing: 1px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 20px rgba(196, 149, 108, 0.3);
      width: 209px;
    }

    .exclusive-btn:hover {
      background: #b8895f;
      transform: translateY(-2px);
      box-shadow: 0 6px 25px rgba(196, 149, 108, 0.4);
    }

    /* 輪播容器 */
    .benefits-carousel {
      position: relative;
    }

    .carousel-container {
      overflow: hidden;
      cursor: grab;
      user-select: none;
    }

    .carousel-container:active {
      cursor: grabbing;
    }

    .carousel-track {
      display: flex;
      transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      gap: 2rem;
    }

    /* 優惠卡片 */
    .card-content {
      flex: 0 0 calc(33.333% - 1.333rem);
      background: white;
      border-radius: 15px;
      overflow: hidden;
      box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card-content:hover {
      transform: translateY(-10px);
      box-shadow: 0 25px 60px rgba(0, 0, 0, 0.15);
    }

    /* 卡片標題 */
    .card-header {
      display: flex;
      flex-direction: column;
      position: absolute;
      justify-content: center;
      align-items: center;
      right: 0;
      top: 0;
      background: #C997728C;
      width: 80px;
      height: 80px;
      padding: 10px;
    }

    .card-date {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .date-number {
      font-size: 2.5rem;
      font-weight: 700;
      color: #c4956c;
      line-height: 1;
    }

    .date-info {
      display: flex;
      justify-content: center;
      flex-direction: column;
      gap: 0.2rem;
    }

    .year{
        font-size: 18px;
        color: white;
        font-weight: 500;
    }
    .month {
      font-size: 35px;
      color: white;
      font-weight: 700;
    }

    .card-category {
      background: rgba(196, 149, 108, 0.1);
      color: #c4956c;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 500;
      letter-spacing: 1px;
    }

    /* 卡片內容佈局 */
    .card-content {
      position: relative;
      display: flex;
      flex-direction: column;
      height: 450px;
    }

    .card-image {
      position: relative;
      margin: 1rem 1.5rem;
      overflow: hidden;
      width: calc(100% - 3rem);
      height: 300px;
      border-radius: 12px;
      flex-shrink: 0;
    }

    .card-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .card-image:hover img {
      transform: translateY(10px);
    }

    .image-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      opacity: 0.7;
      mix-blend-mode: multiply;
    }

    .card-info {
      padding: 0 1.5rem 1.5rem;
    }

    .card-title {
      font-size: 1.5rem;
      font-weight: 600;
      color: #2d3436;
      margin-bottom: 0.5rem;
    }

    .card-subtitle {
      font-size: 1rem;
      color: #c4956c;
      font-weight: 400;
      margin-bottom: 1rem;
      letter-spacing: 0.5px;
    }

    .card-description {
      font-size: 0.9rem;
      color: #636e72;
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }

    .card-button {
      position: relative;
      top: -40px;
      background: #F9F2E9F5;
      border: 2px solid #c4956c;
      color: #c4956c;
      padding: 0.8rem 1.5rem;
      border-radius: 25px;
      font-size: 0.9rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      width: calc( 100% - 40px);
      margin: 0 auto;
    }

    .card-button-btn {
      display: flex;
      border-bottom: 1px solid #c4956c;
      transition: all 0.3s ease-in-out;
    }

    .card-button-btn:hover{
      border: none;
    }

    .card-button-btn:hover .card-button-btn-title {
      transform: translateX(-10px);
    }

    .card-button-btn:hover .card-button-btn-svg {
      transform: translateX(10px);
    }

    .card-button-btn-title,.card-button-btn-svg {
      transition: all 0.3s ease-in-out;
    }



    /* 導航按鈕 */
    .carousel-navigation {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 1rem;
      margin-top: 3rem;
      flex-wrap: wrap;
    }

    .carousel-dots {
      display: flex;
      gap: 0.5rem;
      align-items: center;
    }

    .dot {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      border: none;
      background: rgba(196, 149, 108, 0.3);
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .dot.active {
      background: #c4956c;
      transform: scale(1.2);
    }

    .dot:hover {
      background: rgba(196, 149, 108, 0.6);
    }

    .nav-btn {
      width: 40px;
      height: 40px;
      border: 2px solid #c4956c;
      background: white;
      border-radius: 50%;
      cursor: pointer;
      transition: all 0.3s ease;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #c4956c;
      flex-shrink: 0;
    }

    .nav-btn:disabled {
      opacity: 0.3;
      cursor: not-allowed;
    }

    .nav-btn:hover:not(:disabled) {
      background: #c4956c;
      color: white;
      transform: scale(1.1);
    }


    /* 響應式設計 */
    @media (max-width: 1024px) {
      .member-benefits {
        padding: 4rem 1.5rem;
      }

      .card-content {
        flex: 0 0 calc(50% - 1rem);
        height: 420px;
      }

      .benefits-title {
        font-size: 3rem;
        letter-spacing: 4px;
      }

      .card-image {
        margin: 0.8rem 1.2rem;
        width: calc(100% - 2.4rem);
        height: 280px;
      }
    }

    @media (max-width: 768px) {
      .benefits-container {
        padding: 0 1rem;
      }

      .member-benefits {
        padding: 3rem 1rem;
      }

      .card-content {
        flex: 0 0 100%;
        height: 400px;
        max-width: 350px;
        margin: 0 auto;
      }

      .benefits-title {
        font-size: 2.5rem;
        letter-spacing: 3px;
      }

      .benefits-subtitle {
        font-size: 1.2rem;
      }

      .exclusive-button {
        text-align: center;
        margin-bottom: 2rem;
      }

      .carousel-track {
        gap: 1.5rem;
        justify-content: center;
      }

      .card-image {
        margin: 0.8rem 1rem;
        width: calc(100% - 2rem);
        height: 260px;
      }

      .card-header {
        width: 70px;
        height: 70px;
      }

      .year {
        font-size: 16px;
      }

      .month {
        font-size: 28px;
      }

      .carousel-navigation {
        margin-top: 2rem;
        gap: 1.2rem;
      }

      /* 手機版顯示更多導航圓點 */
      .carousel-dots {
        order: 0;
        flex: 1;
        justify-content: center;
      }

      .prev-btn {
        order: -1;
      }

      .next-btn {
        order: 1;
      }
    }

    @media (max-width: 480px) {
      .member-benefits {
        padding: 2rem 0.5rem;
      }

      .card-content {
        height: 380px;
        max-width: 300px;
      }

      .benefits-title {
        font-size: 2rem;
        letter-spacing: 2px;
      }

      .benefits-subtitle {
        font-size: 1rem;
      }

      .card-image {
        margin: 0.5rem 0.8rem;
        width: calc(100% - 1.6rem);
        height: 240px;
      }

      .card-header {
        width: 60px;
        height: 60px;
      }

      .year {
        font-size: 14px;
      }

      .month {
        font-size: 24px;
      }

      .exclusive-btn {
        padding: 0.8rem 1.5rem;
        font-size: 0.9rem;
        width: 180px;
      }

      .nav-btn {
        width: 35px;
        height: 35px;
      }

      .carousel-navigation {
        gap: 0.8rem;
        margin-top: 1.5rem;
      }

      /* 手機版導航佈局 */
      .carousel-navigation {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        max-width: 280px;
        margin: 1.5rem auto 0;
      }

      .carousel-dots {
        flex: 1;
        justify-content: center;
        margin: 0 1rem;
      }
    }

    /* 動畫效果 */
    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .benefit-card {
      animation: slideIn 0.6s ease forwards;
    }

    .benefit-card:nth-child(2) {
      animation-delay: 0.2s;
    }

    .benefit-card:nth-child(3) {
      animation-delay: 0.4s;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const track = document.getElementById('benefitsTrack') as HTMLElement;
      const container = document.getElementById('carouselContainer') as HTMLElement;
      const prevBtn = document.getElementById('prevBtn') as HTMLElement;
      const nextBtn = document.getElementById('nextBtn') as HTMLElement;
      const dotsContainer = document.getElementById('carouselDots') as HTMLElement;
      const cards = document.querySelectorAll('.card-content');
      
      let currentIndex = 0;
      let isDragging = false;
      let startX = 0;
      let currentTranslate = 0;
      let initialTranslate = 0;
      
      const totalCards = cards.length;
      const getCardsPerView = () => {
        if (window.innerWidth <= 480) return 1;
        if (window.innerWidth <= 768) return 1;
        if (window.innerWidth <= 1024) return 2;
        return 3;
      };
      let cardsPerView = getCardsPerView();
      const getMaxIndex = () => Math.max(0, totalCards - cardsPerView);

      // 創建圓點
      function createDots() {
        dotsContainer.innerHTML = '';
        const maxIndex = getMaxIndex();
        for (let i = 0; i <= maxIndex; i++) {
          const dot = document.createElement('button');
          dot.className = `dot ${i === currentIndex ? 'active' : ''}`;
          dot.addEventListener('click', () => goToSlide(i));
          dotsContainer.appendChild(dot);
        }
      }

      // 更新輪播位置
      function updateCarousel() {
        if (cardsPerView === 1) {
          // 手機版：每次移動一整個卡片的寬度
          const cardWidth = cards[0] ? (cards[0] as HTMLElement).offsetWidth + 24 : 350; // 24px = gap
          const translateX = -(currentIndex * cardWidth);
          track.style.transform = `translateX(${translateX}px)`;
        } else {
          // 桌面版：使用百分比
          const translateX = -(currentIndex * (100 / cardsPerView));
          track.style.transform = `translateX(${translateX}%)`;
        }
        updateDots();
        updateButtons();
      }

      // 更新圓點狀態
      function updateDots() {
        const dots = dotsContainer.querySelectorAll('.dot');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === currentIndex);
        });
      }

      // 更新按鈕狀態
      function updateButtons() {
        const maxIndex = getMaxIndex();
        prevBtn.disabled = currentIndex === 0;
        nextBtn.disabled = currentIndex >= maxIndex;
      }

      // 跳到指定幻燈片
      function goToSlide(index: number) {
        currentIndex = Math.max(0, Math.min(index, getMaxIndex()));
        updateCarousel();
      }

      // 下一張
      function nextSlide() {
        if (currentIndex < getMaxIndex()) {
          currentIndex++;
          updateCarousel();
        }
      }

      // 上一張
      function prevSlide() {
        if (currentIndex > 0) {
          currentIndex--;
          updateCarousel();
        }
      }

      // 拖拽功能
      function handleDragStart(e: MouseEvent | TouchEvent) {
        isDragging = true;
        startX = e instanceof MouseEvent ? e.clientX : e.touches[0].clientX;
        initialTranslate = currentTranslate;
        track.style.transition = 'none';
      }

      function handleDragMove(e: MouseEvent | TouchEvent) {
        if (!isDragging) return;
        e.preventDefault();
        const currentX = e instanceof MouseEvent ? e.clientX : e.touches[0].clientX;
        const diff = currentX - startX;
        currentTranslate = initialTranslate + diff;
        
        // 即時更新位置以提供視覺反饋
        const currentTransform = track.style.transform;
        const currentTranslateX = currentTransform.includes('translateX') ? 
          parseFloat(currentTransform.match(/translateX\(([^)]+)\)/)?.[1] || '0') : 0;
        
        track.style.transform = cardsPerView === 1 ? 
          `translateX(${currentTranslateX + diff}px)` : 
          `translateX(${currentTranslateX + diff}%)`;
      }

      function handleDragEnd() {
        if (!isDragging) return;
        isDragging = false;
        track.style.transition = 'transform 0.8s cubic-bezier(0.4, 0, 0.2, 1)';
        
        const threshold = cardsPerView === 1 ? 80 : 100;
        if (Math.abs(currentTranslate) > threshold) {
          if (currentTranslate > 0) {
            prevSlide();
          } else {
            nextSlide();
          }
        } else {
          // 回到原位置
          updateCarousel();
        }
        
        currentTranslate = 0;
      }

      // 鍵盤控制
      function handleKeydown(e: KeyboardEvent) {
        if (e.key === 'ArrowLeft') {
          prevSlide();
        } else if (e.key === 'ArrowRight') {
          nextSlide();
        }
      }

      // 響應式更新
      function handleResize() {
        const newCardsPerView = getCardsPerView();
        if (newCardsPerView !== cardsPerView) {
          cardsPerView = newCardsPerView;
          currentIndex = Math.min(currentIndex, getMaxIndex());
          
          // 重設transform以避免佈局錯亂
          track.style.transform = 'translateX(0)';
          
          // 延遲更新以確保DOM已更新
          setTimeout(() => {
            createDots();
            updateCarousel();
          }, 100);
        }
      }

      // 事件監聽器
      prevBtn?.addEventListener('click', prevSlide);
      nextBtn?.addEventListener('click', nextSlide);
      
      // 拖拽事件
      container?.addEventListener('mousedown', handleDragStart);
      container?.addEventListener('mousemove', handleDragMove);
      container?.addEventListener('mouseup', handleDragEnd);
      container?.addEventListener('mouseleave', handleDragEnd);
      container?.addEventListener('touchstart', handleDragStart);
      container?.addEventListener('touchmove', handleDragMove);
      container?.addEventListener('touchend', handleDragEnd);
      
      // 鍵盤和響應式事件
      document.addEventListener('keydown', handleKeydown);
      window.addEventListener('resize', handleResize);

      // 初始化
      createDots();
      updateCarousel();
    });
  </script>
</section>
