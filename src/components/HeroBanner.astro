---
import {createAstroT} from '@/utils/astro-i18n'
import Button from '@/components/ui/Button.astro'

const t = createAstroT(Astro)
---

<!-- Dark Modern Portfolio Hero Section -->
<section class="relative min-h-screen flex items-center justify-center overflow-hidden theme-section" id="page-header"
         style="background: var(--theme-bg, #0a0a0a)">
  <!-- Subtle texture background -->
  <div
    class="absolute inset-0 z-0 bg-[radial-gradient(circle_at_center,_rgba(255,255,255,0.02)_1px,_transparent_1px)] bg-[size:60px_60px]"></div>

  <!-- Main Content -->
  <div class="relative z-10 w-full max-w-7xl mx-auto px-6 lg:px-8">
    <div class="text-center space-y-12">

      <!-- Category Label -->
      <div class="animate-fade-in-up [animation-delay:0.2s] [animation-fill-mode:both]">
        <span class="text-base tracking-[0.3em] uppercase font-light"
              style="color: var(--theme-text-secondary, rgba(255,255,255,0.6))">
          我們的故事
        </span>
      </div>

      <!-- Main Heading -->
      <div class="space-y-6 animate-fade-in-up [animation-delay:0.4s] [animation-fill-mode:both]">
        <h1 class="text-[clamp(4rem,12vw,12rem)] font-black leading-[0.85] tracking-[-0.05em]"
            style="color: var(--theme-text, #ffffff)">
          享天堂
        </h1>
      </div>

      <!-- Description -->
      <div class="animate-fade-in-up [animation-delay:0.6s] [animation-fill-mode:both] max-w-3xl mx-auto space-y-4">
        <p class="text-lg md:text-xl leading-relaxed font-light tracking-wide"
           style="color: var(--theme-text, rgba(255,255,255,0.8))">
          從場地、團隊到精油皆嚴格把關，享天堂讓您置身天堂
        </p>
        <a href="/booking">
          <Button><span data-i18n="buttons.book-now">{t('buttons.book-now')}</span></Button>
        </a>
      </div>
    </div>
  </div>

  <!-- Social Links - Left Side for Desktop, Left Bottom for Mobile -->
  <div class="absolute left-4 bottom-4 md:left-8 md:bottom-8 z-10">
    <div class="flex flex-col space-y-4 md:space-y-4 space-y-3">
      <a href="#" class="transition-colors duration-300 hover:opacity-70"
         style="color: var(--theme-text-secondary, rgba(255,255,255,0.8))">
        <span class="text-xs tracking-wider">X</span>
      </a>
      <a href="#" class="transition-colors duration-300 hover:opacity-70"
         style="color: var(--theme-text-secondary, rgba(255,255,255,0.8))">
        <span class="text-xs tracking-wider">FB</span>
      </a>
      <a href="#" class="transition-colors duration-300 hover:opacity-70"
         style="color: var(--theme-text-secondary, rgba(255,255,255,0.8))">
        <span class="text-xs tracking-wider">IG</span>
      </a>
      <a href="#" class="transition-colors duration-300 hover:opacity-70"
         style="color: var(--theme-text-secondary, rgba(255,255,255,0.8))">
        <span class="text-xs tracking-wider">Line</span>
      </a>
    </div>
  </div>

  <!-- Rotating Circle Text - Bottom Right -->
  <div class="absolute right-4 bottom-4 md:right-8 md:bottom-8 z-10">
    <div class="circle cursor-pointer" onclick="scrollToTeam()">
      <div class="circle-icon md:bg-primary-500 md:rounded-full">
        <svg class=" w-10 h-10" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" style="color: var(--theme-text-secondary, rgba(255,255,255,0.8))">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19V5m0 14-4-4m4 4 4-4"/>
        </svg>
      </div>
      <div class="circle-text hidden md:block">
        <span>{t('hero.scroll')}</span>
      </div>
    </div>
  </div>

  <!-- Decorative elements -->
  <div class="absolute top-8 left-1/2 -translate-x-1/2 z-10">
    <div class="w-12 h-px bg-white/20"></div>
  </div>
</section>

<style>
  /* Custom animations for fade-in-up effect */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(60px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 1s ease both;
  }

  /* Rotating Circle Text Styles */
  .circle {
    position: relative;
    width: 120px;
    height: 120px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }

  .circle:hover {
    transform: scale(1.05);
    opacity: 0.8;
  }

  .circle-icon {
    position: absolute;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
  }

  .circle-text {
    position: absolute;
    width: 100%;
    height: 100%;
    animation: textRotation 6s linear infinite;
  }

  @keyframes textRotation {
    to {
      transform: rotate(360deg);
    }
  }

  :global(.circle-text span) {
    position: absolute;
    left: 50%;
    font-size: 0.7rem;
    font-weight: 300;
    transform-origin: 0px 60px;
  }
</style>

<script>
  // 創建圓形文字效果
  document.addEventListener('DOMContentLoaded', () => {

    window.scrollToTeam = function() {
      const teamSection = document.getElementById('team')
      if (teamSection) {
        teamSection.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        })
      }
    }

    // Initialize rotating circle text
    const circleText = document.querySelector('.circle-text')
    if (circleText) {
      const textElement = circleText.querySelector('span')
      if (textElement) {
        const text = textElement.textContent || ''
        const chars = text.split('')

        // Calculate the angle between each character
        const angleStep = 360 / chars.length

        // Create HTML with individual spans for each character
        textElement.innerHTML = chars
          .map((char, i) => {
            const angle = i * angleStep
            return `<span style="transform: rotate(${angle}deg)">${char === ' ' ? '&nbsp;' : char}</span>`
          })
          .join('')
      }
    }

    // 滾動時改變文字顏色和漸層效果
    const heroTitle = document.querySelector('h1') as HTMLElement
    if (heroTitle) {
      window.addEventListener('scroll', () => {
        const scrollY = window.scrollY
        if (scrollY > 0) {
          // 使用 text-primary-600 顏色
          heroTitle.style.background = 'none'
          heroTitle.style.webkitBackgroundClip = 'initial'
          heroTitle.style.backgroundClip = 'initial'
          heroTitle.style.webkitTextFillColor = 'initial'
          heroTitle.style.color = 'rgb(217, 174, 84)' // text-primary-600 equivalent

          // 添加慢脈衝動畫
          heroTitle.classList.add('animate-slow-pulse')
        } else {
          // 恢復原始顏色
          heroTitle.style.background = 'none'
          heroTitle.style.webkitBackgroundClip = 'initial'
          heroTitle.style.backgroundClip = 'initial'
          heroTitle.style.webkitTextFillColor = 'initial'
          heroTitle.style.color = 'var(--theme-text, #ffffff)'

          // 移除慢脈衝動畫
          heroTitle.classList.remove('animate-slow-pulse')
        }
      })
    }

    // 處理主題變更事件
    document.addEventListener('themeChanged', (e: any) => {
      const theme = e.detail.theme
      const circleTextSpans = document.querySelectorAll('.circle-text span')
      const circleIcon = document.querySelector('.circle-icon svg')

      circleTextSpans.forEach(span => {
        const htmlSpan = span as HTMLElement
        if (theme === 'dark') {
          htmlSpan.style.color = 'rgba(255,255,255,0.6)'
        } else {
          htmlSpan.style.color = 'rgba(0,0,0,0.6)'
        }
      })

      // Update icon color
      if (circleIcon) {
        const svgElement = circleIcon as SVGElement
        if (theme === 'dark') {
          svgElement.style.color = 'rgba(255,255,255,0.8)'
        } else {
          svgElement.style.color = 'rgba(0,0,0,0.8)'
        }
      }
    })
  })
</script>
