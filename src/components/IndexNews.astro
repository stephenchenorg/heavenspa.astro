---
import { getArticles } from '@/api/articles'
import Button from '@/components/ui/Button.astro'
import { createNestedT } from '@/utils/i18n'
import { getLocale } from 'i18n:astro'
import Carousel from './ui/Carousel.astro'
import SectionTitle from './ui/SectionTitle.astro'

const t = await createNestedT()
const currentLocale = getLocale()
const isEnglish = currentLocale === 'en'

let articles = await getArticles()
articles = articles.slice(0, 6) // 只取前6筆資料

---

<section class="section-container-index" id="benefits" data-section="benefits">
  <!-- 標題區 -->
  <div class="news-section-title" data-animate="true">
    <SectionTitle title={t('news.sectionTitle')} subtitle={t('news.sectionSubtitle')} />
  </div>

  <!-- 響應式輪播 -->
  <div class="max-w-7xl mx-auto w-full mt-8 news-carousel-container" data-animate="carousel">
    {articles.length > 0 ? (
      <Carousel
        itemCount={articles.length}
        uniqueId="news"
        autoPlayInterval={2600}
      >
        {articles.map((article, articleIndex) => (
          <div
            class="carousel-slide flex-shrink-0 w-full md:w-1/2 lg:w-1/3"
            data-slide={articleIndex}
          >
            <div class="px-2">
              <div
                class="group cursor-pointer transition-transform duration-300 hover:-translate-y-2 relative"
                onclick={`window.location.href='/news/${article.id}'`}
              >
                <div class="relative w-full h-[400px] aspect-square overflow-hidden mb-4">
                  <!-- Background Image -->
                  <div
                    class="absolute inset-0 bg-cover bg-center"
                    style={`background-image: url('${article.cover || 'https://hamahairspa.com/wp-content/uploads/2024/06/%E5%A4%A7young-woman-lying-down-with-traditional-hot-stones-along-spi-e1719460788846.jpeg'}')`}
                  ></div>
                  <!-- Base Overlay for better text readability -->
                  <div class="absolute inset-0 bg-black/30"></div>
                  <!-- Hover Overlay -->
                  <div class="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                  <!-- Date Badge -->
                  <div class="absolute top-0 right-0 p-2 bg-[#D7AE54] text-center opacity-80">
                    <span class="block text-white/80 text-sm font-light">{article.year}</span>
                    <span class="block text-white text-4xl font-light">{article.month}</span>
                  </div>

                  <!-- Content -->
                  <div class="absolute inset-0 p-6 flex flex-col justify-between text-white">
                    <div class="flex flex-col space-y-3">
                      <!-- 標題 -->
                      <div class="space-y-1">
                        <h3
                          class={`font-bold leading-tight tracking-wide text-white ${isEnglish ? 'text-lg lg:text-xl line-clamp-3' : 'text-xl lg:text-2xl line-clamp-2'}`}
                          style="text-shadow: 2px 2px 8px rgba(0,0,0,0.8), 1px 1px 3px rgba(0,0,0,0.9);"
                        >
                          {article.title}
                        </h3>
                        <div class="w-12 h-0.5 bg-gradient-to-r from-white to-transparent rounded-full opacity-80 shadow-sm"></div>
                      </div>
                    </div>

                    <!-- 底部行動召喚 -->
                    { article.started_at && (
                        <div class="flex items-center justify-between">
                          <div class={`opacity-75 ${isEnglish ? 'text-xs leading-tight' : 'text-xs'}`}>
                            <span>{t('news.publishDate')} {article.started_at}</span>
                          </div>
                        </div>
                    )}
                  </div>

                  <!-- VIEW MORE Button Overlay -->
                  <Button
                    variant="ghost"
                    text={t('buttons.view-more')}
                    size="small"
                    icon="→"
                    wrapperClass="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                  />
                </div>
              </div>
            </div>
          </div>
        ))}
      </Carousel>
    ) : (
      <div class="flex flex-col items-center justify-center py-16 px-4">
        <div class="text-center max-w-md mx-auto">
          <!-- 圖示 -->
          <div class="mb-6">
            <svg
              class="w-20 h-20 mx-auto text-gray-300"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="1"
                d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2M4 13h2m13-8v.01M6 8v.01"
              ></path>
            </svg>
          </div>

          <!-- 主要訊息 -->
          <h3 class={`font-semibold text-gray-600 mb-3 ${isEnglish ? 'text-xl' : 'text-2xl'}`}>
            {isEnglish ? 'No News Available' : '暫時無新聞資訊'}
          </h3>

          <!-- 副標題 -->
          <p class={`text-gray-500 mb-6 leading-relaxed ${isEnglish ? 'text-sm' : 'text-base'}`}>
            {isEnglish ? 'There are currently no news articles to display. Please check back later for updates.' : '目前沒有可顯示的新聞資訊，請稍後再來查看最新消息。'}
          </p>

        </div>
      </div>
    )}
  </div>

  <!-- 只在有資料時顯示的按鈕區域 -->
  {articles.length > 0 && (
    <div class="mt-12 max-w-7xl mx-auto w-full">
      <Button href="/news" variant="outline" size="medium" text={t('news.more-news')} />
    </div>
  )}

</section>

<style>
  /* News Section Title Animation */
  .news-section-title {
    opacity: 0;
    transform: translateX(-50px) translateY(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .news-section-title.animate-in {
    opacity: 1;
    transform: translateX(0) translateY(0);
  }

  /* 分別控制主標題和副標題的動畫 */
  .news-section-title :global(h2) {
    opacity: 0;
    transform: translateX(-60px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-delay: 0.2s;
  }

  .news-section-title :global(h3) {
    opacity: 0;
    transform: translateY(40px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-delay: 0.4s;
  }

  .news-section-title.animate-in :global(h2) {
    opacity: 1;
    transform: translateX(0);
  }

  .news-section-title.animate-in :global(h3) {
    opacity: 1;
    transform: translateY(0);
  }

  /* News Carousel Animation */
  .news-carousel-container {
    opacity: 0;
    transform: translateY(60px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-delay: 0.6s; /* 在標題動畫後開始 */
  }

  .news-carousel-container.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Line clamp utilities for better text overflow handling */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* English text optimizations */
  .en-news-title {
    word-break: break-word;
    hyphens: auto;
    letter-spacing: 0.025em;
  }

  /* Responsive adjustments for English content */
  @media (max-width: 768px) {
    .en-news-title {
      font-size: 1rem;
      line-height: 1.3;
    }
  }

  /* Better spacing for news cards in English */
  .news-card-english {
    padding: 1rem;
  }

  @media (min-width: 1024px) {
    .news-card-english {
      padding: 1.5rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const titleElement = document.querySelector('.news-section-title')
    const carouselElement = document.querySelector('.news-carousel-container')

    // 創建 Intersection Observer
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            // 添加動畫類
            entry.target.classList.add('animate-in')

            // 動畫完成後停止觀察
            observer.unobserve(entry.target)
          }
        })
      },
      {
        threshold: 0.3, // 當元素 30% 可見時觸發
        rootMargin: '0px 0px -50px 0px' // 提前觸發動畫
      }
    )

    // 開始觀察標題和輪播
    if (titleElement) {
      observer.observe(titleElement)
    }
    if (carouselElement) {
      observer.observe(carouselElement)
    }
  })
</script>
