---
import {createNestedT} from '@/utils/i18n'
const t = await createNestedT()

export interface FaqItem {
    id: string
    title: string
    content: string
}

interface Props {
    faqs: FaqItem[]
}

const {faqs} = Astro.props
---
{faqs && faqs.length > 0 ? (
<div id="faq-accordion">
    {faqs.map(faq => (
    <div class="border-b" :key={faq.id} style="border-bottom-color: var(--color-primary-500);">
        <button
                type="button"
                class="flex items-center justify-between w-full py-5 font-medium text-gray-500 dark:text-gray-400 gap-3 faq-toggle"
                data-target={`faq-body-${faq.id}`}
        >
            <span class="text-lg font-bold " style="color: var(--theme-text);">
              {faq.title}
            </span>
            <svg class="w-3 h-3 transition-transform shrink-0" aria-hidden="true"
                 xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6"
                 style="color: var(--color-primary-600);">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M9 5 5 1 1 5"/>
            </svg>
        </button>
        <div id={`faq-body-${faq.id}`} class="hidden">
            <div class="mb-3 leading-relaxed typewriter-text" set:html={faq.content}></div>
        </div>
    </div>
    ))}
</div> ) : (
<div class="text-center py-16">
    <div class="max-w-md mx-auto">
        <div class="mb-6">
            <svg class="mx-auto h-16 w-16 opacity-30" style="color: var(--theme-text-secondary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z"/>
            </svg>
        </div>
        <h3 class="text-xl font-medium mb-2" style="color: var(--theme-text);">
            {t('faq.empty.title')}
        </h3>
        <p class="text-sm leading-relaxed" style="color: var(--theme-text-secondary);">
            {t('faq.empty.description')}
        </p>
    </div>
</div>
    )}


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toggles = document.querySelectorAll(".faq-toggle")

        toggles.forEach(btn => {
            btn.addEventListener("click", () => {
                const targetId = btn.getAttribute("data-target")
                const target = document.getElementById(targetId)

                // 關閉其他
                document.querySelectorAll("#faq-accordion div[id^='faq-body-']").forEach(el => {
                    if (el.id !== targetId) {
                        el.classList.add("hidden")
                        if ("querySelector" in el.previousElementSibling) {
                            el.previousElementSibling.querySelector("svg").classList.remove("rotate-180")
                        }
                    }
                })

                // 切換自己
                if (target) {
                    target.classList.toggle("hidden")
                    btn.querySelector("svg").classList.toggle("rotate-180")
                }
            })
        })
    })
</script>
