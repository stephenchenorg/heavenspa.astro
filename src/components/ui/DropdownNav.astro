---
export interface Props {
  text: string
  isActive?: boolean
  variant?: 'desktop' | 'mobile'
  i18nKey?: string
  items: Array<{
    href: string
    text: string
    i18nKey?: string
  }>
}

const {
  text,
  isActive = false,
  variant = 'desktop',
  i18nKey,
  items = [],
} = Astro.props

// 獲取當前路徑來判斷子選單項目是否為 active
const currentPath = Astro.url.pathname
function isItemActive(href: string) {
  return currentPath === href || currentPath.startsWith(href + '/')
}
---

{variant === 'desktop' ? (
  <div class={`simple-dropdown relative py-2 px-0.5 ${isActive ? 'is-current-page' : ''}`}>
    <button type="button" class="nav-item dropdown-btn cursor-pointer flex items-center bg-transparent border-none p-0 font-medium tracking-wide" style="color: var(--theme-nav-text, #000000); font-size: clamp(14px, 1.2vw, 18px);">
      <span data-i18n={i18nKey} class="font-medium tracking-wide">{text}</span>
      <svg class="dropdown-icon w-4 h-4 ml-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </button>
    <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>

    <div class="dropdown-content">
      {items.map(item => (
        <a href={item.href} class={`dropdown-link ${isItemActive(item.href) ? 'active' : ''}`}>
          <span data-i18n={item.i18nKey}>{item.text}</span>
        </a>
      ))}
    </div>
  </div>
) : (
  <div class="mobile-nav-dropdown">
    <div class={`mobile-nav-item mobile-dropdown-toggle cursor-pointer flex justify-between items-center ${isActive ? 'active' : ''}`} style="color: var(--theme-mobile-nav-text, #D7AE54);">
      <span data-i18n={i18nKey}>{text}</span>
      <svg class="mobile-dropdown-icon w-5 h-5 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
      <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
    </div>

    <div class="mobile-nav-submenu max-h-0 overflow-hidden transition-all duration-300 ease-out">
      {items.map(item => (
        <a href={item.href} class={`mobile-nav-subitem block py-3 pl-8 pr-4 transition-colors duration-200 ${isItemActive(item.href) ? 'active' : ''}`} style="color: var(--theme-mobile-nav-text, #D7AE54); opacity: 0.8;">
          <span data-i18n={item.i18nKey}>{item.text}</span>
        </a>
      ))}
    </div>
  </div>
)}
