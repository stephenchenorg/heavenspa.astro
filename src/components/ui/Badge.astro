---
export interface Props {
  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info'
  size?: 'small' | 'medium' | 'large'
  rounded?: boolean
  outline?: boolean
  dismissible?: boolean
  title: string
}

const {
  variant = 'default',
  size = 'medium',
  rounded = true,
  outline = false,
  dismissible = false,
  title,
} = Astro.props

// Size variants
const sizeClasses = {
  small: 'px-2 py-1 text-xs',
  medium: 'px-3 py-1 text-sm',
  large: 'px-4 py-2 text-base',
}

// Variant classes
const variantClasses = {
  default: outline 
    ? 'bg-transparent border border-gray-300 text-gray-700 dark:border-gray-600 dark:text-gray-300'
    : 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200',
  primary: outline
    ? 'bg-transparent border border-blue-500 text-blue-600 dark:text-blue-400'
    : 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',
  secondary: outline
    ? 'bg-transparent border border-gray-500 text-gray-600 dark:text-gray-400'
    : 'bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200',
  success: outline
    ? 'bg-transparent border border-green-500 text-green-600 dark:text-green-400'
    : 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',
  warning: outline
    ? 'bg-transparent border border-yellow-500 text-yellow-600 dark:text-yellow-400'
    : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
  danger: outline
    ? 'bg-transparent border border-red-500 text-red-600 dark:text-red-400'
    : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200',
  info: outline
    ? 'bg-transparent border border-cyan-500 text-cyan-600 dark:text-cyan-400'
    : 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-200',
}

const roundedClass = rounded ? 'rounded-full' : 'rounded'
const badgeClass = `inline-flex items-center gap-1 font-medium transition-all duration-200 ${sizeClasses[size]} ${variantClasses[variant]} ${roundedClass}`
---

<span class={badgeClass}>
  <slot>{title}</slot>
  {dismissible && (
    <button 
      type="button" 
      class="ml-1 hover:bg-black/10 dark:hover:bg-white/10 rounded-full p-0.5 transition-colors duration-200"
      onclick="this.parentElement.remove()"
      aria-label="關閉"
    >
      <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
      </svg>
    </button>
  )}
</span>