---
import type { TeamMember } from '@/types'
<<<<<<< HEAD
import { createAstroT } from '@/utils/astro-i18n'
=======
import { createNestedT } from '@/utils/i18n'

const t = await createNestedT()
>>>>>>> 4b24745840b0d08e49c055c897cc4c46c9f4dd90

interface Props {
  teamMember: TeamMember
}

const { teamMember } = Astro.props

// 建立翻譯函式
const t = createAstroT(Astro)

const weekDays = [
  { key: 'monday', label: t('schedule.monday') },
  { key: 'tuesday', label: t('schedule.tuesday') },
  { key: 'wednesday', label: t('schedule.wednesday') },
  { key: 'thursday', label: t('schedule.thursday') },
  { key: 'friday', label: t('schedule.friday') },
  { key: 'saturday', label: t('schedule.saturday') },
  { key: 'sunday', label: t('schedule.sunday') },
]

function getWorkingHours(day: string, member: TeamMember) {
  const startTime = member[`${day}_start` as keyof TeamMember] as string
  const endTime = member[`${day}_end` as keyof TeamMember] as string

  if (!startTime || !endTime) {
    return null
  }

  // 提取時間部分 (HH:MM)，移除日期部分
  const formatTime = (timeString: string) => {
    if (!timeString) return ''
    
    // 如果是完整的日期時間格式，提取時間部分
    if (timeString.includes('T') || timeString.includes(' ')) {
      const date = new Date(timeString)
      return date.toLocaleTimeString('en-GB', { 
        hour: '2-digit', 
        minute: '2-digit',
        hour12: false 
      })
    }
    
    // 如果已經是時間格式 (HH:MM)，直接返回
    return timeString
  }

  return { 
    start: formatTime(startTime), 
    end: formatTime(endTime) 
  }
}
---

<div class="space-y-2">
  {weekDays.map((day) => {
    const hours = getWorkingHours(day.key, teamMember)

    return (
      <div class="flex justify-between items-center py-2">
        <span class="font-medium text-[var(--theme-text,#1f2937)]">
          {day.label}
        </span>
        <span class="text-[var(--theme-text-secondary,#6b7280)]">
          {hours ? (
            `${hours.start} - ${hours.end}`
          ) : (
            <span class="text-[var(--theme-text-muted,#9ca3af)]">{t('schedule.rest')}</span>
          )}
        </span>
      </div>
    )
  })}
</div>