---
import SectionTitle from '@/components/ui/SectionTitle.astro'
import TeamCard from '@/components/ui/TeamCard.astro'
import { createAstroT } from '@/utils/astro-i18n'
import { getWeeklyRecommended } from '@/api/teams'
import type { TeamMember } from '@/types'

// 獲取本週推薦團隊成員
const teamMembers: TeamMember[] = await getWeeklyRecommended()

const t = createAstroT(Astro)
---
<section
  class="relative w-full min-h-[80vh] flex flex-col justify-center py-4 px-4 md:px-6 lg:px-8 md:py-8 lg:py-16"
  id="team"
  data-section="team"
>

  <!-- 標題區 -->
  <SectionTitle title="本週推薦" subtitle="RECOMMENDED" />

  <!-- Airbnb 風格卡片網格 -->
  <div class="max-w-7xl mx-auto w-full">
    <!-- 桌面和平板：網格布局 -->
    <div class="hidden sm:grid grid-cols-2 lg:grid-cols-3 gap-6">
      {teamMembers.map(member => (
        <TeamCard
          member={member}
          uniqueId={member.title}
        />
      ))}
    </div>

    <!-- 手機版：整體輪播布局 -->
    <div class="sm:hidden">
      <div class="mobile-team-carousel relative overflow-hidden">
        <!-- 輪播容器 -->
        <div class="mobile-carousel-track flex transition-transform duration-500 ease-out">
          {teamMembers.map((member, memberIndex) => (
            <div
              class="mobile-carousel-slide w-full flex-shrink-0 px-4"
              data-slide={memberIndex}
            >
              <div class="mx-auto max-w-sm">
                <TeamCard
                  member={member}
                  uniqueId={`${member.title}-mobile`}
                  isMobile={true}
                />
              </div>
            </div>
          ))}
        </div>

        <!-- 輪播指示器 -->
        <div class="mobile-carousel-dots flex justify-center mt-4 gap-2">
          {teamMembers.map((_, index) => (
            <button
              class="mobile-dot w-2.5 h-2.5 rounded-full transition-all duration-300 hover:scale-110"
              style="background-color: var(--theme-text); opacity: 0.3; transform: scale(1);"
              data-slide={index}
            ></button>
          ))}
        </div>

        <!-- 導航按鈕 -->
        <button
          class="mobile-carousel-prev absolute left-2 top-1/2 -translate-y-1/2 w-10 h-10 rounded-full flex items-center justify-center text-white z-10 transition-all duration-200 hover:scale-110 active:scale-95"
          style="background-color: rgba(0,0,0,0.6); backdrop-filter: blur(8px);"
        >
          ←
        </button>
        <button
          class="mobile-carousel-next absolute right-2 top-1/2 -translate-y-1/2 w-10 h-10 rounded-full flex items-center justify-center text-white z-10 transition-all duration-200 hover:scale-110 active:scale-95"
          style="background-color: rgba(0,0,0,0.6); backdrop-filter: blur(8px);"
        >
          →
        </button>
      </div>
    </div>
  </div>

  <!-- 查看更多按鈕 -->
  <div class="mt-12 max-w-7xl mx-auto w-full">
    <button
      class="px-6 py-3 border rounded-lg font-medium transition-all duration-200 hover:scale-105"
      style="border-color: var(--theme-text); color: var(--theme-text); background-color: transparent;"
      onmouseover="this.style.backgroundColor=getComputedStyle(document.documentElement).getPropertyValue('--theme-text'); this.style.color=getComputedStyle(document.documentElement).getPropertyValue('--theme-bg');"
      onmouseout="this.style.backgroundColor='transparent'; this.style.color=getComputedStyle(document.documentElement).getPropertyValue('--theme-text');"
    >
<span data-i18n="team.more-members">{t('team.more-members')}</span>
    </button>
  </div>

  <!-- Marquee Section -->
  <div class="mt-16 overflow-hidden bg-gray-500/30">
    <div class="py-4">
      <div class="marquee-container">
        <div class="marquee-content flex items-center space-x-8 animate-marquee">
          <span class="text-white font-medium whitespace-nowrap">專業服務團隊</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">頂級 SPA 體驗</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">個人化服務</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">專業認證技師</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">舒適私密環境</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">全預約制服務</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">專業服務團隊</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">頂級 SPA 體驗</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">個人化服務</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">專業認證技師</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">舒適私密環境</span>
          <span class="text-white/70">•</span>
          <span class="text-white font-medium whitespace-nowrap">全預約制服務</span>
        </div>
      </div>
    </div>
  </div>

</section>

<script>
  // 手機版整體輪播功能
  document.addEventListener('DOMContentLoaded', () => {
    const mobileCarousel = document.querySelector('.mobile-team-carousel')
    if (mobileCarousel) {
      const track = mobileCarousel.querySelector('.mobile-carousel-track')
      const slides = mobileCarousel.querySelectorAll('.mobile-carousel-slide')
      const dots = mobileCarousel.querySelectorAll('.mobile-dot')
      const prevBtn = mobileCarousel.querySelector('.mobile-carousel-prev')
      const nextBtn = mobileCarousel.querySelector('.mobile-carousel-next')
      
      if (slides.length <= 1) return // 只有一張時不需要輪播
      
      let currentIndex = 0
      let mobileAutoTimer: NodeJS.Timeout | null = null
      
      // 更新輪播位置
      function updateCarouselPosition() {
        const translateX = -currentIndex * 100
        if (track) {
          (track as HTMLElement).style.transform = `translateX(${translateX}%)`
        }
        
        // 更新指示器
        dots.forEach((dot, index) => {
          const dotElement = dot as HTMLElement
          if (index === currentIndex) {
            dotElement.style.opacity = '1'
            dotElement.style.transform = 'scale(1.2)'
          } else {
            dotElement.style.opacity = '0.3'
            dotElement.style.transform = 'scale(1)'
          }
        })
      }
      
      // 下一張
      function nextMobileSlide() {
        currentIndex = (currentIndex + 1) % slides.length
        updateCarouselPosition()
      }
      
      // 上一張
      function prevMobileSlide() {
        currentIndex = currentIndex === 0 ? slides.length - 1 : currentIndex - 1
        updateCarouselPosition()
      }
      
      // 自動輪播
      function startMobileAutoSlide() {
        if (mobileAutoTimer) {
          clearInterval(mobileAutoTimer)
        }
        mobileAutoTimer = setInterval(() => {
          nextMobileSlide()
        }, 5000) // 每5秒切換
      }
      
      function stopMobileAutoSlide() {
        if (mobileAutoTimer) {
          clearInterval(mobileAutoTimer)
          mobileAutoTimer = null
        }
      }
      
      // 按鈕事件
      nextBtn?.addEventListener('click', () => {
        nextMobileSlide()
        stopMobileAutoSlide()
        startMobileAutoSlide()
      })
      
      prevBtn?.addEventListener('click', () => {
        prevMobileSlide()
        stopMobileAutoSlide()
        startMobileAutoSlide()
      })
      
      // 指示器點擊
      dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          currentIndex = index
          updateCarouselPosition()
          stopMobileAutoSlide()
          startMobileAutoSlide()
        })
      })
      
      // 觸控滑動支援
      let touchStartX = 0
      let touchIsDragging = false
      
      mobileCarousel.addEventListener('touchstart', (e: Event) => {
        const touchEvent = e as TouchEvent
        touchStartX = touchEvent.touches[0].clientX
        touchIsDragging = true
        stopMobileAutoSlide()
      })
      
      mobileCarousel.addEventListener('touchend', (e: Event) => {
        if (!touchIsDragging) return
        
        const touchEvent = e as TouchEvent
        const touchEndX = touchEvent.changedTouches[0].clientX
        const diffX = touchStartX - touchEndX
        
        // 檢測滑動距離
        if (Math.abs(diffX) > 50) {
          if (diffX > 0) {
            // 向左滑動，下一張
            nextMobileSlide()
          } else {
            // 向右滑動，上一張
            prevMobileSlide()
          }
        }
        
        touchIsDragging = false
        startMobileAutoSlide()
      })
      
      updateCarouselPosition()
      
      // 延遲啟動自動輪播，確保頁面完全載入
      setTimeout(() => {
        startMobileAutoSlide()
      }, 1000)
      
      // 暫停/恢復自動輪播
      mobileCarousel.addEventListener('mouseenter', stopMobileAutoSlide)
      mobileCarousel.addEventListener('mouseleave', startMobileAutoSlide)
    }
})
</script>

<style>
  /* Marquee Animation */
  .marquee-container {
    width: 100%;
    overflow: hidden;
  }

  .marquee-content {
    display: flex;
    animation: marquee 30s linear infinite;
    white-space: nowrap;
  }

  @keyframes marquee {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }

  /* Pause animation on hover */
  .marquee-container:hover .marquee-content {
    animation-play-state: paused;
  }
</style>
