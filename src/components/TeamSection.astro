---
import { gql, graphQLAPI } from '@/api'
import SectionTitle from '@/components/ui/SectionTitle.astro'

// 定義 API 回應的類型
export interface TeamCover {
  desktop: string
  desktop_blur: string
  mobile: string
  mobile_blur: string
}

export interface TeamImage {
  desktop: string
  desktop_blur: string
  mobile: string
  mobile_blur: string
}

export interface TeamImageItem {
  created_at: string
  id: number
  image: TeamImage
  updated_at: string
  is_default: boolean
}

export interface TeamCategory {
  title: string
}

export interface TeamMember {
  title: string
  category: TeamCategory
  cover: TeamCover
  images: TeamImageItem[]
  image: TeamImage
}

export interface TeamsResponse {
  teams: {
    data: TeamMember[]
  }
}

// GraphQL 查詢與錯誤處理
let teamMembers: TeamMember[] = []

try {
  const teamsData: TeamsResponse = await graphQLAPI(gql`
    query MyQuery {
      teams(sort_by: "asc", sort_column: "sort") {
        data {
          images {
            created_at
            id
            image {
              desktop
              desktop_blur
              mobile
              mobile_blur
            }
            updated_at
            is_default
          }
          image {
            desktop
            desktop_blur
            mobile
            mobile_blur
          }
          title
          category {
            title
          }
        }
      }
    }
  `)

  teamMembers = teamsData.teams.data || []
} catch (error) {
  console.error('Failed to fetch team data:', error)
  // 如果 API 失敗，提供預設資料
  teamMembers = [
    {
      title: '專業團隊',
      category: { title: '服務專員' },
      cover: {
        desktop: '/images/default-team.jpg',
        desktop_blur: '/images/default-team-blur.jpg',
        mobile: '/images/default-team-mobile.jpg',
        mobile_blur: '/images/default-team-mobile-blur.jpg',
      },
      images: [],
      image: {
        desktop: '/images/default-team.jpg',
        desktop_blur: '/images/default-team-blur.jpg',
        mobile: '/images/default-team-mobile.jpg',
        mobile_blur: '/images/default-team-mobile-blur.jpg',
      },
    },
  ]
}
---
<section class="section-container" id="team" data-section="team">

  <!-- 標題區 -->
  <SectionTitle title="我們的團隊" subtitle="OUR TEAM" />

  <!-- Airbnb 風格卡片網格 -->
  <div class="max-w-7xl mx-auto w-full">
    <!-- 桌面和平板：網格布局 -->
    <div class="hidden sm:grid grid-cols-3 lg:grid-cols-3 md:grid-cols-2 gap-6 lg:gap-5 md:gap-6">
      {teamMembers.map((member) => (
        <div class="group cursor-pointer transition-transform duration-300 hover:-translate-y-2">
          <!-- 圖片容器 -->
          <div class="relative w-full aspect-[4/3] rounded-xl overflow-hidden mb-4">
            <!-- 愛心收藏按鈕 -->
            <!--<button class="absolute top-3 right-3 z-10 w-7 h-7 flex items-center justify-center">-->
            <!--  <svg class="w-5 h-5 fill-none stroke-white stroke-2 drop-shadow-lg hover:fill-white transition-all duration-200" viewBox="0 0 24 24">-->
            <!--    <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" />-->
            <!--  </svg>-->
            <!--</button>-->

            <!-- 團隊成員照片轮播 -->
            <div class="carousel-container relative w-full h-full" data-member-id={member.title}>
              <div class="carousel-images absolute inset-0">
                {/* 主图片 */}
                <picture class="carousel-slide block w-full h-full absolute inset-0 opacity-100 transition-opacity duration-500">
                  <source media="(max-width: 768px)" srcset={member.image?.mobile || member.cover?.mobile} />
                  <img
                    src={member.image?.desktop || member.cover?.desktop}
                    alt={member.title}
                    loading="lazy"
                    onload="this.style.filter='none'"
                    style="filter: blur(5px); transition: filter 0.3s ease;"
                    class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                  />
                </picture>
                
                {/* 轮播图片 - 排除is_default=true的图片 */}
                {member.images && member.images.length > 0 && member.images
                  .filter(imageItem => !imageItem.is_default)
                  .map((imageItem, imgIndex) => (
                  <picture class="carousel-slide block w-full h-full absolute inset-0 opacity-0 transition-opacity duration-500">
                    <source media="(max-width: 768px)" srcset={imageItem.image.mobile} />
                    <img
                      src={imageItem.image.desktop}
                      alt={`${member.title} - Image ${imgIndex + 1}`}
                      loading="lazy"
                      onload="this.style.filter='none'"
                      style="filter: blur(5px); transition: filter 0.3s ease;"
                      class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                    />
                  </picture>
                ))}
              </div>
              
              {/* 轮播指示器 */}
              {member.images && member.images.filter(imageItem => !imageItem.is_default).length > 0 && (
                <div class="carousel-dots absolute bottom-2 left-1/2 -translate-x-1/2 flex gap-1">
                  <div class="carousel-dot w-1.5 h-1.5 rounded-full bg-white/80 cursor-pointer transition-all duration-200 active"></div>
                  {member.images.filter(imageItem => !imageItem.is_default).map((_) => (
                    <div class="carousel-dot w-1.5 h-1.5 rounded-full bg-white/40 cursor-pointer transition-all duration-200 hover:bg-white/60"></div>
                  ))}
                </div>
              )}
            </div>

            <!-- 評級標籤 (左下角) -->
            <div class="absolute bottom-3 left-3 bg-black/70 text-white px-2 py-1 rounded-md text-xs font-medium backdrop-blur-sm">
              ⭐ {member.category.title}
            </div>
          </div>

          <!-- 卡片資訊 -->
          <div class="space-y-1">
            <!-- 標題和評分 -->
            <div class="flex items-start justify-between">
              <h3 class="text-base font-semibold text-black leading-tight line-clamp-1 flex-1 mr-2">
                {member.title}
              </h3>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- 手機版：水平滾動布局 -->
    <div class="sm:hidden">
      <div class="flex gap-4 overflow-x-auto pb-4 scrollbar-hide -mx-6 px-6">
        {teamMembers.map((member) => (
          <div class="group cursor-pointer transition-transform duration-300 hover:-translate-y-2 flex-shrink-0 w-[300px]">
            <!-- 圖片容器 -->
            <div class="relative w-full aspect-[4/3] rounded-xl overflow-hidden mb-4">
              <!-- 愛心收藏按鈕 -->
              <button class="absolute top-3 right-3 z-10 w-7 h-7 flex items-center justify-center">
                <svg class="w-5 h-5 fill-none stroke-white stroke-2 drop-shadow-lg hover:fill-white transition-all duration-200" viewBox="0 0 24 24">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" />
                </svg>
              </button>

              <!-- 團隊成員照片轮播 -->
              <div class="carousel-container relative w-full h-full" data-member-id={`${member.title}-mobile`}>
                <div class="carousel-images absolute inset-0">
                  {/* 主图片 */}
                  <picture class="carousel-slide block w-full h-full absolute inset-0 opacity-100 transition-opacity duration-500">
                    <source media="(max-width: 768px)" srcset={member.image?.mobile || member.cover?.mobile} />
                    <img
                      src={member.image?.desktop || member.cover?.desktop}
                      alt={member.title}
                      loading="lazy"
                      onload="this.style.filter='none'"
                      style="filter: blur(5px); transition: filter 0.3s ease;"
                      class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                    />
                  </picture>
                  
                  {/* 轮播图片 - 排除is_default=true的图片 */}
                  {member.images && member.images.length > 0 && member.images
                    .filter(imageItem => !imageItem.is_default)
                    .map((imageItem, imgIndex) => (
                    <picture class="carousel-slide block w-full h-full absolute inset-0 opacity-0 transition-opacity duration-500">
                      <source media="(max-width: 768px)" srcset={imageItem.image.mobile} />
                      <img
                        src={imageItem.image.desktop}
                        alt={`${member.title} - Image ${imgIndex + 1}`}
                        loading="lazy"
                        onload="this.style.filter='none'"
                        style="filter: blur(5px); transition: filter 0.3s ease;"
                        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                      />
                    </picture>
                  ))}
                </div>
                
                {/* 轮播指示器 */}
                {member.images && member.images.filter(imageItem => !imageItem.is_default).length > 0 && (
                  <div class="carousel-dots absolute bottom-2 left-1/2 -translate-x-1/2 flex gap-1">
                    <div class="carousel-dot w-1.5 h-1.5 rounded-full bg-white/80 cursor-pointer transition-all duration-200 active"></div>
                    {member.images.filter(imageItem => !imageItem.is_default).map(() => (
                      <div class="carousel-dot w-1.5 h-1.5 rounded-full bg-white/40 cursor-pointer transition-all duration-200 hover:bg-white/60"></div>
                    ))}
                  </div>
                )}
              </div>

              <!-- 評級標籤 (左下角) -->
              <div class="absolute bottom-3 left-3 bg-black/70 text-white px-2 py-1 rounded-md text-xs font-medium backdrop-blur-sm">
                ⭐ {member.category.title}
              </div>
            </div>

            <!-- 卡片資訊 -->
            <div class="space-y-1">
              <!-- 標題和評分 -->
              <div class="flex items-start justify-between">
                <h3 class="text-base font-semibold text-black leading-tight line-clamp-1 flex-1 mr-2">
                  {member.title}
                </h3>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- 查看更多按鈕 -->
  <div class="mt-12 max-w-7xl mx-auto w-full">
    <button class="px-6 py-3 border rounded-lg font-medium transition-colors duration-200" style="border-color: var(--theme-text); color: var(--theme-text);" onmouseover="this.style.backgroundColor=getComputedStyle(document.documentElement).getPropertyValue('--theme-text'); this.style.color=getComputedStyle(document.documentElement).getPropertyValue('--theme-bg');" onmouseout="this.style.backgroundColor='transparent'; this.style.color=getComputedStyle(document.documentElement).getPropertyValue('--theme-text');">
      顯示更多團隊成員
    </button>
  </div>
</section>

<script>
// 团队图片轮播功能
document.addEventListener('DOMContentLoaded', function() {
  // 初始化所有轮播容器
  const carouselContainers = document.querySelectorAll('.carousel-container');
  
  carouselContainers.forEach(container => {
    const slides = container.querySelectorAll('.carousel-slide');
    const dots = container.querySelectorAll('.carousel-dot');
    
    if (slides.length <= 1) return; // 只有一张图片时不需要轮播
    
    let currentSlide = 0;
    let autoSlideTimer: NodeJS.Timeout | null = null;
    
    // 显示指定的幻灯片
    function showSlide(index: number) {
      // 隐藏所有幻灯片
      slides.forEach(slide => {
        (slide as HTMLElement).style.opacity = '0';
      });
      
      // 重置所有指示器
      dots.forEach(dot => {
        dot.classList.remove('active');
        (dot as HTMLElement).style.backgroundColor = 'rgba(255, 255, 255, 0.4)';
      });
      
      // 显示当前幻灯片
      if (slides[index]) {
        (slides[index] as HTMLElement).style.opacity = '1';
      }
      
      // 激活当前指示器
      if (dots[index]) {
        dots[index].classList.add('active');
        (dots[index] as HTMLElement).style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
      }
    }
    
    // 下一张幻灯片
    function nextSlide() {
      currentSlide = (currentSlide + 1) % slides.length;
      showSlide(currentSlide);
    }
    
    // 自动轮播
    function startAutoSlide() {
      autoSlideTimer = setInterval(nextSlide, 3000); // 每3秒切换
    }
    
    function stopAutoSlide() {
      if (autoSlideTimer) {
        clearInterval(autoSlideTimer);
        autoSlideTimer = null;
      }
    }
    
    // 指示器点击事件
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentSlide = index;
        showSlide(currentSlide);
        stopAutoSlide();
        startAutoSlide(); // 重新开始自动轮播
      });
    });
    
    // 鼠标悬停时暂停轮播
    container.addEventListener('mouseenter', stopAutoSlide);
    container.addEventListener('mouseleave', startAutoSlide);
    
    // 触摸事件支持（移动设备）
    let startX = 0;
    let isDragging = false;
    
    container.addEventListener('touchstart', (e) => {
      const touchEvent = e as TouchEvent;
      startX = touchEvent.touches[0].clientX;
      isDragging = true;
      stopAutoSlide();
    });
    
    container.addEventListener('touchmove', (e) => {
      if (!isDragging) return;
      e.preventDefault();
    });
    
    container.addEventListener('touchend', (e) => {
      if (!isDragging) return;
      
      const touchEvent = e as TouchEvent;
      const endX = touchEvent.changedTouches[0].clientX;
      const diffX = startX - endX;
      
      if (Math.abs(diffX) > 50) { // 最小滑动距离
        if (diffX > 0) {
          // 向左滑动，下一张
          nextSlide();
        } else {
          // 向右滑动，上一张
          currentSlide = currentSlide === 0 ? slides.length - 1 : currentSlide - 1;
          showSlide(currentSlide);
        }
      }
      
      isDragging = false;
      startAutoSlide();
    });
    
    // 初始化显示第一张幻灯片
    showSlide(0);
    
    // 开始自动轮播
    startAutoSlide();
  });
});
</script>

<style>
  /* 轮播容器样式 */
  .carousel-container {
    position: relative;
    overflow: hidden;
  }
  
  .carousel-slide {
    transition: opacity 0.5s ease-in-out;
  }
  
  .carousel-dots {
    z-index: 10;
  }
  
  .carousel-dot {
    transition: all 0.2s ease;
  }
  
  .carousel-dot:hover {
    transform: scale(1.2);
  }
  
  .carousel-dot.active {
    background-color: rgba(255, 255, 255, 0.8) !important;
    transform: scale(1.1);
  }
  
  /* 防止轮播时的闪烁 */
  .carousel-images {
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }
</style>
