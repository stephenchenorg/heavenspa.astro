---
import type { TeamMember } from '@/types'
import Button from '@/components/ui/Button.astro'
import Carousel from '@/components/ui/Carousel.astro'
import SectionTitle from '@/components/ui/SectionTitle.astro'
import TeamCard from '@/components/ui/TeamCard.astro'
import { createNestedT } from '@/utils/i18n'

interface Props {
  teamMembers: TeamMember[]
}

const { teamMembers } = Astro.props
const t = await createNestedT()
---
<section
  class="section-container-index"
  id="team"
  data-section="team"
>
  <!-- 標題區 -->
  <div class="team-section-title" data-animate="true">
    <SectionTitle title={t('team.recommended.title')} subtitle={t('team.recommended.subtitle')} />
  </div>

  <!-- 響應式輪播 -->
  <div class="max-w-7xl mx-auto w-full mt-8 team-carousel-container" data-animate="carousel">
    <Carousel
      itemCount={teamMembers.length}
      uniqueId="team"
      autoPlayInterval={5000}
    >
      {teamMembers.map((member, memberIndex) => (
        <div
          class="carousel-slide flex-shrink-0 w-full md:w-1/2 lg:w-1/3"
          data-slide={memberIndex}
        >
          <div class="px-2">
            <TeamCard
              member={member}
              uniqueId={`${member.title}-${memberIndex}`}
            />
          </div>
        </div>
      ))}
    </Carousel>
  </div>

  <!-- 查看更多按鈕 -->
  <div class="mt-12 max-w-7xl mx-auto w-full">
    <Button href="/team" variant="outline" size="medium" text={t('team.more-members')} />
  </div>

  <!-- Marquee Section -->
  <div class="mt-16 overflow-hidden bg-color-primary-600/30">
    <div class="py-4">
      <div class="marquee-container">
        <div class="marquee-content flex items-center space-x-8">
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee1')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee2')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee3')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee4')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee5')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee6')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee1')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee2')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee3')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee4')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee5')}</span>
          <span class="text-theme-text/70">•</span>
          <span class="text-theme-text font-medium whitespace-nowrap">{ t('marquee.marquee6')}</span>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Team Section Title Animation */
  .team-section-title {
    opacity: 0;
    transform: translateX(-50px) translateY(30px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .team-section-title.animate-in {
    opacity: 1;
    transform: translateX(0) translateY(0);
  }

  /* 分別控制主標題和副標題的動畫 */
  .team-section-title :global(h2) {
    opacity: 0;
    transform: translateX(-60px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-delay: 0.2s;
  }

  .team-section-title :global(h3) {
    opacity: 0;
    transform: translateY(40px);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-delay: 0.4s;
  }

  .team-section-title.animate-in :global(h2) {
    opacity: 1;
    transform: translateX(0);
  }

  .team-section-title.animate-in :global(h3) {
    opacity: 1;
    transform: translateY(0);
  }

  /* Team Carousel Animation */
  .team-carousel-container {
    opacity: 0;
    transform: translateY(60px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-delay: 0.6s; /* 在標題動畫後開始 */
  }

  .team-carousel-container.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Marquee Animation */
  .marquee-container {
    width: 100%;
    overflow: hidden;
  }

  .marquee-content {
    display: flex;
    animation: marquee 30s linear infinite;
    white-space: nowrap;
  }

  @keyframes marquee {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }

  /* Pause animation on hover */
  .marquee-container:hover .marquee-content {
    animation-play-state: paused;
  }

</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const titleElement = document.querySelector('.team-section-title')
    const carouselElement = document.querySelector('.team-carousel-container')

    // 創建 Intersection Observer
    const observer = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            // 添加動畫類
            entry.target.classList.add('animate-in')

            // 動畫完成後停止觀察
            observer.unobserve(entry.target)
          }
        })
      },
      {
        threshold: 0.3, // 當元素 30% 可見時觸發
        rootMargin: '0px 0px -50px 0px', // 提前觸發動畫
    }
    )

    // 開始觀察標題和輪播
    if (titleElement) {
      observer.observe(titleElement)
    }
    if (carouselElement) {
      observer.observe(carouselElement)
    }
  })
</script>
