---
// Theme Controller Component
---

<!-- Simple Theme Toggle Button -->
<div class="theme-controller-wrapper">
  <button
    class="w-12 h-12 bg-transparent text-current border-none rounded-full flex items-center justify-center cursor-pointer transition-all duration-300 ease-in-out relative overflow-hidden hover:scale-110 active:scale-95"
    id="theme-toggle"
    aria-label="Toggle theme"
    title="切換主題"
    style="color: var(--theme-nav-text, #000000);"
  >
    <!-- Light Mode Icon (Sun) -->
    <svg
      class="theme-icon absolute transition-all duration-[400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-100 rotate-0 scale-100"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
    >
      <circle cx="12" cy="12" r="5" />
      <line x1="12" y1="1" x2="12" y2="3" />
      <line x1="12" y1="21" x2="12" y2="23" />
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64" />
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78" />
      <line x1="1" y1="12" x2="3" y2="12" />
      <line x1="21" y1="12" x2="23" y2="12" />
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36" />
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22" />
    </svg>

    <!-- Dark Mode Icon (Moon) -->
    <svg
      class="theme-icon absolute transition-all duration-[400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-0 rotate-90 scale-75 w-5 h-5 md:w-6 md:h-6"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
    >
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
    </svg>
  </button>
</div>

<!-- TailwindCSS dark theme icon states handled by JavaScript -->

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Use querySelectorAll to handle multiple theme toggle buttons (desktop + mobile)
    const themeToggles = document.querySelectorAll('#theme-toggle')

    // Get saved theme or default to light
    let currentTheme = localStorage.getItem('theme') || 'light'

    // Apply saved theme
    applyTheme(currentTheme)

    // Add event listeners to all theme toggle buttons
    themeToggles.forEach(themeToggle => {
      themeToggle?.addEventListener('click', () => {
        // Toggle between themes
        currentTheme = currentTheme === 'light' ? 'dark' : 'light'

        // Apply new theme
        applyTheme(currentTheme)

        // Save to localStorage
        localStorage.setItem('theme', currentTheme)
      })
    })

    function applyTheme(theme: string) {
      const html = document.documentElement
    if (theme === 'dark') {
        html.classList.add('dark')
    } else {
        html.classList.remove('dark')
    }
    }

    // Handle keyboard shortcuts (Ctrl+Shift+T for quick toggle)
    document.addEventListener('keydown', e => {
      if (e.ctrlKey && e.shiftKey && e.key === 'T') {
        e.preventDefault()
        // Click the first available theme toggle button
        const firstToggle = themeToggles[0] as HTMLElement
      firstToggle?.click()
      }
    })
  })
</script>
