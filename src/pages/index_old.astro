---
import { seoMeta } from '@stephenchenorg/astro/page'
import Layout from '@/layouts/Layout.astro'

const meta = seoMeta({
  title: 'Heaven Spa - 極致放鬆體驗',
})
---

<Layout meta={meta}>
  <!-- 導航列 -->
  <nav class="main-nav">
    <div class="nav-logo">
      <div class="logo-icon">HS</div>
    </div>
    <div class="nav-menu">
      <a href="#home" class="nav-item active">HOME</a>
      <a href="#services" class="nav-item">SERVICES</a>
      <a href="#about" class="nav-item">ABOUT</a>
      <a href="#blog" class="nav-item">BLOG</a>
      <a href="#contact" class="nav-item">CONTACT</a>
      <a href="#more" class="nav-item">MORE</a>
    </div>
    <div class="nav-contact">
      <button class="contact-btn">CONTACT</button>
    </div>
  </nav>

  <!-- Hero Banner -->
  <section class="hero-banner" id="hero">
    <div class="hero-content">
      <div class="hero-text">
        <h1 class="hero-title">
          <span class="title-line">EMBRACE</span>
          <span class="title-line">YOURSELF</span>
        </h1>
        <p class="hero-subtitle">Wellness</p>
      </div>
    </div>
    
    <!-- 旋轉圓圈元素 -->
    <div class="rotating-circle">
      <div class="circle-text">
        <span>SCROLL TO EXPLORE • SCROLL TO EXPLORE • </span>
      </div>
      <div class="circle-arrow">↓</div>
    </div>
    
    <!-- 側邊文字 -->
    <div class="side-text">
      <span>& SPA</span>
    </div>
    
    <div class="hero-bg">
      <div class="hero-image"></div>
    </div>
  </section>

  <!-- About Section -->
  <section class="about-section">
    <div class="section-content">
      <h2 class="section-title">關於我們</h2>
      <p class="section-text">
        Heaven Spa 致力於提供最頂級的 SPA 體驗，結合傳統療法與現代技術，
        為您創造身心靈完全放鬆的奢華時光。
      </p>
    </div>
  </section>

  <!-- Services Section -->
  <section class="services-section">
    <div class="section-content">
      <h2 class="section-title">精選服務</h2>
      <div class="services-grid">
        <div class="service-card">
          <h3>花瓣芳療</h3>
          <p>結合花精與芳香療法的極致體驗</p>
        </div>
        <div class="service-card">
          <h3>熱石按摩</h3>
          <p>溫熱石頭深層肌肉放鬆療程</p>
        </div>
        <div class="service-card">
          <h3>鑽石煥膚</h3>
          <p>奢華鑽石微晶煥膚護理</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Contact Section -->
  <section class="contact-section">
    <div class="section-content">
      <h2 class="section-title">預約體驗</h2>
      <p class="section-text">立即預約您的專屬放鬆時光</p>
      <button class="cta-button">立即預約</button>
    </div>
  </section>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      line-height: 1.6;
      overflow-x: hidden;
    }

    /* 導航列樣式 */
    .main-nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 2rem 4rem;
      background: rgba(196, 139, 110, 0.1);
      backdrop-filter: blur(10px);
    }

    .nav-logo .logo-icon {
      width: 40px;
      height: 40px;
      background: white;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      color: #c48b6e;
      font-size: 14px;
    }

    .nav-menu {
      display: flex;
      gap: 2.5rem;
    }

    .nav-item {
      color: white;
      text-decoration: none;
      font-size: 0.9rem;
      font-weight: 400;
      letter-spacing: 1px;
      transition: opacity 0.3s ease;
    }

    .nav-item:hover,
    .nav-item.active {
      opacity: 0.7;
    }

    .contact-btn {
      background: white;
      color: #c48b6e;
      border: none;
      padding: 12px 24px;
      border-radius: 25px;
      font-size: 0.8rem;
      font-weight: 500;
      letter-spacing: 1px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .contact-btn:hover {
      background: rgba(255, 255, 255, 0.9);
      transform: translateY(-2px);
    }

    /* Hero Banner 樣式 */
    .hero-banner {
      position: relative;
      height: 100vh;
      background: linear-gradient(
        45deg,
        #c48b6e 0%,
        #d4a574 50%,
        #c48b6e 100%
      );
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .hero-bg {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }

    .hero-image {
      width: 100%;
      height: 100%;
      background: url('https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80') center/cover;
      mix-blend-mode: multiply;
      opacity: 0.8;
    }

    .hero-content {
      position: relative;
      z-index: 10;
      text-align: center;
    }

    .hero-title {
      font-size: clamp(4rem, 12vw, 9rem);
      font-weight: 900;
      line-height: 0.85;
      color: white;
      text-transform: uppercase;
      letter-spacing: -0.02em;
      margin-bottom: 2rem;
    }

    .title-line {
      display: block;
      animation: fadeInUp 1s ease 0.5s both;
    }

    .title-line:nth-child(2) {
      animation-delay: 0.7s;
    }

    .hero-subtitle {
      font-size: 1.2rem;
      color: white;
      font-weight: 300;
      letter-spacing: 3px;
      text-transform: uppercase;
      animation: fadeInUp 1s ease 0.9s both;
    }

    /* 旋轉圓圈樣式 */
    .rotating-circle {
      position: absolute;
      bottom: 5rem;
      right: 5rem;
      width: 120px;
      height: 120px;
      z-index: 10;
    }

    .circle-text {
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 1px solid rgba(255, 255, 255, 0.3);
      animation: rotate 20s linear infinite;
    }

    .circle-text span {
      position: absolute;
      left: 50%;
      top: 10px;
      font-size: 10px;
      color: white;
      letter-spacing: 2px;
      font-weight: 400;
      transform-origin: 0 50px;
      white-space: nowrap;
    }

    .circle-arrow {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: white;
      font-size: 1.5rem;
      animation: bounce 2s ease-in-out infinite;
    }

    /* 側邊文字 */
    .side-text {
      position: absolute;
      left: 3rem;
      top: 50%;
      transform: translateY(-50%) rotate(-90deg);
      z-index: 10;
    }

    .side-text span {
      color: white;
      font-size: 1rem;
      letter-spacing: 3px;
      font-weight: 300;
      text-transform: uppercase;
    }

    /* 其他區塊樣式 */
    .about-section,
    .services-section,
    .contact-section {
      padding: 8rem 2rem;
      text-align: center;
    }

    .section-content {
      max-width: 1200px;
      margin: 0 auto;
    }

    .section-title {
      font-size: 3rem;
      font-weight: 300;
      margin-bottom: 2rem;
      color: #333;
    }

    .section-text {
      font-size: 1.1rem;
      color: #666;
      line-height: 1.8;
      margin-bottom: 3rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    .services-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-top: 4rem;
    }

    .service-card {
      padding: 2rem;
      background: #f8f9fa;
      border-radius: 10px;
      transition: transform 0.3s ease;
    }

    .service-card:hover {
      transform: translateY(-10px);
    }

    .service-card h3 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      color: #333;
    }

    .service-card p {
      color: #666;
      line-height: 1.6;
    }

    .cta-button {
      background: #c48b6e;
      color: white;
      border: none;
      padding: 1rem 2rem;
      border-radius: 30px;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .cta-button:hover {
      background: #b37a5e;
      transform: translateY(-2px);
    }

    /* 動畫效果 */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(60px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes rotate {
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(360deg);
      }
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translate(-50%, -50%) translateY(0);
      }
      40% {
        transform: translate(-50%, -50%) translateY(-10px);
      }
      60% {
        transform: translate(-50%, -50%) translateY(-5px);
      }
    }

    /* 響應式設計 */
    @media (max-width: 768px) {
      .main-nav {
        padding: 1rem 2rem;
      }

      .nav-menu {
        display: none;
      }

      .hero-title {
        font-size: 4rem;
      }

      .rotating-circle {
        bottom: 2rem;
        right: 2rem;
        width: 80px;
        height: 80px;
      }

      .circle-text span {
        font-size: 8px;
        transform-origin: 0 35px;
      }

      .side-text {
        left: 1rem;
      }

      .services-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>

    .scroll-line {
      width: 1px;
      height: 60px;
      background: linear-gradient(to bottom, transparent, rgba(255,255,255,0.5), transparent);
      margin-bottom: 0.5rem;
    }

    .scroll-text {
      font-size: 0.8rem;
      font-weight: 300;
      letter-spacing: 1px;
      text-transform: uppercase;
      opacity: 0.7;
      margin-bottom: 0.5rem;
    }

    .scroll-arrow {
      animation: bounce 2s infinite;
      opacity: 0.7;
    }

    /* Floating Elements */
    .floating-elements {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 1;
    }

    .floating-element {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      animation: float 20s infinite linear;
    }

    .element-1 {
      width: 100px;
      height: 100px;
      top: 20%;
      left: 10%;
      animation-delay: 0s;
    }

    .element-2 {
      width: 60px;
      height: 60px;
      top: 60%;
      right: 15%;
      animation-delay: -5s;
    }

    .element-3 {
      width: 80px;
      height: 80px;
      bottom: 30%;
      left: 20%;
      animation-delay: -10s;
    }

    /* Fade in animations */
    .fade-in-up {
      opacity: 0;
      transform: translateY(30px);
      animation: fadeInUp 1s ease-out forwards;
    }

    .fade-in-up:nth-child(1) { animation-delay: 0.2s; }
    .fade-in-up:nth-child(2) { animation-delay: 0.4s; }
    .fade-in-up:nth-child(3) { animation-delay: 0.6s; }

    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-10px);
      }
      60% {
        transform: translateY(-5px);
      }
    }

    @keyframes float {
      0% {
        transform: translateY(0px) rotate(0deg);
      }
      33% {
        transform: translateY(-20px) rotate(120deg);
      }
      66% {
        transform: translateY(10px) rotate(240deg);
      }
      100% {
        transform: translateY(0px) rotate(360deg);
      }
    }

    /* Other sections styling */
    .sticky-section:nth-child(2) {
      background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
    }

    .sticky-section:nth-child(3) {
      background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);
    }

    .sticky-section:nth-child(4) {
      background: linear-gradient(135deg, #16a085 0%, #1abc9c 100%);
    }

    .sticky-section.active {
      opacity: 1;
      transform: scale(1);
    }

    .section-content {
      max-width: 1200px;
      padding: 0 2rem;
      color: white;
      text-align: center;
    }

    .hero-title {
      font-size: 4rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(45deg, #fff, #f0f8ff);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .hero-subtitle {
      font-size: 1.5rem;
      opacity: 0.9;
      margin-bottom: 3rem;
    }

    .hero-scroll-hint {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
      opacity: 0.7;
    }

    .scroll-arrow {
      width: 24px;
      height: 24px;
      border-right: 2px solid white;
      border-bottom: 2px solid white;
      transform: rotate(45deg);
      animation: bounce 2s infinite;
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: rotate(45deg) translateY(0);
      }
      40% {
        transform: rotate(45deg) translateY(-10px);
      }
      60% {
        transform: rotate(45deg) translateY(-5px);
      }
    }

    .section-title {
      font-size: 3rem;
      font-weight: 600;
      margin-bottom: 2rem;
    }

    .section-text {
      font-size: 1.2rem;
      opacity: 0.9;
      margin-bottom: 3rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    .features-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      margin-top: 3rem;
    }

    .feature-item {
      background: rgba(255, 255, 255, 0.1);
      padding: 2rem;
      border-radius: 1rem;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .feature-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
    }

    .feature-item h3 {
      font-size: 1.5rem;
      margin-bottom: 0.5rem;
    }

    .services-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-top: 3rem;
    }

    .service-card {
      background: rgba(255, 255, 255, 0.1);
      padding: 2rem;
      border-radius: 1rem;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: transform 0.3s ease;
    }

    .service-card:hover {
      transform: translateY(-5px);
    }

    .service-image {
      font-size: 4rem;
      margin-bottom: 1rem;
    }

    .service-card h3 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
    }

    .service-price {
      font-size: 1.5rem;
      font-weight: 600;
      color: #ffd700;
      display: block;
      margin-top: 1rem;
    }

    .contact-info {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      margin: 3rem 0;
    }

    .contact-item {
      background: rgba(255, 255, 255, 0.1);
      padding: 1.5rem;
      border-radius: 1rem;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .contact-item h3 {
      font-size: 1.5rem;
      margin-bottom: 0.5rem;
    }

    .cta-button {
      background: linear-gradient(45deg, #ff6b6b, #ee5a24);
      color: white;
      padding: 1rem 2rem;
      border: none;
      border-radius: 50px;
      font-size: 1.2rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 2rem;
    }

    .cta-button:hover {
      transform: scale(1.05);
      box-shadow: 0 10px 30px rgba(255, 107, 107, 0.4);
    }

    @media (max-width: 768px) {
      .hero-title {
        font-size: 2.5rem;
      }

      .section-title {
        font-size: 2rem;
      }

      .features-grid,
      .services-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>

  <script>
    // Enhanced sticky scroll animation with parallax effects
    function initStickyScroll() {
      const sections = document.querySelectorAll('.sticky-section') as NodeListOf<HTMLElement>;
      const progressBar = document.getElementById('scroll-progress') as HTMLElement;
      const container = document.querySelector('.sticky-scroll-container') as HTMLElement;
      const heroBg = document.querySelector('.hero-bg') as HTMLElement;
      const floatingElements = document.querySelectorAll('.floating-element') as NodeListOf<HTMLElement>;
      
      if (!progressBar || !container) return;
      
      // Initialize fade-in animations
      function initFadeInAnimations() {
        const fadeElements = document.querySelectorAll('.fade-in-up') as NodeListOf<HTMLElement>;
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              (entry.target as HTMLElement).style.animationPlayState = 'running';
            }
          });
        }, {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        });
        
        fadeElements.forEach(el => {
          el.style.animationPlayState = 'paused';
          observer.observe(el);
        });
      }
      
      function updateSections() {
        const scrolled = window.pageYOffset;
        const containerHeight = container.offsetHeight;
        const windowHeight = window.innerHeight;
        const sectionHeight = windowHeight;
        
        // Update progress bar
        const progress = Math.min((scrolled / (containerHeight - windowHeight)) * 100, 100);
        progressBar.style.width = `${progress}%`;
        
        // Parallax effect for hero background
        if (heroBg && scrolled < windowHeight) {
          const parallaxSpeed = 0.5;
          heroBg.style.transform = `translateY(${scrolled * parallaxSpeed}px)`;
        }
        
        // Animate floating elements
        floatingElements.forEach((element, index) => {
          if (scrolled < windowHeight) {
            const speed = 0.3 + (index * 0.1);
            const yPos = scrolled * speed;
            const rotation = scrolled * 0.1;
            element.style.transform = `translateY(${yPos}px) rotate(${rotation}deg)`;
          }
        });
        
        // Update active section with enhanced animations
        sections.forEach((section, index) => {
          const sectionStart = index * sectionHeight;
          const sectionEnd = sectionStart + sectionHeight;
          const sectionMiddle = sectionStart + sectionHeight / 2;
          
          // Calculate section progress (0 to 1)
          const sectionProgress = Math.max(0, Math.min(1, 
            (scrolled - sectionStart + windowHeight / 2) / sectionHeight
          ));
          
          if (scrolled >= sectionStart - sectionHeight / 2 && scrolled < sectionEnd - sectionHeight / 2) {
            section.classList.add('active');
            
            // Enhanced scaling and opacity based on scroll position
            const distanceFromCenter = Math.abs(scrolled - sectionMiddle);
            const maxDistance = sectionHeight / 2;
            const centerProximity = Math.max(0, 1 - (distanceFromCenter / maxDistance));
            
            const scale = 0.85 + (centerProximity * 0.15);
            const opacity = 0.3 + (centerProximity * 0.7);
            
            section.style.transform = `scale(${scale})`;
            section.style.opacity = opacity.toString();
          } else {
            section.classList.remove('active');
            section.style.transform = 'scale(0.8)';
            section.style.opacity = '0';
          }
        });
      }
      
      // Smooth scroll for anchor links
      function initSmoothScroll() {
        document.querySelectorAll('a[href^="#"]').forEach((anchor: Element) => {
          anchor.addEventListener('click', function (e: Event) {
            e.preventDefault();
            const href = (anchor as HTMLAnchorElement).getAttribute('href');
            const target = href ? document.querySelector(href) : null;
            if (target) {
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });
      }
      
      // Scroll indicator click handler
      const scrollIndicator = document.querySelector('.scroll-indicator') as HTMLElement;
      if (scrollIndicator) {
        scrollIndicator.addEventListener('click', () => {
          window.scrollTo({
            top: window.innerHeight,
            behavior: 'smooth'
          });
        });
        scrollIndicator.style.cursor = 'pointer';
      }
      
      // Initialize first section as active
      if (sections[0]) {
        sections[0].classList.add('active');
        sections[0].style.opacity = '1';
        sections[0].style.transform = 'scale(1)';
      }
      
      // Optimized scroll listener with RAF
      let ticking = false;
      let lastScrollY = 0;
      
      window.addEventListener('scroll', () => {
        const currentScrollY = window.pageYOffset;
        
        if (!ticking) {
          requestAnimationFrame(() => {
            updateSections();
            lastScrollY = currentScrollY;
            ticking = false;
          });
          ticking = true;
        }
      }, { passive: true });
      
      // Initialize animations and smooth scroll
      initFadeInAnimations();
      initSmoothScroll();
      
      // Initial call
      updateSections();
      
      // Handle resize
      window.addEventListener('resize', () => {
        updateSections();
      });
    }
    
    // Initialize when DOM is loaded
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initStickyScroll);
    } else {
      initStickyScroll();
    }
    
    // Add loading animation
    window.addEventListener('load', () => {
      document.body.classList.add('loaded');
    });
  </script>
</Layout>
