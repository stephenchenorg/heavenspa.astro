---
import { seoMeta } from '@stephenchenorg/astro/page'
import Layout from '@/layouts/Layout.astro'
import Header from '@/layouts/partials/Header.astro'
import HeroBanner from '@/components/HeroBanner.astro'
import MemberBenefits from '@/components/MemberBenefits.astro'
import CourseCarousel from '@/components/CourseCarousel.vue'
import IntroSection from '@/components/IntroSection.astro'
import TeamSection from '@/components/TeamSection.astro';

const meta = seoMeta({
  title: 'Heaven Spa - 極致放鬆體驗',
})
---

<Layout meta={meta}>
  <Header />

  <!-- 內容容器 -->
  <div class="content-container">

  <!-- Hero Banner -->
  <section class="scroll-section hero-banner" id="home" data-section="home">
    <HeroBanner />
  </section>

  <!-- 堆疊卡片容器 -->
  <div class="stack-container">
    <!-- Intro Section -->
    <section class="stack-card intro-card" id="intro" data-section="intro">
      <IntroSection />
    </section>

    <!-- Team Section -->
    <section class="stack-card team-card" id="team" data-section="team">
      <TeamSection />
    </section>

    <!-- Course Section -->
    <section class="stack-card course-card" id="courses" data-section="courses">
      <CourseCarousel client:load />
    </section>

    <!-- Member Benefits Section -->
    <section class="stack-card benefits-card" id="benefits" data-section="benefits">
      <MemberBenefits />
    </section>
  </div>

  </div> <!-- 結束內容容器 -->

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html {
      scroll-behavior: smooth;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      line-height: 1.6;
      overflow-x: hidden;
      background: #111;
    }

    /* 內容容器 */
    .content-container {
      position: relative;
    }

    .scroll-section {
      position: relative;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* 堆疊卡片容器 */
    .stack-container {
      position: relative;
      height: 400vh; /* 創造足夠的滾動距離 */
      padding: 4rem 2rem; /* 上下4rem，左右2rem */
    }

    /* 堆疊卡片樣式 */
    .stack-card {
      position: sticky;
      top: 50px;
      width: 100%; /* 使用容器的100%寬度，由padding控制邊界 */
      height: 80vh; /* 減少高度為80vh */
      margin: 2.5vh auto; /* 上下各2.5vh邊界 */
      border-radius: 50px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transform: translateY(100px);
      transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      border: 1px solid rgba(255, 255, 255, 0.1);
      overflow: hidden;
      z-index: 1;
    }

    .stack-card.active {
      opacity: 1;
      transform: translateY(0);
      z-index: 10;
    }

    /* 不同卡片的背景色 */
    .intro-card {
      background: linear-gradient(135deg, #FCA777 0%, #F4A261 100%);
    }

    .team-card {
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .course-card {
      background: linear-gradient(135deg, #f8f6f0 0%, #f1ede4 100%);
    }

    .benefits-card {
      background: linear-gradient(135deg, #f8f6f0 0%, #ede7dc 100%);
    }

    @media (max-width: 768px) {
      .scroll-section {
        min-height: 80vh;
        height: auto;
        padding: 2rem 0;
      }

      .stack-container {
        padding: 2rem 1rem; /* 手機版上下2rem，左右1rem */
        height: 350vh;
      }

      .stack-card {
        width: 100%; /* 使用容器100%寬度 */
        height: 75vh; /* 手機版高度調整 */
        margin: 2vh auto; /* 手機版上下邊界 */
        border-radius: 30px;
        top: 30px;
      }
    }

    /* Hero Banner 樣式 */
    .hero-banner {
      position: relative;
      background: #C39270;
      overflow: hidden;
      width: 100%;
      height: 100vh;
    }


    /* 其他區塊樣式 */
    .about-section,
    .services-section,
    .contact-section {
      text-align: center;
      padding: 2rem;
      background: white;
    }


    .course-section-container {
      position: relative;
      z-index: 1;
      margin-bottom: 2rem;
    }

    .member-benefits-section {
      background: transparent;
      padding: 0;
      position: relative;
      z-index: 1;
      margin-top: -2rem; /* 讓兩個區塊間距更緊密 */
    }

    .member-benefits-section .member-benefits {
      padding: 0;
      min-height: 100vh;
    }

    .footer-section {
      background: transparent;
      padding: 0;
      height: auto;
      min-height: 100vh;
    }

    .footer-section .main-footer {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .section-content {
      max-width: 1200px;
      margin: 0 auto;
    }

    .section-title {
      font-size: 3rem;
      font-weight: 300;
      margin-bottom: 2rem;
      color: #333;
    }

    .section-text {
      font-size: 1.1rem;
      color: #666;
      line-height: 1.8;
      margin-bottom: 3rem;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

  </style>

  <script>
    // 等待 DOM 載入完成
    document.addEventListener('DOMContentLoaded', () => {
      // 堆疊卡片效果
      const stackCards = document.querySelectorAll('.stack-card') as NodeListOf<HTMLElement>;
      
      const stackObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('active');
            (entry.target as HTMLElement).style.zIndex = '10';
          } else {
            entry.target.classList.remove('active');
            (entry.target as HTMLElement).style.zIndex = '1';
          }
        });
      }, { 
        threshold: 0.3,
        rootMargin: '-50px 0px -50px 0px'
      });

      stackCards.forEach(card => stackObserver.observe(card));

      // 平滑滾動效果
      const scrollLinks = document.querySelectorAll('a[href^="#"]') as NodeListOf<HTMLAnchorElement>;
      scrollLinks.forEach(anchor => {
        anchor.addEventListener('click', function (e: Event) {
          e.preventDefault();
          const href = (this as HTMLAnchorElement).getAttribute('href');
          const target = href ? document.querySelector(href) : null;
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

      // 視差滾動效果
      window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const heroImage = document.querySelector('.hero-image') as HTMLElement;
        if (heroImage) {
          heroImage.style.transform = `translateY(${scrolled * 0.5}px)`;
        }
      });
    });
  </script>
</Layout>
