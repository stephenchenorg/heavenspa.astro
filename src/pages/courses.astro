---
import { seoMeta } from '@stephenchenorg/astro/page'
import Layout from '@/layouts/Layout.astro'
import Button from '../components/ui/Button.astro'

const meta = seoMeta({
  title: 'Heaven Spa - 課程介紹',
})

const courses = [
  {
    id: 'combo1',
    title: 'combo1',
    subtitle: '經典舒壓放鬆之旅',
    description: '結合芳療按摩與熱石療法，為您帶來身心靈的完全放鬆。專業按摩師運用多種手法，深層緩解肌肉緊張，讓您重拾活力與平靜。',
    image: '/api/placeholder/800/600',
    link: '/courses/combo1',
  },
  {
    id: 'combo2',
    title: 'combo2',
    subtitle: '深層淨化美肌之旅',
    description: '專業深層清潔搭配保濕護理，讓肌膚重現青春光采。採用天然植萃精華，溫和去除老廢角質，注入豐富養分。',
    image: '/api/placeholder/800/600',
    link: '/courses/combo2',
  },
  {
    id: 'combo3',
    title: 'combo3',
    subtitle: '奢華煥膚再生之旅',
    description: '頂級抗衰老療程，重塑肌膚彈性與光澤。運用最新科技結合珍貴精華，喚醒肌膚自然修復力，展現年輕光采。',
    image: '/api/placeholder/800/600',
    link: '/courses/combo3',
  },
  {
    id: 'combo4',
    title: 'combo4',
    subtitle: '極致養護放鬆之旅',
    description: '全方位身心靈護理，體驗前所未有的奢華享受。集結多項頂級療程，從肌膚護理到深度放鬆，為您打造完美的療癒時光。',
    image: '/api/placeholder/800/600',
    link: '/courses/combo4',
  },
]
---

<Layout meta={meta}>
  <!-- 頁面標題區 -->
  <section class="page-header">
    <div class="header-content">
      <h1 class="main-title">COURSE</h1>
      <h2 class="sub-title">課程介紹</h2>
    </div>
  </section>

  <!-- 課程展示區 -->
  <section class="course-showcase">
    <div class="course-container">
      {courses.map((course, index) => (
        <div class={`course-slide ${index === 0 ? 'active' : ''}`} data-course={course.id} data-index={index}>
          <div class="course-content">
            <div class="course-left">
              <div class="course-info">
                <h3 class="course-title">{course.title}</h3>
                <h4 class="course-subtitle">{course.subtitle}</h4>
                <p class="course-description">{course.description}</p>
                <Button href={course.link}>
                  課程介紹
                  <span class="btn-arrow">
                    <svg class="card-button-btn-svg ml-4" width="28" height="28" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 263.82 49.1"><g id="圖層_2" data-name="圖層 2"><g id="圖層_1-2" data-name="圖層 1"><g id="圖層_2-2" data-name="圖層 2"><g id="圖層_1-2-2" data-name="圖層 1-2"><g id="_0pqL0h.tif" data-name=" 0pqL0h.tif"><path fill="currentColor" d="M0,49.1q122.32-.09,244.64-.3c3.23,0,10.37,0,16.71.05a2.4,2.4,0,0,0,1-4.61c-8.58-3.66-25.27-10.49-28.66-11.85C206.4,20.18,194.2,14.39,168,3.12c-15.47-6.64-13.25-2.38-13.7,9.81-1,26.27-1,29.12-27.76,29.15Q63.27,42.17,0,42.31Z"></path></g></g></g></g></g></svg>
                  </span>
                </Button>
              </div>

              <!-- 導航按鈕 -->
              <div class="course-navigation">
                <button class="nav-btn prev-btn" data-direction="prev">
                  <span>←</span>
                </button>
                <button class="nav-btn next-btn" data-direction="next">
                  <span>→</span>
                </button>
              </div>
            </div>

            <div class="course-right">
              <div class="course-image">
                <img src={course.image} alt={course.subtitle} />
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- 課程指示器 -->
  <section class="course-indicators">
    <div class="indicators-container">
      {courses.map((course, index) => (
        <button class={`indicator ${index === 0 ? 'active' : ''}`} data-index={index}>
          <span class="indicator-text">{course.title}</span>
        </button>
      ))}
    </div>
  </section>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      line-height: 1.6;
      overflow-x: hidden;
      background: #f8f6f0;
    }

    /* 頁面標題區 */
    .page-header {
      background: linear-gradient(135deg, #f8f6f0 0%, #e8e2d4 100%);
      padding: 6rem 2rem 4rem;
      text-align: center;
    }

    .header-content {
      max-width: 800px;
      margin: 0 auto;
    }

    .main-title {
      font-size: 4rem;
      font-weight: 300;
      color: #c4956c;
      letter-spacing: 8px;
      text-transform: uppercase;
      margin-bottom: 1rem;
    }

    .sub-title {
      font-size: 1.5rem;
      color: #8b7355;
      font-weight: 400;
      letter-spacing: 2px;
    }

    /* 課程展示區 */
    .course-showcase {
      background: #f8f6f0;
      min-height: 80vh;
      position: relative;
      overflow: hidden;
    }

    .course-container {
      position: relative;
      height: 100%;
    }

    .course-slide {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      visibility: hidden;
      transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      transform: translateX(50px);
    }

    .course-slide.active {
      opacity: 1;
      visibility: visible;
      transform: translateX(0);
    }

    .course-content {
      display: flex;
      align-items: center;
      height: 100vh;
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 3rem;
    }

    .course-left {
      flex: 1;
      padding-right: 4rem;
      position: relative;
    }

    .course-info {
      max-width: 500px;
    }

    .course-title {
      font-size: 4rem;
      font-weight: 100;
      color: #c4956c;
      text-transform: lowercase;
      letter-spacing: 2px;
      margin-bottom: 1rem;
      line-height: 1;
    }

    .course-subtitle {
      font-size: 1.8rem;
      color: #5d4037;
      font-weight: 400;
      margin-bottom: 2rem;
      letter-spacing: 1px;
    }

    .course-description {
      font-size: 1.1rem;
      color: #6d6d6d;
      line-height: 1.8;
      margin-bottom: 3rem;
      font-weight: 400;
    }

    .btn-arrow {
      margin-left: 0.5rem;
      transition: transform 0.3s ease;
    }

    .btn-arrow {
      transform: translateX(5px);
    }

    /* 導航按鈕 */
    .course-navigation {
      display: flex;
      gap: 1rem;
      margin-top: 3rem;
    }

    .nav-btn {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      border: 2px solid #c4956c;
      background: transparent;
      color: #c4956c;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.2rem;
      transition: all 0.3s ease;
    }

    .nav-btn:hover {
      background: #c4956c;
      color: white;
      transform: scale(1.1);
    }

    .course-right {
      flex: 1;
      position: relative;
    }

    .course-image {
      position: relative;
      border-radius: 20px;
      overflow: hidden;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      transform: perspective(1000px) rotateY(-5deg);
      transition: transform 0.3s ease;
    }

    .course-image:hover {
      transform: perspective(1000px) rotateY(0deg);
    }

    .course-image img {
      width: 100%;
      height: 600px;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .course-image:hover img {
      transform: scale(1.05);
    }

    /* 課程指示器 */
    .course-indicators {
      background: #f8f6f0;
      padding: 2rem 0;
      text-align: center;
    }

    .indicators-container {
      display: flex;
      justify-content: center;
      gap: 2rem;
      max-width: 800px;
      margin: 0 auto;
      padding: 0 2rem;
    }

    .indicator {
      background: transparent;
      border: 2px solid #d4c4b0;
      border-radius: 50px;
      padding: 0.8rem 1.5rem;
      color: #8b7355;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.9rem;
      font-weight: 500;
      letter-spacing: 1px;
    }

    .indicator.active,
    .indicator:hover {
      background: #c4956c;
      color: white;
      border-color: #c4956c;
    }

    /* 響應式設計 */
    @media (max-width: 1024px) {
      .course-content {
        flex-direction: column;
        text-align: center;
        padding: 2rem;
      }

      .course-left {
        padding-right: 0;
        margin-bottom: 3rem;
      }

      .course-title {
        font-size: 3rem;
      }

      .course-image {
        transform: none;
      }

      .main-title {
        font-size: 3rem;
      }
    }

    @media (max-width: 768px) {
      .main-title {
        font-size: 2.5rem;
        letter-spacing: 4px;
      }

      .course-title {
        font-size: 2.5rem;
      }

      .course-subtitle {
        font-size: 1.4rem;
      }

      .indicators-container {
        flex-wrap: wrap;
        gap: 1rem;
      }

      .indicator {
        font-size: 0.8rem;
        padding: 0.6rem 1.2rem;
      }
    }

    /* 動畫效果 */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .course-slide.active .course-info > * {
      animation: fadeInUp 0.8s ease forwards;
    }

    .course-slide.active .course-title {
      animation-delay: 0.2s;
    }

    .course-slide.active .course-subtitle {
      animation-delay: 0.4s;
    }

    .course-slide.active .course-description {
      animation-delay: 0.6s;
    }

    .course-slide.active .btn {
      animation-delay: 0.8s;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const slides = document.querySelectorAll('.course-slide') as NodeListOf<HTMLElement>
  const indicators = document.querySelectorAll('.indicator') as NodeListOf<HTMLElement>
  const prevBtn = document.querySelector('.prev-btn') as HTMLElement
  const nextBtn = document.querySelector('.next-btn') as HTMLElement

  let currentSlide = 0
  const totalSlides = slides.length

  function showSlide(index: number) {
        // 移除所有活動狀態
        slides.forEach(slide => slide.classList.remove('active'))
    indicators.forEach(indicator => indicator.classList.remove('active'))

    // 設置新的活動狀態
    slides[index].classList.add('active')
    indicators[index].classList.add('active')

    currentSlide = index
  }

      function nextSlide() {
        const next = (currentSlide + 1) % totalSlides
    showSlide(next)
  }

      function prevSlide() {
        const prev = (currentSlide - 1 + totalSlides) % totalSlides
    showSlide(prev)
  }

      // 綁定事件監聽器
      nextBtn?.addEventListener('click', nextSlide)
  prevBtn?.addEventListener('click', prevSlide)

  indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => showSlide(index))
  })

    // 自動輪播
    setInterval(nextSlide, 8000)

  // 鍵盤控制
  document.addEventListener('keydown', e => {
        if (e.key === 'ArrowLeft') prevSlide()
    if (e.key === 'ArrowRight') nextSlide()
  })
  })
  </script>
</Layout>
