---
import { seoMeta } from '@stephenchenorg/astro/page'
import SectionTitle from '@/components/ui/SectionTitle.astro'
import Layout from '@/layouts/Layout.astro'
import FAQ from '@/components/FAQ.astro'
import { getFaqList, getFaqCategories } from '@/api/faq'

const meta = seoMeta({
  title: '常見問題 - Heaven Spa',
  description: '查看 Heaven Spa 的常見問題解答，了解我們的服務、預約流程、政策等相關資訊。',
})

// 定義類型
interface FaqItem {
  id: string
  question: string
  answer: string
}

interface ApiFaqItem {
  id: number
  title: string
  content: string
}

interface FaqCategory {
  id: number
  title: string
}

// 獲取網址參數中的分類 ID
const url = new URL(Astro.request.url)
const categoryId = url.searchParams.get('category_id')
const selectedCategoryId = categoryId ? parseInt(categoryId) : null

let faqCategories: FaqCategory[] = []
let selectedCategoryData: ApiFaqItem[] = []
let selectedCategory: FaqCategory | null = null

try {
  // 獲取分類列表
  faqCategories = await getFaqCategories()
  
  // 如果有指定分類 ID，載入該分類的資料
  if (selectedCategoryId && faqCategories.length > 0) {
    selectedCategory = faqCategories.find(cat => cat.id === selectedCategoryId) || null
    if (selectedCategory) {
      selectedCategoryData = await getFaqList(selectedCategoryId)
    }
  }
  
  // 如果沒有指定分類或找不到分類，使用第一個分類
  if (!selectedCategory && faqCategories.length > 0) {
    selectedCategory = faqCategories[0]
    selectedCategoryData = await getFaqList(selectedCategory.id)
  }
} catch (error) {
  console.error('Error fetching FAQ data:', error)
}

// 將 API 資料轉換為 FAQ 組件需要的格式
const faqData: Record<string, FaqItem[]> = {}

if (selectedCategory && selectedCategoryData.length > 0) {
  faqData[selectedCategory.title] = selectedCategoryData.map((faq: ApiFaqItem) => ({
    id: `faq-${faq.id}`,
    question: faq.title,
    answer: faq.content
  }))
}
---

<Layout meta={meta}>
  <main class="section-container pt-32 min-h-screen">
    <!-- 標題區 -->
    <SectionTitle title="常見問題" subtitle="FAQ" />

    <!-- Tab Navigation -->
    {faqCategories.length > 1 && (
      <div class="max-w-4xl mx-auto mb-8 px-4">
        <div 
          class="tab-scroll-container overflow-x-auto scrollbar-hide flex justify-center"
          style="background-color: var(--color-neutral-100); border-radius: 12px; padding: 8px;"
        >
          <div class="flex gap-2">
            {faqCategories.map(category => (
              <a
                href={`/faq?category_id=${category.id}`}
                class={`tab-item px-4 py-2 rounded-lg font-medium transition-all duration-300 whitespace-nowrap text-center no-underline ${selectedCategory?.id === category.id ? 'active' : ''}`}
                data-category-id={category.id}
                style={selectedCategory?.id === category.id ? "background-color: var(--color-primary-500); color: white;" : "color: var(--theme-text);"}
              >
                {category.title}
              </a>
            ))}
          </div>
        </div>
      </div>
    )}

    <!-- 使用 FAQ 組件 -->
    <div class="max-w-6xl mx-auto w-full">
      <FAQ faqData={faqData} />
    </div>
  </main>
</Layout>

<style>
  <style>
  .tab-item {
    transition: all 0.3s ease;
    text-decoration: none !important;
    flex-shrink: 0; /* 防止壓縮 */
  }

  .tab-item:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .tab-item.active {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(var(--color-primary-500-rgb), 0.3);
  }

  /* 滾動容器樣式 */
  .tab-scroll-container {
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
  }

  /* 隱藏滾動條 */
  .scrollbar-hide {
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE 10+ */
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none; /* WebKit */
  }

  /* 手機端 - 如果內容超出就允許滾動 */
  @media (max-width: 640px) {
    .tab-scroll-container {
      justify-content: flex-start !important; /* 小螢幕時靠左對齊方便滾動 */
    }
    
    .tab-item {
      padding: 8px 16px;
      font-size: 14px;
      min-width: 80px;
    }
  }

  /* 平板和桌面端保持居中 */
  @media (min-width: 641px) {
    .tab-item {
      padding: 10px 20px;
    }
  }
</style>
</style>
