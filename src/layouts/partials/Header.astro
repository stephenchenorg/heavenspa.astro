---
import type { CompanySettingData } from '@/types'
import LanguageSwitcher from '@/components/LanguageSwitcher.vue'
import ThemeController from '@/components/ThemeController.astro'
import { createAstroT } from '@/utils/astro-i18n'
import ButtonBooking from '@/components/ButtonBooking.vue'

export interface Props {
  class?: astroHTML.JSX.HTMLAttributes['class']
  companySetting?: CompanySettingData | null
}

const {
  companySetting = null,
} = Astro.props

// 翻譯函數
const t = createAstroT(Astro)
---

<!-- 滾動進度指示器 -->
<!--<div class="fixed top-0 left-0 w-full h-1 bg-white/10 z-[10000]">-->
<!--  <div class="h-full bg-gradient-to-r from-[#c48b6e] to-[#d4a574] w-0 transition-all duration-100 ease-linear"></div>-->
<!--</div>-->

<!-- 導航列 -->
<nav
  class="fixed top-0 left-0 right-0 z-[2000] flex justify-between items-center md:px-16 px-4 py-8 bg-transparent backdrop-blur-none transition-all duration-300 ease-in-out main-nav lg:justify-start"
  data-scrolled="false"
  style="background: var(--theme-nav-bg, transparent); color: var(--theme-nav-text, #000000);"
>
  <!-- Logo - 25% width on lg+ -->
  <div class="nav-logo lg:w-1/4 lg:flex-shrink-0">
    <a href="/" class="flex items-center h-full mr-4">
      {companySetting?.logo && (
        <img
          src={companySetting?.logo}
          class="h-12 w-auto object-contain"
          alt="Logo"
        />
      )}
    </a>
  </div>
  
  <!-- Link - 50% width on lg+, hidden below lg -->
  <div class="hidden lg:flex gap-6 items-center justify-center flex-nowrap overflow-hidden nav-menu lg:w-1/2 lg:flex-shrink-0">
    <a href="/about" class="nav-item active" style="color: var(--theme-nav-text, #000000);">
      <span data-i18n="nav.about">{t('nav.about')}</span>
      <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>
    </a>
    <a href="/news" class="nav-item" style="color: var(--theme-nav-text, #000000);">
      <span data-i18n="nav.news">{t('nav.news')}</span>
      <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>
    </a>
    <a href="/services" class="nav-item" style="color: var(--theme-nav-text, #000000);">
      <span data-i18n="nav.services">{t('nav.services')}</span>
      <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>
    </a>
    <a href="/team" class="nav-item" style="color: var(--theme-nav-text, #000000);">
      <span data-i18n="nav.team">{t('nav.team')}</span>
      <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>
    </a>
    <a href="/faq" class="nav-item" style="color: var(--theme-nav-text, #000000);">
      <span data-i18n="nav.faq">{t('nav.faq')}</span>
      <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>
    </a>
    <!-- 加入我們 - 帶子選單 -->
    <div 
      class="nav-dropdown relative" 
      style="position: relative !important; z-index: 1000 !important;"
    >
      <div class="nav-item cursor-pointer flex items-center" style="color: var(--theme-nav-text, #000000);">
        <span data-i18n="nav.careers">{t('nav.careers')}</span>
        <svg class="nav-dropdown-icon w-4 h-4 ml-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
        <div class="nav-underline" style="background: var(--theme-nav-text, #000000);"></div>
      </div>
      
      <!-- 子選單 - 直接內嵌樣式 -->
      <div 
        class="nav-submenu" 
        style="
          position: absolute !important;
          top: 100% !important;
          left: 0 !important;
          margin-top: 8px !important;
          width: 200px !important;
          background: yellow !important;
          border: 5px solid red !important;
          z-index: 99999 !important;
          display: block !important;
          opacity: 1 !important;
          visibility: visible !important;
        "
      >
        <div style="padding: 10px; background: lime;">
          <a 
            href="/recruitment" 
            class="nav-submenu-item" 
            style="
              display: block; 
              padding: 10px; 
              background: cyan; 
              border: 2px solid purple; 
              color: black !important;
              text-decoration: none;
              margin-bottom: 5px;
            "
          >
            <span data-i18n="nav.recruitment">{t('nav.recruitment')}</span>
          </a>
          <a 
            href="/training" 
            class="nav-submenu-item"
            style="
              display: block; 
              padding: 10px; 
              background: pink; 
              border: 2px solid orange; 
              color: black !important;
              text-decoration: none;
            "
          >
            <span data-i18n="nav.training">{t('nav.training')}</span>
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- 手機版選單按鈕 - visible below lg -->
  <button
    class="lg:hidden flex flex-col gap-1 justify-center items-center cursor-pointer w-11 h-11 bg-white/10 border border-white/20 rounded-lg p-2 z-[10000] relative transition-all duration-300 ease-in-out mobile-menu-btn hover:bg-white/20"
    type="button"
    id="mobile-menu-btn"
    style="background: var(--theme-mobile-btn-bg, rgba(0,0,0,0.1)); border-color: var(--theme-mobile-btn-border, rgba(0,0,0,0.2));"
  >
    <span class="w-6 h-0.5 transition-all duration-300 ease-in-out rounded-sm block" style="background: var(--theme-nav-text, #000000);"></span>
    <span class="w-6 h-0.5 transition-all duration-300 ease-in-out rounded-sm block" style="background: var(--theme-nav-text, #000000);"></span>
    <span class="w-6 h-0.5 transition-all duration-300 ease-in-out rounded-sm block" style="background: var(--theme-nav-text, #000000);"></span>
  </button>
  
  <!-- Action Div - 25% width on lg+, hidden below lg -->
  <div class="hidden lg:flex items-center justify-end gap-4 nav-contact lg:w-1/4 lg:flex-shrink-0">
    <LanguageSwitcher client:load />
    <ThemeController />
    <ButtonBooking size="sm"/>
  </div>
</nav>

<!-- 手機版選單彈出層 -->
<div
  class="fixed top-0 left-0 right-0 bottom-0 z-[9999] bg-black/80 backdrop-blur-sm opacity-0 invisible transition-all duration-300 ease-in-out mobile-menu-overlay"
  id="mobile-menu-overlay"
>
  <div
    class="absolute top-0 right-0 h-full w-80 max-w-[85vw] backdrop-blur-2xl shadow-[-10px_0_40px_rgba(0,0,0,0.3)] transform translate-x-full transition-transform duration-300 cubic-bezier(0.25,0.46,0.45,0.94) flex flex-col mobile-menu"
    style="background: var(--theme-mobile-menu-bg-gradient);"
  >
    <div class="flex justify-between items-center p-6 border-b mobile-menu-header" style="border-color: var(--theme-mobile-menu-border);">
      <a href="/" class="mobile-logo">
        {companySetting?.logo && (
          <img
            src={companySetting?.logo}
            class="h-10 w-auto object-contain"
            alt="Logo"
          />
        )}
      </a>
      <button
        class="bg-none border-none text-3xl text-[#D7AE54] cursor-pointer w-10 h-10 rounded-full flex items-center justify-center transition-all duration-300 ease-in-out mobile-menu-close hover:bg-[#c4956c]/10 hover:rotate-90"
        id="mobile-menu-close"
      >
        <span>×</span>
      </button>
    </div>
    <nav class="pt-8 pb-4 overflow-y-auto mobile-nav">
      <a href="/about" class="mobile-nav-item active" style="color: var(--theme-mobile-nav-text, #D7AE54);">
        <span data-i18n="nav.about">{t('nav.about')}</span>
        <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
      </a>
      <a href="/news" class="mobile-nav-item" style="color: var(--theme-mobile-nav-text, #D7AE54);">
        <span data-i18n="nav.news">{t('nav.news')}</span>
        <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
      </a>
      <a href="/services" class="mobile-nav-item" style="color: var(--theme-mobile-nav-text, #D7AE54);">
        <span data-i18n="nav.services">{t('nav.services')}</span>
        <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
      </a>
      <a href="/team" class="mobile-nav-item" style="color: var(--theme-mobile-nav-text, #D7AE54);">
        <span data-i18n="nav.team">{t('nav.team')}</span>
        <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
      </a>
      <a href="/faq" class="mobile-nav-item" style="color: var(--theme-mobile-nav-text, #D7AE54);">
        <span data-i18n="nav.faq">{t('nav.faq')}</span>
        <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
      </a>
      <!-- 加入我們 - 手機版子選單 -->
      <div class="mobile-nav-dropdown">
        <div class="mobile-nav-item mobile-dropdown-toggle cursor-pointer flex justify-between items-center" style="color: var(--theme-mobile-nav-text, #D7AE54);">
          <span data-i18n="nav.careers">{t('nav.careers')}</span>
          <svg class="mobile-dropdown-icon w-5 h-5 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
          </svg>
          <div class="mobile-nav-indicator" style="background: var(--theme-mobile-nav-indicator, #D7AE54);"></div>
        </div>
        
        <!-- 子選單項目 -->
        <div class="mobile-nav-submenu max-h-0 overflow-hidden transition-all duration-300 ease-out">
          <a href="/recruitment" class="mobile-nav-subitem block py-3 pl-8 pr-4 transition-colors duration-200" style="color: var(--theme-mobile-nav-text, #D7AE54); opacity: 0.8;">
            <span data-i18n="nav.recruitment">{t('nav.recruitment')}</span>
          </a>
          <a href="/training" class="mobile-nav-subitem block py-3 pl-8 pr-4 transition-colors duration-200" style="color: var(--theme-mobile-nav-text, #D7AE54); opacity: 0.8;">
            <span data-i18n="nav.training">{t('nav.training')}</span>
          </a>
        </div>
      </div>
    </nav>
    <div class="px-6 py-4 border-t border-b mobile-language-section" style="border-color: var(--theme-mobile-section-border); background: var(--theme-mobile-section-bg);">
      <div class="flex justify-center items-center gap-4 mobile-language">
        <LanguageSwitcher client:load />
        <ThemeController />
        <ButtonBooking />
      </div>
    </div>
    <div class="p-6 flex flex-col gap-4 flex-1 justify-end mobile-contact">
      <!-- <button class="w-full bg-gradient-to-r from-[#D7AE54] to-[#D4A574] text-white border-none px-8 py-4 rounded-3xl text-base font-semibold tracking-wide cursor-pointer transition-all duration-300 ease-in-out shadow-lg shadow-[#c4956c]/30 mobile-contact-btn hover:-translate-y-0.5 hover:shadow-xl hover:shadow-[#c4956c]/40">{t('nav.contact')}</button> -->
    </div>
  </div>
</div>

<script>
  // 等待頁面完全載入
  function initializeMobileMenu() {
    // 導航滾動效果
    const mainNav = document.querySelector('.main-nav')

    function handleNavScroll() {
      const currentTheme = localStorage.getItem('theme') || 'light'

      if (mainNav) {
        const navElement = mainNav as HTMLElement

        if (window.pageYOffset > 20) {
          // 滾動時的樣式變化
          navElement.classList.remove('bg-transparent', 'backdrop-blur-none')
          navElement.classList.add('shadow-lg', 'shadow-black/15', 'border-b')
          navElement.setAttribute('data-scrolled', 'true')

          // 根據主題設置滾動時的背景
          if (currentTheme === 'dark') {
            navElement.style.setProperty('background', 'var(--theme-nav-scrolled-bg, rgba(0,0,0,0.8))')
          } else {
            navElement.style.setProperty('background', 'var(--theme-nav-scrolled-bg, rgba(255,255,255,0.5))')
          }
        } else {
          // 頂部時恢復透明樣式
          navElement.classList.add('bg-transparent', 'backdrop-blur-none')
          navElement.classList.remove('shadow-lg', 'shadow-black/15', 'border-b')
          navElement.setAttribute('data-scrolled', 'false')

          // 恢復透明背景
          navElement.style.setProperty('background', 'var(--theme-nav-bg, transparent)')
        }
      }
    }

    window.addEventListener('scroll', handleNavScroll)

    // 監聽主題變更事件
    document.addEventListener('themeChanged', (e: any) => {
      const theme = e.detail.theme
      updateHeaderTheme(theme)
    })

    function updateHeaderTheme(theme: string) {
      // 更新 CSS 自定義屬性
      const root = document.documentElement

      if (theme === 'dark') {
        // 深色主題
        root.style.setProperty('--theme-nav-bg', 'transparent')
        root.style.setProperty('--theme-nav-text', '#ffffff')
        root.style.setProperty('--theme-nav-scrolled-bg', 'rgba(0,0,0,0.8)')
        root.style.setProperty('--theme-mobile-btn-bg', 'rgba(255,255,255,0.1)')
        root.style.setProperty('--theme-mobile-btn-border', 'rgba(255,255,255,0.2)')
        root.style.setProperty('--theme-mobile-nav-text', '#ffffff')
        root.style.setProperty('--theme-mobile-nav-indicator', '#ffffff')
        // 子選單主題
        root.style.setProperty('--theme-submenu-bg', 'rgba(0,0,0,0.95)')
        root.style.setProperty('--theme-submenu-border', 'rgba(255,255,255,0.2)')
        root.style.setProperty('--theme-submenu-text', '#ffffff')
        root.style.setProperty('--theme-submenu-hover-bg', 'rgba(255,255,255,0.1)')
        root.style.setProperty('--theme-submenu-hover-text', '#D7AE54')
      } else {
        // 淺色主題 - 文字應該是深色的
        root.style.setProperty('--theme-nav-bg', 'transparent')
        root.style.setProperty('--theme-nav-text', '#000000')
        root.style.setProperty('--theme-nav-scrolled-bg', 'rgba(255,255,255,0.9)')
        root.style.setProperty('--theme-mobile-btn-bg', 'rgba(0,0,0,0.1)')
        root.style.setProperty('--theme-mobile-btn-border', 'rgba(0,0,0,0.2)')
        root.style.setProperty('--theme-mobile-nav-text', '#D7AE54')
        root.style.setProperty('--theme-mobile-nav-indicator', '#D7AE54')
        // 子選單主題
        root.style.setProperty('--theme-submenu-bg', 'rgba(255,255,255,0.98)')
        root.style.setProperty('--theme-submenu-border', 'rgba(0,0,0,0.15)')
        root.style.setProperty('--theme-submenu-text', '#374151')
        root.style.setProperty('--theme-submenu-hover-bg', 'rgba(59, 130, 246, 0.1)')
        root.style.setProperty('--theme-submenu-hover-text', '#3b82f6')
      }

      // 立即更新滾動狀態
      handleNavScroll()
    }

    // 初始化主題
    const initialTheme = localStorage.getItem('theme') || 'light'
    updateHeaderTheme(initialTheme)

    // 手機版選單功能
    const mobileMenuBtnEl = document.getElementById('mobile-menu-btn')
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay')
    const mobileMenuClose = document.getElementById('mobile-menu-close')
    const mobileNavItems = document.querySelectorAll('.mobile-nav-item')
    const mobileMenu = mobileMenuOverlay?.querySelector('.mobile-menu')

    // 開啟選單
    function openMobileMenu() {
      if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.remove('opacity-0', 'invisible')
        mobileMenuOverlay.classList.add('opacity-100', 'visible')
      }
      if (mobileMenu) {
        mobileMenu.classList.remove('translate-x-full')
        mobileMenu.classList.add('translate-x-0')
      }
      if (mobileMenuBtnEl) {
        // 手機選單按鈕動畫
        const spans = mobileMenuBtnEl.querySelectorAll('span')
        if (spans[0]) {
          spans[0].style.transform = 'rotate(45deg) translate(5px, 5px)'
        }
        if (spans[1]) {
          spans[1].style.opacity = '0'
        }
        if (spans[2]) {
          spans[2].style.transform = 'rotate(-45deg) translate(7px, -6px)'
        }
      }
      document.body.style.overflow = 'hidden'
    }

    // 關閉選單
    function closeMobileMenu() {
      if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.add('opacity-0', 'invisible')
        mobileMenuOverlay.classList.remove('opacity-100', 'visible')
      }
      if (mobileMenu) {
        mobileMenu.classList.add('translate-x-full')
        mobileMenu.classList.remove('translate-x-0')
      }
      if (mobileMenuBtnEl) {
        // 恢復手機選單按鈕動畫
        const spans = mobileMenuBtnEl.querySelectorAll('span')
        if (spans[0]) {
          spans[0].style.transform = 'none'
        }
        if (spans[1]) {
          spans[1].style.opacity = '1'
        }
        if (spans[2]) {
          spans[2].style.transform = 'none'
        }
      }
      document.body.style.overflow = ''
    }

    // 多種方式綁定點擊事件
    if (mobileMenuBtnEl) {
      // 方法1: addEventListener
      mobileMenuBtnEl.addEventListener('click', e => {
        e.preventDefault()
        e.stopPropagation()
        openMobileMenu()
      })

      // 方法2: ontouchstart (行動裝置)
      mobileMenuBtnEl.addEventListener('touchstart', e => {
        e.preventDefault()
        openMobileMenu()
      })

      // 方法3: onclick 屬性作為備用
      mobileMenuBtnEl.onclick = function (e) {
        e.preventDefault()
        openMobileMenu()
        return false
      }

      // 確保按鈕可見和可點擊
      mobileMenuBtnEl.style.pointerEvents = 'auto'
      mobileMenuBtnEl.style.position = 'relative'
      mobileMenuBtnEl.style.zIndex = '10000'
    }

    // 關閉按鈕點擊事件
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', e => {
        e.preventDefault()
        closeMobileMenu()
      })
    }

    // 點擊背景關閉選單
    if (mobileMenuOverlay) {
      mobileMenuOverlay.addEventListener('click', e => {
        if (e.target === mobileMenuOverlay) {
          closeMobileMenu()
        }
      })
    }

    // 選單項目點擊後關閉選單
    mobileNavItems.forEach(item => {
      item.addEventListener('click', closeMobileMenu)
    })

    // 桌面版子選單功能
    console.log('Starting dropdown initialization...')
    const navDropdowns = document.querySelectorAll('.nav-dropdown')
    console.log('Found nav dropdowns:', navDropdowns.length, navDropdowns)
    
    // 如果找不到 dropdown，手動檢查
    if (navDropdowns.length === 0) {
      console.log('No dropdowns found, checking HTML...')
      const allNavItems = document.querySelectorAll('.nav-item')
      console.log('All nav items:', allNavItems.length, allNavItems)
    }
    
    navDropdowns.forEach((dropdown, index) => {
      console.log(`Processing dropdown ${index}:`, dropdown)
      const trigger = dropdown.querySelector('.nav-item')
      const submenu = dropdown.querySelector('.nav-submenu')
      const icon = dropdown.querySelector('.nav-dropdown-icon')
      
      console.log(`Dropdown ${index} elements:`, { trigger, submenu, icon })
      
      if (trigger && submenu && icon) {
        console.log(`Setting up events for dropdown ${index}`)
        let hoverTimeout
        
        // 直接強制顯示子選單來測試
        console.log('Force showing submenu for test...')
        submenu.style.display = 'block'
        submenu.style.opacity = '1'
        submenu.style.visibility = 'visible'
        submenu.style.transform = 'translateY(0)'
        submenu.classList.add('show')
        
        // 滑鼠懸停顯示子選單
        dropdown.addEventListener('mouseenter', () => {
          console.log('Mouse enter - showing submenu')
          clearTimeout(hoverTimeout)
          submenu.classList.add('show')
          submenu.style.display = 'block'
          submenu.style.opacity = '1'
          submenu.style.visibility = 'visible'
          submenu.style.transform = 'translateY(0)'
          icon.style.transform = 'rotate(180deg)'
        })
        
        // 滑鼠離開隱藏子選單
        dropdown.addEventListener('mouseleave', () => {
          console.log('Mouse leave - hiding submenu')
          hoverTimeout = setTimeout(() => {
            submenu.classList.remove('show')
            icon.style.transform = 'rotate(0deg)'
          }, 150)
        })
        
        // 點擊也能觸發子選單
        trigger.addEventListener('click', (e) => {
          e.preventDefault()
          console.log('Click trigger')
          const isVisible = submenu.classList.contains('show')
          
          if (isVisible) {
            submenu.classList.remove('show')
            icon.style.transform = 'rotate(0deg)'
          } else {
            submenu.classList.add('show')
            submenu.style.display = 'block'
            submenu.style.opacity = '1'
            submenu.style.visibility = 'visible'
            submenu.style.transform = 'translateY(0)'
            icon.style.transform = 'rotate(180deg)'
          }
        })
      } else {
        console.log(`Missing elements for dropdown ${index}:`, { trigger: !!trigger, submenu: !!submenu, icon: !!icon })
      }
    })

    // 手機版子選單功能
    const mobileDropdownToggles = document.querySelectorAll('.mobile-dropdown-toggle')
    mobileDropdownToggles.forEach(toggle => {
      const submenu = toggle.nextElementSibling
      const icon = toggle.querySelector('.mobile-dropdown-icon')
      
      if (submenu && icon) {
        toggle.addEventListener('click', (e) => {
          e.preventDefault()
          e.stopPropagation()
          
          const isOpen = submenu.style.maxHeight && submenu.style.maxHeight !== '0px'
          
          if (isOpen) {
            // 收起子選單
            submenu.style.maxHeight = '0px'
            icon.style.transform = 'rotate(0deg)'
          } else {
            // 展開子選單
            submenu.style.maxHeight = submenu.scrollHeight + 'px'
            icon.style.transform = 'rotate(180deg)'
          }
        })
      }
    })

    // 手機版子選單項目點擊後關閉整個選單
    const mobileNavSubitems = document.querySelectorAll('.mobile-nav-subitem')
    mobileNavSubitems.forEach(item => {
      item.addEventListener('click', closeMobileMenu)
    })

    // ESC鍵關閉選單
    document.addEventListener('keydown', e => {
      if (e.key === 'Escape' && mobileMenuOverlay?.classList.contains('opacity-100')) {
        closeMobileMenu()
      }
    })

    // 全域測試函數
    ;(window as any).testMobileMenu = function () {
      openMobileMenu()
    }
  }

  // 多種方式確保初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMobileMenu)
  } else {
    initializeMobileMenu()
  }

  // 備用初始化
  window.addEventListener('load', () => {
    setTimeout(initializeMobileMenu, 100)
  })
</script>

<style is:global>
/* 桌面版子選單樣式 */
.nav-dropdown {
  position: relative !important;
  z-index: 1000 !important;
}

.nav-dropdown:hover .nav-underline {
  transform: scaleX(1) !important;
}

/* 確保子選單初始狀態正確 */
.nav-submenu {
  position: absolute !important;
  top: 100% !important;
  left: 0 !important;
  margin-top: 0.5rem;
  width: 200px !important;
  height: auto !important;
  opacity: 1 !important;
  visibility: visible !important;
  transform: translateY(0) !important;
  transition: all 0.3s ease-out;
  z-index: 99999 !important;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  /* 調試用強邊框 */
  border: 5px solid red !important;
  /* 強制背景 */
  background: yellow !important;
  /* 確保顯示 */
  display: block !important;
}

.nav-submenu.show {
  opacity: 1 !important;
  visibility: visible !important;
  transform: translateY(0) !important;
  /* 調試用背景 */
  background: lime !important;
  /* 強制顯示 */
  display: block !important;
}

.nav-submenu > div {
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  border: 2px solid blue !important;
  background: var(--theme-submenu-bg, #ffffff);
  overflow: hidden;
  /* 調試用最小高度 */
  min-height: 100px;
}

.nav-submenu-item {
  display: block;
  padding: 0.75rem 1rem;
  color: var(--theme-submenu-text, #374151);
  text-decoration: none;
  transition: all 0.2s;
  /* 調試用樣式 */
  background: lime !important;
  border: 1px solid purple !important;
  color: black !important;
  font-weight: bold !important;
}

.nav-submenu-item:hover {
  background-color: var(--theme-submenu-hover-bg, rgba(59, 130, 246, 0.1)) !important;
  color: var(--theme-submenu-hover-text, #3b82f6) !important;
}

/* 手機版子選單樣式 */
.mobile-nav-dropdown .mobile-nav-item {
  border-bottom: none;
}

.mobile-nav-submenu {
  background-color: var(--theme-mobile-submenu-bg, rgba(0,0,0,0.1));
  border-left: 2px solid var(--theme-mobile-nav-indicator, #D7AE54);
  margin-left: 1rem;
}

.mobile-nav-subitem:hover {
  background-color: var(--theme-mobile-submenu-hover-bg, rgba(215, 174, 84, 0.1)) !important;
  opacity: 1 !important;
}

/* 響應式調整 */
@media (max-width: 1024px) {
  .nav-dropdown {
    display: none;
  }
}

/* 確保在大螢幕上顯示桌面版選單 */
@media (min-width: 1024px) {
  .nav-dropdown {
    display: block;
  }
}
</style>
