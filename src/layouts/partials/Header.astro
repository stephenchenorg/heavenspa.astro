---
import type { CompanySettingData } from '@/types'
import LanguageSwitcher from '@/components/LanguageSwitcher.vue'
import { createAstroT } from '@/utils/astro-i18n'

export interface Props {
  class?: astroHTML.JSX.HTMLAttributes['class']
  companySetting?: CompanySettingData | null
}

const {
  companySetting = null,
} = Astro.props

// 翻譯函數
const t = createAstroT(Astro)
---

<!-- 滾動進度指示器 -->
<!--<div class="scroll-progress">-->
<!--  <div class="progress-bar"></div>-->
<!--</div>-->

<!-- 導航列 -->
<nav class="main-nav">
  <div class="nav-logo">
    <a href="/" class="flex items-center h-full mr-4">
      { companySetting?.logo && (
      <img
        src={companySetting?.logo}
        class="h-12 w-auto object-contain"
        alt="Logo"
      />
      )}
    </a>
  </div>
  <div class="nav-menu">
    <a href="#news" class="nav-item active">{t('nav.news')}</a>
    <a href="#courses" class="nav-item">{t('nav.courses')}</a>
    <a href="#team" class="nav-item">{t('nav.team')}</a>
    <a href="#products" class="nav-item">{t('nav.products')}</a>
    <a href="#guide" class="nav-item">{t('nav.guide')}</a>
    <a href="#faq" class="nav-item">{t('nav.faq')}</a>
    <a href="#careers" class="nav-item">{t('nav.careers')}</a>
  </div>

  <!-- 手機版選單按鈕 -->
  <button class="mobile-menu-btn" type="button" id="mobile-menu-btn">
    <span></span>
    <span></span>
    <span></span>
  </button>
  <div class="nav-contact">
    <LanguageSwitcher client:load />
    <!-- <button class="contact-btn">{t('contact')}</button> -->
  </div>
</nav>

<!-- 手機版選單彈出層 -->
<div class="mobile-menu-overlay" id="mobile-menu-overlay">
  <div class="mobile-menu">
    <div class="mobile-menu-header">
      <a href="/" class="mobile-logo">
        { companySetting?.logo && (
        <img
          src={companySetting?.logo}
          class="h-10 w-auto object-contain"
          alt="Logo"
        />
        )}
      </a>
      <button class="mobile-menu-close" id="mobile-menu-close">
        <span>×</span>
      </button>
    </div>
    <nav class="mobile-nav">
      <a href="#news" class="mobile-nav-item active">{t('nav.news')}</a>
      <a href="#courses" class="mobile-nav-item">{t('nav.courses')}</a>
      <a href="#team" class="mobile-nav-item">{t('nav.team')}</a>
      <a href="#products" class="mobile-nav-item">{t('nav.products')}</a>
      <a href="#guide" class="mobile-nav-item">{t('nav.guide')}</a>
      <a href="#faq" class="mobile-nav-item">{t('nav.faq')}</a>
      <a href="#careers" class="mobile-nav-item">{t('nav.careers')}</a>
    </nav>
    <div class="mobile-language-section">
      <div class="mobile-language">
        <LanguageSwitcher client:load />
      </div>
    </div>
    <div class="mobile-contact">
      <!-- <button class="mobile-contact-btn">{t('nav.contact')}</button> -->
    </div>
  </div>
</div>

<style>
  /* 滾動進度指示器 */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    z-index: 10000;
  }

  .progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #c48b6e, #d4a574);
    width: 0%;
    transition: width 0.1s ease;
  }

  /* 導航列樣式 */
  .main-nav {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 2000;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem 4rem;
    background: transparent;
    backdrop-filter: none;
    transition: all 0.3s ease;
  }

  .main-nav.scrolled {
    background: rgba(255, 255, 255, 1);
    backdrop-filter: blur(15px);
    border-radius: 0 0 50px 50px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    border-bottom: 1px solid rgba(228, 208, 192, 0.3);
  }

  .nav-logo .logo-icon {
    width: 40px;
    height: 40px;
    background: black;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: white;
    font-size: 14px;
    transition: background 0.3s ease, color 0.3s ease;
  }

  .main-nav.scrolled .nav-logo .logo-icon {
    background: white;
    color: #c4956c;
  }

  .nav-menu {
    display: flex;
    gap: 1.5rem;
    align-items: center;
    flex-wrap: nowrap;
    overflow: hidden;
  }

  .nav-item {
    color: white;
    text-decoration: none;
    font-size: 1.1rem;
    font-weight: 500;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
    white-space: nowrap;
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px 2px;
    position: relative;
  }

  .main-nav.scrolled .nav-item {
    color: #D7AE54 !important;
  }

  .nav-item::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -2px;
    left: 0;
    background: white;
    transition: width 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .main-nav.scrolled .nav-item::after {
    background: #D7AE54;
  }

  .nav-item:hover::after,
  .nav-item.active::after {
    width: 100%;
  }

  .nav-item::before {
    content: none !important;
  }

  .nav-item:hover,
  .nav-item.active {
    opacity: 1;
  }

  /* CTA 按鈕樣式 */
  .nav-cta {
    background: linear-gradient(45deg, #c4956c, #d4a574);
    color: white !important;
    padding: 10px 20px;
    border-radius: 25px;
    font-weight: 500;
    box-shadow: 0 2px 10px rgba(196, 149, 108, 0.3);
  }

  .nav-cta::after {
    display: none !important;
  }

  .nav-cta:hover {
    transform: translateY(-2px);
  }

  .main-nav.scrolled .nav-cta {
    background: linear-gradient(45deg, #fff, #f8f8f8);
    color: #c4956c !important;
  }

  /* 下拉選單樣式 */
  .nav-dropdown {
    position: relative;
  }

  .dropdown-toggle {
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .dropdown-toggle::before {
    content: '';
  }

  .dropdown-toggle::after {
    content: '▼';
    font-size: 0.7rem;
    transition: transform 0.3s ease;
    margin-left: 4px;
  }

  .nav-dropdown:hover .dropdown-toggle::after {
    transform: rotate(180deg);
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
    padding: 1rem 0;
    min-width: 180px;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    margin-top: 10px;
    z-index: 1000;
    border: 1px solid rgba(196, 149, 108, 0.1);
  }

  .main-nav.scrolled .dropdown-menu {
    background: rgba(0, 0, 0, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .nav-dropdown:hover .dropdown-menu {
    opacity: 1;
    visibility: visible;
    margin-top: 15px;
  }

  .dropdown-item {
    display: block;
    padding: 0.75rem 1.5rem;
    color: #333;
    text-decoration: none;
    font-size: 0.85rem;
    transition: all 0.3s ease;
    border-left: 3px solid transparent;
  }

  .main-nav.scrolled .dropdown-item {
    color: #D7AE54;
  }

  .dropdown-item:hover {
    background: rgba(196, 149, 108, 0.1);
    border-left-color: #c4956c;
    padding-left: 1.75rem;
  }

  .main-nav.scrolled .dropdown-item:hover {
    background: rgba(255, 255, 255, 0.1);
    border-left-color: white;
  }

  /* 手機版選單按鈕 */
  .mobile-menu-btn {
    display: none;
    flex-direction: column;
    gap: 4px;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: 44px;
    height: 44px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 8px;
    z-index: 10000;
    position: relative;
    transition: all 0.3s ease;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }

  .mobile-menu-btn:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .main-nav.scrolled .mobile-menu-btn {
    background: rgba(196, 149, 108, 0.1);
    border-color: rgba(196, 149, 108, 0.2);
  }

  .main-nav.scrolled .mobile-menu-btn:hover {
    background: rgba(196, 149, 108, 0.2);
  }

  .mobile-menu-btn span {
    width: 24px;
    height: 3px;
    background: white;
    transition: all 0.3s ease;
    border-radius: 2px;
    display: block;
  }

  .main-nav.scrolled .mobile-menu-btn span {
    background: #D7AE54;
  }

  /* 手機版選單動畫效果 */
  .mobile-menu-btn.active span:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .mobile-menu-btn.active span:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-btn.active span:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  /* 手機版選單彈出層 */
  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 9999;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .mobile-menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu {
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    width: 320px;
    max-width: 85vw;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.9));
    backdrop-filter: blur(20px);
    box-shadow: -10px 0 40px rgba(0, 0, 0, 0.3);
    transform: translateX(100%);
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    display: flex;
    flex-direction: column;
  }

  .mobile-menu-overlay.active .mobile-menu {
    transform: translateX(0);
  }

  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid rgba(196, 149, 108, 0.2);
  }

  .mobile-logo img {
    height: 40px;
    width: auto;
  }

  .mobile-menu-close {
    background: none;
    border: none;
    font-size: 2rem;
    color: #D7AE54;
    cursor: pointer;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .mobile-menu-close:hover {
    background: rgba(196, 149, 108, 0.1);
    transform: rotate(90deg);
  }

  .mobile-nav {
    padding: 2rem 0 1rem 0;
    overflow-y: auto;
  }

  .mobile-language-section {
    padding: 1rem 1.5rem;
    border-top: 1px solid rgba(196, 149, 108, 0.15);
    border-bottom: 1px solid rgba(196, 149, 108, 0.15);
    background: rgba(196, 149, 108, 0.05);
  }

  .mobile-nav-item {
    display: block;
    padding: 1rem 1.5rem;
    color: #333;
    text-decoration: none;
    font-size: 1.1rem;
    font-weight: 500;
    border-left: 4px solid transparent;
    transition: all 0.3s ease;
    position: relative;
  }

  .mobile-nav-item:hover,
  .mobile-nav-item.active {
    background: rgba(196, 149, 108, 0.1);
    border-left-color: #D7AE54;
    color: #D7AE54;
    padding-left: 2rem;
  }

  .mobile-nav-item::after {
    content: '';
    position: absolute;
    right: 1.5rem;
    top: 50%;
    transform: translateY(-50%);
    width: 6px;
    height: 6px;
    background: #D7AE54;
    border-radius: 50%;
    opacity: 0;
    transition: all 0.3s ease;
  }

  .mobile-nav-item:hover::after,
  .mobile-nav-item.active::after {
    opacity: 1;
  }

  .mobile-contact {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex: 1;
    justify-content: flex-end;
  }

  .mobile-language {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .mobile-contact-btn {
    width: 100%;
    background: linear-gradient(45deg, #D7AE54, #D4A574);
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 25px;
    font-size: 1rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(196, 149, 108, 0.3);
  }

  .mobile-contact-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(196, 149, 108, 0.4);
  }

  .nav-contact {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .contact-btn {
    background: white;
    color: black;
    border: none;
    padding: 12px 24px;
    border-radius: 25px;
    font-size: 0.9rem;
    font-weight: 500;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .contact-btn:hover {
    background: rgba(255, 255, 255, 0.9);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(255, 255, 255, 0.3);
  }

  /* 響應式設計 */
  /* 中等螢幕 - 緊湊版選單 */
  @media (max-width: 1200px) and (min-width: 1116px) {
    .main-nav {
      padding: 1.5rem 2.5rem;
    }

    .nav-menu {
      gap: 1rem;
    }

    .nav-item {
      font-size: 0.9rem;
      padding: 6px 1px;
    }
  }

  /* 提早進入手機版選單 */
  @media (max-width: 1115px) {
    .main-nav {
      padding: 1rem 2rem;
    }

    .nav-menu {
      display: none;
    }

    .nav-contact {
      display: none;
    }

    .mobile-menu-btn {
      display: flex !important;
    }
  }

  @media (max-width: 1024px) and (min-width: 769px) {
    .main-nav {
      padding: 1.5rem 2rem;
    }
  }

  /* 桌面版隱藏手機選單按鈕 */
  @media (min-width: 1116px) {
    .mobile-menu-btn {
      display: none !important;
    }
  }

  @media (max-width: 480px) {
    .main-nav {
      padding: 1rem 1.5rem;
    }
  }
</style>

<script>
  // 等待頁面完全載入
  function initializeMobileMenu() {
    // 導航滾動效果
    const mainNav = document.querySelector('.main-nav')

  function handleNavScroll() {
      if (window.pageYOffset > 20) {
        mainNav?.classList.add('scrolled')
    } else {
        mainNav?.classList.remove('scrolled')
    }
    }

    window.addEventListener('scroll', handleNavScroll)

  // 手機版選單功能
  const mobileMenuBtn = document.getElementById('mobile-menu-btn')
  const mobileMenuOverlay = document.getElementById('mobile-menu-overlay')
  const mobileMenuClose = document.getElementById('mobile-menu-close')
  const mobileNavItems = document.querySelectorAll('.mobile-nav-item')

  console.log('Mobile menu elements check:', {
      btn: !!mobileMenuBtn,
      overlay: !!mobileMenuOverlay,
      close: !!mobileMenuClose,
      items: mobileNavItems.length,
      windowWidth: window.innerWidth,
  })

    // 開啟選單
    function openMobileMenu() {
      console.log('Opening mobile menu')
    if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.add('active')
    }
      if (mobileMenuBtn) {
        mobileMenuBtn.classList.add('active')
    }
      document.body.style.overflow = 'hidden'
  }

    // 關閉選單
    function closeMobileMenu() {
      console.log('Closing mobile menu')
    if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.remove('active')
    }
      if (mobileMenuBtn) {
        mobileMenuBtn.classList.remove('active')
    }
      document.body.style.overflow = ''
  }

    // 多種方式綁定點擊事件
    if (mobileMenuBtn) {
      // 方法1: addEventListener
      mobileMenuBtn.addEventListener('click', e => {
        console.log('Button clicked via addEventListener')
      e.preventDefault()
      e.stopPropagation()
      openMobileMenu()
    })

      // 方法2: ontouchstart (行動裝置)
      mobileMenuBtn.addEventListener('touchstart', e => {
        console.log('Button touched via touchstart')
      e.preventDefault()
      openMobileMenu()
    })

      // 方法3: onclick 屬性作為備用
      mobileMenuBtn.onclick = function (e) {
        console.log('Button clicked via onclick property')
      e.preventDefault()
      openMobileMenu()
      return false
    }

      // 確保按鈕可見和可點擊
      mobileMenuBtn.style.pointerEvents = 'auto'
    mobileMenuBtn.style.position = 'relative'
    mobileMenuBtn.style.zIndex = '10000'
  }

    // 關閉按鈕點擊事件
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', e => {
        e.preventDefault()
      closeMobileMenu()
    })
    }

    // 點擊背景關閉選單
    if (mobileMenuOverlay) {
      mobileMenuOverlay.addEventListener('click', e => {
        if (e.target === mobileMenuOverlay) {
          closeMobileMenu()
      }
      })
  }

    // 選單項目點擊後關閉選單
    mobileNavItems.forEach(item => {
      item.addEventListener('click', closeMobileMenu)
  })

    // ESC鍵關閉選單
    document.addEventListener('keydown', e => {
      if (e.key === 'Escape' && mobileMenuOverlay?.classList.contains('active')) {
        closeMobileMenu()
    }
    })

  // 全域測試函數
  window.testMobileMenu = function () {
      console.log('Manual test - opening menu')
    openMobileMenu()
  }
  }

  // 多種方式確保初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMobileMenu)
} else {
    initializeMobileMenu()
}

  // 備用初始化
  window.addEventListener('load', () => {
    setTimeout(initializeMobileMenu, 100)
})
</script>
