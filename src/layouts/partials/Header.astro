---
import type { CompanySettingData } from '@/types'
import ButtonBooking from '@/components/ButtonBooking.vue'
import LanguageSwitcher from '@/components/LanguageSwitcher.astro'
import ThemeController from '@/components/ThemeController.astro'
import DropdownNav from '@/components/ui/DropdownNav.astro'
import NavLink from '@/components/ui/NavLink.astro'
import { createNestedT } from '@/utils/i18n'

const t = await createNestedT()

export interface Props {
  class?: astroHTML.JSX.HTMLAttributes['class']
  companySetting?: CompanySettingData | null
}

const {
  companySetting = null,
} = Astro.props

// 獲取當前路徑並判斷哪個導航項目為 active
const currentPath = Astro.url.pathname
function isActive(path: string) {
  if (path === '/') return currentPath === '/'
  return currentPath.startsWith(path)
}

// 特殊處理 careers 相關頁面
const isCareersActive = currentPath.startsWith('/joinUs')

// 檢查當前語言，英文版使用手機版樣式
const isEnglish = currentPath.startsWith('/en')

// 共用導航配置
const navItems = [
  { href: '/about', text: t('nav.about'), i18nKey: 'nav.about' },
  { href: '/news', text: t('nav.news'), i18nKey: 'nav.news' },
  { href: '/services', text: t('nav.services'), i18nKey: 'nav.services' },
  { href: '/team', text: t('nav.team'), i18nKey: 'nav.team' },
  { href: '/faq', text: t('nav.faq'), i18nKey: 'nav.faq' },
]

const careersDropdown = {
  text: t('nav.careers'),
  isActive: isCareersActive,
  i18nKey: 'nav.careers',
  items: [
    { href: '/joinUs/careers', text: t('nav.recruitment'), i18nKey: 'nav.recruitment' },
    { href: '/joinUs/training', text: t('nav.training'), i18nKey: 'nav.training' },
  ],
}
---

<!-- 導航列 -->
<nav
  class="fixed top-0 left-0 right-0 z-[2000] flex justify-between items-center md:px-16 px-4 py-8 bg-transparent backdrop-blur-none transition-all duration-300 ease-in-out main-nav"
  data-scrolled="false"
>
  <!-- Logo - flexible width -->
  <div class="nav-logo flex-shrink-0">
    <div class="flex items-center">
      <a
        href="/"
        class="flex items-center space-x-2 transition-all duration-300 group"
      >
        { companySetting?.logo ? (
              <img
                src={companySetting?.logo}
                alt={companySetting?.name || 'Logo'}
                class="h-10 w-auto sm:h-12 transition-transform duration-300 group-hover:scale-105"
              />
          )
          : (
            <span class="text-xl font-bold">{ companySetting?.name }</span>
          )}

      </a>
    </div>
  </div>

  <!-- 移除電腦版導航選單，統一使用側邊選單 -->

  <!-- Right side container -->
  <div class="flex items-center gap-2 xl:gap-4 flex-shrink-0">
    <!-- Action Div - 只在大螢幕顯示，但不包含選單按鈕相關功能 -->
    <div class="hidden lg:flex items-center gap-1 xl:gap-2 ">
      <LanguageSwitcher />
      <ThemeController />
      <ButtonBooking size="sm" />
    </div>

    <!-- 側邊選單按鈕 - 在所有螢幕尺寸都顯示 -->
    <button
      class="flex flex-col gap-1 justify-center items-center cursor-pointer w-11 h-11 p-2 z-[10000] relative transition-all duration-300 ease-in-out mobile-menu-btn"
      type="button"
      id="mobile-menu-btn"
    >
      <span class="w-6 h-0.5 transition-all duration-300 ease-in-out rounded-sm block bg-theme-text"></span>
      <span class="w-6 h-0.5 transition-all duration-300 ease-in-out rounded-sm block bg-theme-text"></span>
      <span class="w-6 h-0.5 transition-all duration-300 ease-in-out rounded-sm block bg-theme-text"></span>
    </button>
  </div>

</nav>

<!-- 手機版選單彈出層 -->
<div
  class="fixed top-0 left-0 right-0 bottom-0 z-[9999] bg-black/80 backdrop-blur-sm opacity-0 invisible transition-all duration-300 ease-in-out mobile-menu-overlay"
  id="mobile-menu-overlay"
>
  <div
    class="absolute top-0 right-0 h-full w-80 max-w-[85vw] lg:w-96 lg:max-w-[40vw] backdrop-blur-2xl shadow-[-10px_0_40px_rgba(0,0,0,0.3)] transform translate-x-full transition-transform duration-300 cubic-bezier(0.25,0.46,0.45,0.94) flex flex-col mobile-menu"
    style="background: var(--theme-mobile-menu-bg-gradient);"
  >
    <div class="flex justify-between items-center p-6 border-b mobile-menu-header" style="border-color: var(--theme-mobile-menu-border);">
      <a href="/" class="mobile-logo">
        {companySetting?.logo && (
          <img
            src={companySetting?.logo}
            class="h-10 w-auto object-contain"
            alt="Logo"
          />
        )}
      </a>
      <button
        class="bg-none border-none text-3xl text-[#D7AE54] cursor-pointer w-10 h-10 rounded-full flex items-center justify-center transition-all duration-300 ease-in-out mobile-menu-close hover:bg-[#c4956c]/10 hover:rotate-90"
        id="mobile-menu-close"
      >
        <span>×</span>
      </button>
    </div>
    <nav class="pt-8 pb-4 overflow-y-auto mobile-nav">
      {navItems.map(item => (
        <NavLink href={item.href} text={item.text} isActive={isActive(item.href)} variant="mobile" i18nKey={item.i18nKey} />
      ))}
      <DropdownNav
        text={careersDropdown.text}
        isActive={careersDropdown.isActive}
        variant="mobile"
        i18nKey={careersDropdown.i18nKey}
        items={careersDropdown.items}
      />
      <NavLink href="/business-partnership" text={t('nav.business_partnership')} isActive={isActive('/business-partnership')} variant="mobile" i18nKey="nav.business_partnership" />
    </nav>

    <div class="px-6 py-4 border-t border-b mobile-language-section lg:hidden" style="border-color: var(--theme-mobile-section-border); background: var(--theme-mobile-section-bg);">
      <div class="flex flex-col items-center gap-3 mobile-language">
        <div class="flex items-center gap-4">
          <LanguageSwitcher />
          <ThemeController />
        </div>
        <ButtonBooking size="lg" />
      </div>
    </div>
    <div class="p-6 flex flex-col gap-4 flex-1 justify-end mobile-contact">
      <!-- <button class="w-full bg-gradient-to-r from-[#D7AE54] to-[#D4A574] text-white border-none px-8 py-4 rounded-3xl text-base font-semibold tracking-wide cursor-pointer transition-all duration-300 ease-in-out shadow-lg shadow-[#c4956c]/30 mobile-contact-btn hover:-translate-y-0.5 hover:shadow-xl hover:shadow-[#c4956c]/40">{t('nav.contact')}</button> -->
    </div>
  </div>
</div>

<script>
  // 等待頁面完全載入
  function initializeMobileMenu() {
    // 防止重複初始化
    if ((window as any).headerInitialized) {
      return
    }
    ;(window as any).headerInitialized = true
    // 導航滾動效果
    const mainNav = document.querySelector('.main-nav')

    function handleNavScroll() {
      if (mainNav) {
        const navElement = mainNav as HTMLElement
        if (window.pageYOffset > 20) {
          navElement.setAttribute('data-scrolled', 'true')
        } else {
          navElement.setAttribute('data-scrolled', 'false')
        }
      }
    }

    window.addEventListener('scroll', handleNavScroll)

    // 手機版選單功能
    const mobileMenuBtnEl = document.getElementById('mobile-menu-btn')
    const mobileMenuOverlay = document.getElementById('mobile-menu-overlay')
    const mobileMenuClose = document.getElementById('mobile-menu-close')
    const mobileNavItems = document.querySelectorAll('.mobile-nav-item')
    const mobileMenu = mobileMenuOverlay?.querySelector('.mobile-menu')

    // 開啟選單
    function openMobileMenu() {
      if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.remove('opacity-0', 'invisible')
        mobileMenuOverlay.classList.add('opacity-100', 'visible')
      }
      if (mobileMenu) {
        mobileMenu.classList.remove('translate-x-full')
        mobileMenu.classList.add('translate-x-0')
      }
      if (mobileMenuBtnEl) {
        // 手機選單按鈕動畫
        const spans = mobileMenuBtnEl.querySelectorAll('span')
        if (spans[0]) {
          spans[0].style.transform = 'rotate(45deg) translate(5px, 5px)'
        }
        if (spans[1]) {
          spans[1].style.opacity = '0'
        }
        if (spans[2]) {
          spans[2].style.transform = 'rotate(-45deg) translate(7px, -6px)'
        }
      }
      document.body.style.overflow = 'hidden'
    }

    // 關閉選單
    function closeMobileMenu() {
      if (mobileMenuOverlay) {
        mobileMenuOverlay.classList.add('opacity-0', 'invisible')
        mobileMenuOverlay.classList.remove('opacity-100', 'visible')
      }
      if (mobileMenu) {
        mobileMenu.classList.add('translate-x-full')
        mobileMenu.classList.remove('translate-x-0')
      }
      if (mobileMenuBtnEl) {
        // 恢復手機選單按鈕動畫
        const spans = mobileMenuBtnEl.querySelectorAll('span')
        if (spans[0]) {
          spans[0].style.transform = 'none'
        }
        if (spans[1]) {
          spans[1].style.opacity = '1'
        }
        if (spans[2]) {
          spans[2].style.transform = 'none'
        }
      }
      document.body.style.overflow = ''
    }

    // 多種方式綁定點擊事件
    if (mobileMenuBtnEl) {
      // 方法1: addEventListener
      mobileMenuBtnEl.addEventListener('click', e => {
        e.preventDefault()
        e.stopPropagation()
        openMobileMenu()
      })

      // 方法2: ontouchstart (行動裝置)
      mobileMenuBtnEl.addEventListener('touchstart', e => {
        e.preventDefault()
        openMobileMenu()
      })

      // 方法3: onclick 屬性作為備用
      mobileMenuBtnEl.onclick = function (e) {
        e.preventDefault()
        openMobileMenu()
        return false
      }

      // 確保按鈕可見和可點擊
      mobileMenuBtnEl.style.pointerEvents = 'auto'
      mobileMenuBtnEl.style.position = 'relative'
      mobileMenuBtnEl.style.zIndex = '10000'
    }

    // 關閉按鈕點擊事件
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', e => {
        e.preventDefault()
        closeMobileMenu()
      })
    }

    // 點擊背景關閉選單
    if (mobileMenuOverlay) {
      mobileMenuOverlay.addEventListener('click', e => {
        if (e.target === mobileMenuOverlay) {
          closeMobileMenu()
        }
      })
    }

    // 選單項目點擊後關閉選單（排除下拉選單切換按鈕）
    mobileNavItems.forEach(item => {
      // 如果是下拉選單切換按鈕，不要關閉選單
      if (!item.classList.contains('mobile-dropdown-toggle')) {
        item.addEventListener('click', closeMobileMenu)
      }
    })

    // 移除桌面版下拉選單功能，統一使用側邊選單

    // 手機版子選單功能
    const mobileDropdownToggles = document.querySelectorAll('.mobile-dropdown-toggle')
    mobileDropdownToggles.forEach(toggle => {
      const submenu = toggle.nextElementSibling as HTMLElement
      const icon = toggle.querySelector('.mobile-dropdown-icon') as HTMLElement

      if (submenu && icon) {
        toggle.addEventListener('click', e => {
          e.preventDefault()
          e.stopPropagation()

          const isOpen = submenu.style.maxHeight && submenu.style.maxHeight !== '0px'

          if (isOpen) {
            // 收起子選單
            submenu.style.maxHeight = '0px'
            icon.style.transform = 'rotate(0deg)'
          } else {
            // 展開子選單
            submenu.style.maxHeight = `${submenu.scrollHeight}px`
            icon.style.transform = 'rotate(180deg)'
          }
        })
      }
    })

    // 手機版子選單項目點擊後關閉整個選單
    const mobileNavSubitems = document.querySelectorAll('.mobile-nav-subitem')
    mobileNavSubitems.forEach(item => {
      item.addEventListener('click', closeMobileMenu)
    })

    // ESC鍵關閉選單
    document.addEventListener('keydown', e => {
      if (e.key === 'Escape' && mobileMenuOverlay?.classList.contains('opacity-100')) {
        closeMobileMenu()
      }
    })

    // 全域測試函數
    ;(window as any).testSideMenu = function () {
      openMobileMenu()
    }
  } // initializeMobileMenu 函數結束

  // 多種方式確保初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMobileMenu)
  } else {
    initializeMobileMenu()
  }

  // 備用初始化
  window.addEventListener('load', () => {
    setTimeout(initializeMobileMenu, 100)
  })
</script>

<style is:global>
/* 移除不必要的桌面版下拉選單樣式 */

/* CSS 變數定義 */
:root {
  /* 導航列變數 */
  --theme-header-bg: rgba(255, 255, 255, 0.95);
  --theme-header-text: #000000;
  --theme-header-border: rgba(0, 0, 0, 0.1);

  /* 子選單變數 */
  --theme-submenu-bg: rgba(255, 255, 255, 0.98);
  --theme-submenu-text: #000000;
  --theme-submenu-border: rgba(0, 0, 0, 0.1);
  --theme-submenu-hover-bg: rgba(59, 130, 246, 0.1);
  --theme-submenu-hover-text: #D7AE54;
}

/* 深色模式變數 */
.dark, .dark-theme, [data-theme="dark"] {
  /* 導航列變數 */
  --theme-header-bg: rgba(30, 30, 30, 0.95);
  --theme-header-text: #ffffff;
  --theme-header-border: rgba(255, 255, 255, 0.2);

  /* 子選單變數 */
  --theme-submenu-bg: rgba(30, 30, 30, 0.98);
  --theme-submenu-text: #ffffff;
  --theme-submenu-border: rgba(255, 255, 255, 0.2);
  --theme-submenu-hover-bg: rgba(215, 174, 84, 0.2);
  --theme-submenu-hover-text: #D7AE54;
}

/* 移除所有桌面版子選單樣式 */

/* 手機版子選單樣式 */
.mobile-nav-dropdown .mobile-nav-item {
  border-bottom: none;
}

.mobile-nav-submenu {
  background-color: var(--theme-mobile-submenu-bg, rgba(0,0,0,0.1));
  border-left: 2px solid var(--theme-mobile-nav-indicator, #D7AE54);
  margin-left: 1rem;
}

.mobile-nav-subitem {
  border-left: 3px solid transparent !important;
  transition: all 0.2s ease !important;
}

.mobile-nav-subitem:hover,
.mobile-nav-subitem.active {
  background-color: var(--theme-mobile-submenu-hover-bg, rgba(215, 174, 84, 0.1)) !important;
  opacity: 1 !important;
  border-left: 3px solid #D7AE54 !important;
  padding-left: 2.5rem !important;
}

/* 移除桌面版導航相關的響應式樣式，統一使用側邊選單 */
</style>
