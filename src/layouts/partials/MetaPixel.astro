---
interface Props {
  pixelId: string
}

const { pixelId } = Astro.props
---

<!--
  This section is for Meta Pixel (Facebook Pixel) tracking code.
  And important part is using `is:inline` attribute on the script tag.
  Tell Astro ignores all the optimizations it does to scripts and just includes them as they are.
-->
<script is:inline define:vars={{ pixelId }}>
(function (f, b, e, v, n, t, s) {
  if (f.fbq) return
  n = f.fbq = function (...args) {
    if (n.callMethod) {
      n.callMethod(...args)
    } else {
      n.queue.push(args)
    }
  }
  if (!f._fbq) f._fbq = n
  n.push = n
  n.loaded = true
  n.version = '2.0'
  n.queue = []
  t = b.createElement(e)
  t.async = true
  t.src = v
  s = b.getElementsByTagName(e)[0]
  s.parentNode.insertBefore(t, s)
}(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js'))
fbq('init', pixelId)
fbq('track', 'PageView')
</script>
<noscript>
  <img height="1" width="1" style="display:none" src={`https://www.facebook.com/tr?id=${pixelId}&ev=PageView&noscript=1`} />
</noscript>
