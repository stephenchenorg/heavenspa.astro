---
import { seoMeta } from '@stephenchenorg/astro/page'
import { getServiceDetail } from '@/api/service'
import Layout from '@/layouts/Layout.astro'
import { createNestedT } from '@/utils/i18n'
import { getLocale } from 'i18n:astro'

const t = await createNestedT()
const currentLocale = getLocale()
const isEnglish = currentLocale === 'en'
// Get route parameters
const { category_id, id } = Astro.params

// Get service details
const serviceData = await getServiceDetail(Number.parseInt(id!, 10))
const service = serviceData.service

const meta = seoMeta({
  title: `${service.title} - ${service.category.title} - Heaven Spa`,
  description: service.content_1 || t('services.errors.defaultDescription'),
})

---

<Layout meta={meta}>
  <main class="section-container">

    <!-- Service Banner -->
    <section class="relative w-full h-72 sm:h-80 md:h-96 lg:h-[28rem] mb-8 overflow-hidden">
      <!-- Background Image -->
      <div
        class="absolute inset-0 bg-cover bg-center"
        style={`background-image: url('${service.cover?.desktop || 'https://imagefaker.access.mx.com/1920x1080/282828/eae0d0/?retina=1'}')`}
      >
      </div>
      <!-- Gradient Overlay -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/40 to-black/20"></div>
      <!-- Text Content -->
      <div class="relative z-10 flex items-center justify-center h-full text-center text-white px-4 sm:px-6 lg:px-8">
        <div class={`w-full ${isEnglish ? 'max-w-5xl' : 'max-w-4xl'}`}>
          <!-- Breadcrumb Navigation -->
          <nav class={`mb-2 sm:mb-4 md:mb-6 ${isEnglish ? 'hidden xs:block' : ''}`}>
            <ol class={`flex items-center justify-center flex-wrap gap-x-1 sm:gap-x-2 gap-y-1 text-white/70 ${isEnglish ? 'text-[10px] xs:text-xs sm:text-sm' : 'text-xs sm:text-sm'}`}>
              <li><a href="/services" class="hover:text-white transition-colors underline-offset-2 hover:underline truncate max-w-16 sm:max-w-none">{t('nav.services')}</a></li>
              <li class="text-white/50 text-[8px] sm:text-xs">/</li>
              <li><a href={`/services/${category_id}/items`} class="hover:text-white transition-colors underline-offset-2 hover:underline truncate max-w-20 sm:max-w-none">{service.category.title}</a></li>
              <li class="text-white/50 text-[8px] sm:text-xs">/</li>
              <li class="text-white font-medium truncate max-w-24 sm:max-w-none" title={service.title}>{service.title}</li>
            </ol>
          </nav>

          <!-- Main Title -->
          <h1 class={`font-bold mb-3 sm:mb-4 leading-tight ${isEnglish ? 'text-[clamp(1.5rem,6vw,3rem)] sm:text-[clamp(2rem,5vw,3.5rem)]' : 'text-[clamp(2rem,7vw,4rem)] sm:text-[clamp(2.5rem,6vw,4.5rem)]'}`}>
            {service.title}
          </h1>

          <!-- Category Subtitle -->
          <p class={`text-white/80 font-medium ${isEnglish ? 'text-base sm:text-lg md:text-xl' : 'text-lg sm:text-xl md:text-2xl'}`}>
            {service.category.title}
          </p>
        </div>
      </div>
    </section>

    <!-- Service Content -->
    <div class="max-w-7xl mx-auto px-4 py-8 ">

      <!-- Three Column Layout -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">

        <!-- Left Side: General Information -->
        <div class="lg:col-span-1 space-y-8" data-animate-in="left">

          <!-- Service Specifications -->
          <div data-animate-in="up">
            <h2 class="text-xl font-bold mb-3 text-neutral-800 dark:text-neutral-600">{t('services.detail.servicePlans')}</h2>
            {service.specifications && service.specifications.length > 0 ? (
              <div class="space-y-4">
                {service.specifications.map((spec, index) => (
                  <>
                    <div class="p-4 transition-all duration-300 hover:scale-[1.02] hover:shadow-sm" data-animate-in="fadeIn" style={`animation-delay: ${index * 100}ms`}>
                      <h3 class="text-base font-semibold mb-3 text-neutral-800 dark:text-neutral-600">{spec.title}</h3>
                      <div class="grid grid-cols-1 gap-2 text-sm">
                        <div class="flex justify-between items-center py-1 transition-colors duration-200 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded px-2">
                          <span class="text-neutral-800 dark:text-neutral-600">{t('services.detail.price')}</span>
                          <span class="font-medium text-neutral-800 dark:text-neutral-600">NT$ {spec.selling_price?.toLocaleString()}</span>
                        </div>
                        <div class="flex justify-between items-center py-1 transition-colors duration-200 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded px-2">
                          <span class="text-neutral-800 dark:text-neutral-600">{t('services.detail.duration')}</span>
                          <span class="font-medium text-neutral-800 dark:text-neutral-600">{spec.minutes} {t('services.detail.minutes')}</span>
                        </div>
                        <div class="flex justify-between items-center py-1 transition-colors duration-200 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded px-2">
                          <span class="text-neutral-800 dark:text-neutral-600">{t('services.detail.sessions')}</span>
                          <span class="font-medium text-neutral-800 dark:text-neutral-600">{spec.hall_count || '-'}</span>
                        </div>
                      </div>
                      {spec.description && (
                        <>
                          <div class="my-3 h-px bg-neutral-200 dark:bg-neutral-300 transform origin-left transition-all duration-500"></div>
                          <p class="text-sm text-neutral-600 dark:text-neutral-600 leading-relaxed">{spec.description}</p>
                        </>
                      )}
                    </div>
                    {index < service.specifications.length - 1 && (
                      <div class="h-px bg-neutral-200 dark:bg-neutral-300 transform origin-left transition-all duration-700"></div>
                    )}
                  </>
                ))}
              </div>
            ) : (
              <div class="p-4 text-center text-neutral-500 dark:text-neutral-400 text-sm">
                {t('services.detail.noData')}
              </div>
            )}
          </div>

          <div class="h-px bg-neutral-200 dark:bg-neutral-300 transform origin-left transition-all duration-700" data-animate-in="right"></div>

          <!-- Service Details -->
          <div class="space-y-6" data-animate-in="up">

              {service.content_1 && (
                <div data-animate-in="fadeIn" style="animation-delay: 200ms">
                  <h3 class="text-base font-semibold mb-3 text-neutral-800 dark:text-neutral-600 flex items-center transition-colors duration-200 hover:text-neutral-600 dark:hover:text-neutral-500">
                    {t('services.detail.detailedDescription')}
                  </h3>
                  <div class="text-sm text-neutral-600 dark:text-neutral-600 leading-relaxed whitespace-pre-line p-4 transition-all duration-300 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded">
                    {service.content_1}
                  </div>
                </div>
              )}

              {service.content_2 && (
                <>
                  <div class="h-px bg-neutral-200 dark:bg-neutral-300 transform origin-left transition-all duration-700"></div>
                  <div data-animate-in="fadeIn" style="animation-delay: 300ms">
                    <h3 class="text-base font-semibold mb-3 text-neutral-800 dark:text-neutral-600 flex items-center transition-colors duration-200 hover:text-neutral-600 dark:hover:text-neutral-500">
                      {t('services.detail.suitableFor')}
                    </h3>
                    <div class="text-sm text-neutral-600 dark:text-neutral-600 leading-relaxed whitespace-pre-line p-4 transition-all duration-300 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded">
                      {service.content_2}
                    </div>
                  </div>
                </>
              )}

              {service.content_3 && (
                <>
                  <div class="h-px bg-neutral-200 dark:bg-neutral-300 transform origin-left transition-all duration-700"></div>
                  <div data-animate-in="fadeIn" style="animation-delay: 400ms">
                    <h3 class="text-base font-semibold mb-3 text-neutral-800 dark:text-neutral-600 flex items-center transition-colors duration-200 hover:text-neutral-600 dark:hover:text-neutral-500">
                      {t('services.detail.courseHighlights')}
                    </h3>
                    <div class="text-sm text-neutral-600 dark:text-neutral-600 leading-relaxed whitespace-pre-line p-4 transition-all duration-300 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded">
                      {service.content_3}
                    </div>
                  </div>
                </>
              )}

              {service.content_4 && (
                <>
                  <div class="h-px bg-neutral-200 dark:bg-neutral-300 transform origin-left transition-all duration-700"></div>
                  <div data-animate-in="fadeIn" style="animation-delay: 500ms">
                    <h3 class="text-base font-semibold mb-3 text-neutral-800 dark:text-neutral-600 flex items-center transition-colors duration-200 hover:text-neutral-600 dark:hover:text-neutral-500">
                      {t('services.detail.courseContent')}
                    </h3>
                    <div class="text-sm text-neutral-600 dark:text-neutral-600 leading-relaxed whitespace-pre-line p-4 transition-all duration-300 hover:bg-neutral-50 dark:hover:bg-neutral-50 rounded">
                      {service.content_4}
                    </div>
                  </div>
                </>
              )}
            </div>
        </div>

        <!-- Right Side: Vertical Image Display -->
        {service.images && service.images.length > 0 && (
          <div class="lg:col-span-2 space-y-4" data-animate-in="right">
            <div class="space-y-4">
              {service.images.map((imageItem, index) => (
                <div
                  class="aspect-[4/3] overflow-hidden shadow-sm hover:shadow-lg transition-all duration-500 hover:scale-[1.02] transform"
                  data-animate-in="scaleIn"
                  style={`animation-delay: ${index * 150}ms`}
                >
                  <img
                    src={imageItem.image.desktop}
                    alt={`${service.title} ${t('services.detail.imageAlt')} ${index + 1}`}
                    class="w-full h-full object-cover hover:scale-110 transition-transform duration-700 ease-out"
                    loading="lazy"
                  />
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>

  </main>
</Layout>

<style>
  .prose {
    max-width: none;
  }
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #1f2937;
    font-weight: 600;
  }
  .prose p {
    margin-bottom: 1rem;
    line-height: 1.75;
  }

</style>

<script>
  // Animation Observer
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -10% 0px',
}

  function animateElements() {
  const elements = document.querySelectorAll('[data-animate-in]')

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('in-view')
        observer.unobserve(entry.target)
      }
    })
  }, observerOptions)

  elements.forEach(el => observer.observe(el))
}

  // Start animation after page load
  document.addEventListener('DOMContentLoaded', () => {
    // Delay animation start slightly to let page render complete
    setTimeout(animateElements, 100)
})

  // If page is already loaded (cached situation)
  if (document.readyState === 'complete') {
    setTimeout(animateElements, 100)
}
</script>

<style>
  /* Custom xs breakpoint for extra small screens */
  @media (min-width: 475px) {
    .xs\:block {
      display: block;
    }

    .xs\:text-xs {
      font-size: 0.75rem;
      line-height: 1rem;
    }
  }

  /* Hide breadcrumb on very small screens for English */
  @media (max-width: 474px) {
    .hidden.xs\:block {
      display: none !important;
    }
  }
</style>
