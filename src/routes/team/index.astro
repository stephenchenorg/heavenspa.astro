---
import type { TeamMember } from '@/types'
import {type PageMeta, seoMeta} from '@stephenchenorg/astro/page'
import { getAllTeams } from '@/api/teams'
import Layout from '@/layouts/Layout.astro'
import { createNestedT } from '@/utils/i18n'
import SectionTitle from '../../components/ui/SectionTitle.astro'
import TeamCard from '../../components/ui/TeamCard.astro'
import {getLocale} from "i18n:astro";
import {getSeoConfig, getCanonicalUrl} from "@/utils/seoConfig";

const t = await createNestedT()

const url = new URL(Astro.request.url)
const selectedType = Number.parseInt(url.searchParams.get('type') || '10')

// 獲取所有團隊成員
let teamMembers: TeamMember[] = []
const types = [
  { id: 10, title: t('team.types.all') },
  { id: 20, title: t('team.types.available') },
  { id: 30, title: t('team.types.new') },
  { id: 40, title: t('team.types.recommended') },
]

try {
  teamMembers = await getAllTeams(selectedType)
} catch (error) {
  console.error('Failed to fetch team members:', error)
}

const currentLocale = getLocale()
const locale = currentLocale === 'en' ? 'en' : 'zh_TW'
const seoConfig = getSeoConfig('team', locale)
const meta = seoMeta({
  ...seoConfig,
  canonical: getCanonicalUrl('team', locale),
} as PageMeta)

---

<Layout meta={meta}>
  <main class="relative z-10 w-full min-h-screen px-4 md:px-6 lg:px-8 bg-theme-bg text-theme-text" style="padding-top: 120px; padding-bottom: 40px;">

    <!-- 標題區 -->
    <SectionTitle title={t('team.title')} subtitle={t('team.subtitle')} />

    <!-- 團隊成員網格 -->
    <div class="max-w-6xl mx-auto w-full">
      <!-- Tab Navigation -->
      {types.length > 1 && (
          <div class="w-full mb-8 px-4">
            <div class="max-w-4xl mx-auto">
              <div
                style=" border-radius: 12px; padding: 8px;"
              >
                <div class="flex flex-wrap gap-2 justify-center">
                  {types.map(type => (
                      <a
                        href={`?type=${type.id}`}
                        class={`tab-item px-4 py-2 rounded-lg font-medium transition-all duration-300 whitespace-nowrap text-center no-underline border-0 cursor-pointer ${selectedType === type.id ? 'active' : ''}`}
                        style={selectedType === type.id ? 'background-color: var(--color-primary-500); color: white;' : 'background-color: var(--color-neutral-100); color: var(--theme-text);'}
                      >
                        {type.title}
                      </a>
                  ))}
                </div>
              </div>
            </div>
          </div>
      )}

      {teamMembers && teamMembers.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {teamMembers.map(member => (
            <TeamCard
              member={member}
              uniqueId={`team-${member.id}`}
            />
          ))}
        </div>
      ) : (
        <div class="text-center py-16">
          <div class="max-w-md mx-auto">
            <h3 class="text-lg font-medium mb-2 text-[var(--theme-text,#1f2937)]">
              {t('team.noData')}
            </h3>
            <p class="text-[var(--theme-text-secondary,#6b7280)]">
              {t('team.noDataDescription')}
            </p>
          </div>
        </div>
      )}
    </div>
  </main>
</Layout>
