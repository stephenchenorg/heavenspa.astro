---
import type { TeamMember } from '@/types'
import { seoMeta } from '@stephenchenorg/astro/page'
import { getTeamMember } from '@/api/teams'
import Schedule from '@/components/ui/Schedule.astro'
import Layout from '@/layouts/Layout.astro'
import { createNestedT } from '@/utils/i18n'

const t = await createNestedT()

// 建立翻譯函式

// 獲取 ID 參數
const { id } = Astro.params
if (!id || Number.isNaN(Number(id))) {
  return Astro.rewrite('/404')
}

// 獲取指定的團隊成員
let teamMember: TeamMember | null = null

try {
  teamMember = await getTeamMember(Number(id), (Astro.locals as any).locale)

  if (!teamMember) {
    return Astro.rewrite('/404')
  }
} catch (error) {
  console.error('Failed to fetch team member:', error)
  return Astro.rewrite('/404')
}

// SEO 設定 - 優先使用成員的 SEO 設定，否則使用預設值
const meta = seoMeta({
  title: teamMember.seo_title || teamMember.og_title || `${teamMember.title} - Heaven Spa`,
  description: teamMember.seo_description || teamMember.og_description || `了解更多關於 ${teamMember.title} 的專業服務和經驗。`,
  og_title: teamMember.og_title,
  og_description: teamMember.og_description,
  og_image: teamMember.og_image,
  seo_keyword: teamMember.seo_keyword,
  seo_head: teamMember.seo_head,
  seo_body: teamMember.seo_body,
  seo_json_ld: teamMember.seo_json_ld,
})

// 獲取有效的圖片列表 - 優先使用 is_default 為 true 的圖片
const validImages = teamMember.images?.filter(img => img.image?.desktop) || []
const defaultImage = validImages.find(img => img.is_default)?.image?.desktop
const mainImage = defaultImage || teamMember.image?.desktop || validImages[0]?.image?.desktop || '/placeholder.jpg'
---

<Layout meta={meta}>
  <main class="section-container pt-24 md:pt-32 pb-16 bg-[var(--theme-bg,#ffffff)] text-[var(--theme-text,#1f2937)]">
    <div class="flex flex-col lg:flex-row items-start gap-6 lg:gap-8 max-w-6xl mx-auto px-4 sm:px-6">

      <!-- 手機版標題 -->
      <div class="block lg:hidden w-full ">
        <h1 class="font-bold text-3xl md:text-4xl leading-tight text-[var(--theme-text,#1f2937)]">
          {teamMember.title}
          {teamMember.job && (
            <span class="text-lg font-normal text-[var(--theme-text-secondary,#6b7280)]">  {teamMember.job}</span>
          )}
        </h1>
      </div>

      <!-- 左側：圖片輪播 -->
      <div class="flex flex-col items-center w-full lg:w-5/12">
        <!-- 主圖輪播區域 -->
        <div class="relative w-full aspect-square max-w-lg mx-auto overflow-hidden border-2 shadow-lg bg-[var(--theme-card-bg,#ffffff)] border-[var(--theme-border,#e5e7eb)]">
          {validImages.length > 1 && (
            <>
              <button
                type="button"
                class="absolute left-3 top-1/2 -translate-y-1/2 z-10 bg-[var(--theme-card-bg,#ffffff)]/90 hover:bg-[var(--theme-card-bg,#ffffff)] rounded-full p-2 shadow-md transition-all duration-200 text-[var(--theme-text,#1f2937)]"
                onclick="carouselPrev()"
                aria-label="上一張"
              >
                <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                  <path d="M15 18l-6-6 6-6" />
                </svg>
              </button>
              <button
                type="button"
                class="absolute right-3 top-1/2 -translate-y-1/2 z-10 bg-[var(--theme-card-bg,#ffffff)]/90 hover:bg-[var(--theme-card-bg,#ffffff)] rounded-full p-2 shadow-md transition-all duration-200 text-[var(--theme-text,#1f2937)]"
                onclick="carouselNext()"
                aria-label="下一張"
              >
                <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                  <path d="M9 18l6-6-6-6" />
                </svg>
              </button>
            </>
          )}

          <img
            id="carousel-img"
            src={mainImage}
            alt={teamMember.title}
            class="w-full h-full object-cover select-none transition-all duration-300"
            loading="lazy"
          />

          <!--{validImages.length > 1 && (-->
          <!--  <div class="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2" id="carousel-dots">-->
          <!--    {validImages.map((_, idx) => (-->
          <!--      <button-->
          <!--        type="button"-->
          <!--        class={`w-2.5 h-2.5 rounded-full transition-all duration-200 ${-->
          <!--          idx === 0-->
          <!--            ? 'bg-[var(&#45;&#45;color-primary-500,#3b82f6)] shadow-lg'-->
          <!--            : 'bg-[var(&#45;&#45;theme-card-bg,#ffffff)]/60 hover:bg-[var(&#45;&#45;theme-card-bg,#ffffff)]/80'-->
          <!--        }`}-->
          <!--        data-idx={idx}-->
          <!--        onclick={`carouselThumb(${idx})`}-->
          <!--      >-->
          <!--      </button>-->
          <!--    ))}-->
          <!--  </div>-->
          <!--)}-->
        </div>

        <!-- 縮圖預覽 -->
        {validImages.length > 1 && (
          <div id="carousel-thumbs" class="flex flex-wrap justify-center gap-3 mt-6 max-w-lg">
            {validImages.map((img, idx) => (
              <img
                src={img.image?.desktop}
                alt={`${t('team.thumbnail')}${idx + 1}`}
                class={`w-20 h-20 object-cover rounded-lg border-2 cursor-pointer transition-all duration-200 shadow-sm ${
                  idx === 0
                    ? 'border-[var(--color-primary-500,#3b82f6)] ring-2 ring-[var(--color-primary-200,#bfdbfe)]'
                    : 'border-[var(--theme-border,#e5e7eb)] hover:border-[var(--theme-text-secondary,#6b7280)] hover:shadow-md'
                }`}
                onclick={`carouselThumb(${idx})`}
                loading="lazy"
              />
            ))}
          </div>
        )}

      </div>

      <!-- 右側：成員資訊 -->
      <div class="flex-1 flex flex-col items-start lg:w-7/12">
        <!-- 桌面版标题（隐藏在手机版） -->
        <h1 class="hidden lg:block font-bold text-3xl md:text-4xl mb-6 leading-tight text-[var(--theme-text,#1f2937)]">
          {teamMember.title}
          {teamMember.job && (
            <span class="text-lg font-normal text-[var(--theme-text-secondary,#6b7280)]">  {teamMember.job}</span>
          )}
        </h1>

        <!-- 整合資訊區塊 -->
        <div class="w-full rounded-xl p-6 shadow-sm border-2 bg-[var(--theme-card-bg,#ffffff)] border-[var(--theme-border,#e5e7eb)] text-[var(--theme-text,#1f2937)] space-y-6">

          <!-- 工作班表 -->
          <div>
            <h4 class="text-lg font-semibold mb-4 text-[var(--theme-text,#1f2937)] flex items-center gap-2">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              {t('team.schedule')}
            </h4>
            <Schedule teamMember={teamMember} />
          </div>

          <!-- 個人資訊 -->
          {(teamMember.height || teamMember.weight || teamMember.years || teamMember.age) && (
            <>
              <!-- 分隔線 -->
              <div class="border-t border-[var(--theme-border,#e5e7eb)]"></div>

              <div>
                <h4 class="text-lg font-semibold mb-4 text-[var(--theme-text,#1f2937)] flex items-center gap-2">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" />
                    <circle cx="12" cy="7" r="4" />
                  </svg>
                  {t('team.personalInfo')}
                </h4>
                <div class="space-y-3">
                  {teamMember.height && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-[var(--theme-text-secondary,#6b7280)]">{t('team.height')}</span>
                      <span class="font-semibold text-[var(--theme-text,#1f2937)]">{teamMember.height} cm</span>
                    </div>
                  )}
                  {teamMember.weight && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-[var(--theme-text-secondary,#6b7280)]">{t('team.weight')}</span>
                      <span class="font-semibold text-[var(--theme-text,#1f2937)]">{teamMember.weight} kg</span>
                    </div>
                  )}
                  {teamMember.years && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-[var(--theme-text-secondary,#6b7280)]">{t('team.experience')}</span>
                      <span class="font-semibold text-[var(--theme-text,#1f2937)]">{teamMember.years} {t('team.years')}</span>
                    </div>
                  )}
                  {teamMember.age && (
                    <div class="flex justify-between items-center py-2">
                      <span class="text-[var(--theme-text-secondary,#6b7280)]">{t('team.age')}</span>
                      <span class="font-semibold text-[var(--theme-text,#1f2937)]">{teamMember.age} {t('team.yearsOld')}</span>
                    </div>
                  )}
                </div>
              </div>
            </>
          )}

          <!-- 分隔線 -->
          <div class="border-t border-[var(--theme-border,#e5e7eb)]"></div>

          <!-- 自我介紹 -->
          <div>
            <h4 class="text-lg font-semibold mb-4 text-[var(--theme-text,#1f2937)] flex items-center gap-2">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
              </svg>
              {t('team.introduction')}
            </h4>
            <div class="prose prose-lg max-w-none leading-relaxed">
              {teamMember.content ? (
                <div set:html={teamMember.content} />
              ) : (
                <p class="text-[var(--theme-text-secondary,#6b7280)]">{t('team.noIntroduction')}</p>
              )}
            </div>
          </div>

        </div>
      </div>
    </div>
  </main>

  <!-- 燈箱模態框 -->
  {validImages.length > 0 && (
    <div id="lightbox" class="fixed inset-0 bg-black/90 z-50 hidden items-center justify-center p-4">
      <div class="relative max-w-4xl max-h-full">
        <button
          onclick="closeLightbox()"
          class="absolute top-4 right-4 text-white hover:text-gray-300 z-10"
        >
          <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path d="M18 6L6 18M6 6l12 12" />
          </svg>
        </button>
        <img
          id="lightbox-img"
          src=""
          alt=""
          class="max-w-full max-h-full object-contain"
        />
        <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2" id="lightbox-dots">
          {validImages.map((_, idx) => (
            <button
              class="w-3 h-3 rounded-full bg-white/50 hover:bg-white/80 transition-all duration-200"
              data-idx={idx}
              onclick={`showLightboxImage(${idx})`}
            />
          ))}
        </div>
      </div>
    </div>
  )}

  <!-- 燈箱和輪播功能 JavaScript -->
  {validImages.length > 0 && (
    <script type="module" is:inline define:vars={{ teamImages: validImages.map(img => img.image?.desktop).filter(Boolean), allImages: validImages }}>
      document.addEventListener('DOMContentLoaded', () => {
        let currentIndex = 0
  let lightboxIndex = 0
  const imgElement = document.getElementById('carousel-img')
  const dotElements = document.querySelectorAll('#carousel-dots button')
  const thumbElements = document.querySelectorAll('#carousel-thumbs img')
  const lightbox = document.getElementById('lightbox')
  const lightboxImg = document.getElementById('lightbox-img')
  const lightboxDots = document.querySelectorAll('#lightbox-dots button')

  // 輪播功能
  function updateCarousel() {
          if (imgElement && teamImages[currentIndex]) {
            imgElement.src = teamImages[currentIndex]
      imgElement.alt = `作品圖${currentIndex + 1}`
    }

          // 更新指示點
          dotElements.forEach((dot, index) => {
            if (index === currentIndex) {
              dot.className = 'w-2.5 h-2.5 rounded-full transition-all duration-200 bg-[var(--color-primary-500,#3b82f6)] shadow-lg'
      } else {
              dot.className = 'w-2.5 h-2.5 rounded-full transition-all duration-200 bg-[var(--theme-card-bg,#ffffff)]/60 hover:bg-[var(--theme-card-bg,#ffffff)]/80'
      }
          })

    // 更新縮圖
    thumbElements.forEach((thumb, index) => {
            if (index === currentIndex) {
              thumb.className = 'w-20 h-20 object-cover rounded-lg border-2 cursor-pointer transition-all duration-200 shadow-sm border-[var(--color-primary-500,#3b82f6)] ring-2 ring-[var(--color-primary-200,#bfdbfe)]'
      } else {
              thumb.className = 'w-20 h-20 object-cover rounded-lg border-2 cursor-pointer transition-all duration-200 shadow-sm border-[var(--theme-border,#e5e7eb)] hover:border-[var(--theme-text-secondary,#6b7280)] hover:shadow-md'
      }
          })
  }

        // 燈箱功能
        function updateLightbox() {
          if (lightboxImg && allImages[lightboxIndex]) {
            lightboxImg.src = allImages[lightboxIndex].image?.desktop || allImages[lightboxIndex].image?.mobile
      lightboxImg.alt = `作品 ${lightboxIndex + 1}`
    }

          // 更新燈箱指示點
          lightboxDots.forEach((dot, index) => {
            if (index === lightboxIndex) {
              dot.className = 'w-3 h-3 rounded-full bg-white transition-all duration-200'
      } else {
              dot.className = 'w-3 h-3 rounded-full bg-white/50 hover:bg-white/80 transition-all duration-200'
      }
          })
  }

        // 全域函式
        window.carouselPrev = () => {
          currentIndex = (currentIndex - 1 + teamImages.length) % teamImages.length
    updateCarousel()
  }

      window.carouselNext = () => {
          currentIndex = (currentIndex + 1) % teamImages.length
    updateCarousel()
  }

      window.carouselThumb = index => {
          currentIndex = index
    updateCarousel()
  }

      window.openLightbox = index => {
          lightboxIndex = index
    lightbox.classList.remove('hidden')
    lightbox.classList.add('flex')
    updateLightbox()
    document.body.style.overflow = 'hidden'
  }

      window.closeLightbox = () => {
          lightbox.classList.add('hidden')
    lightbox.classList.remove('flex')
    document.body.style.overflow = 'auto'
  }

      window.showLightboxImage = index => {
          lightboxIndex = index
    updateLightbox()
  }

      // 鍵盤控制
      document.addEventListener('keydown', e => {
          if (lightbox.classList.contains('flex')) {
            if (e.key === 'Escape') {
              window.closeLightbox()
      } else if (e.key === 'ArrowLeft') {
              lightboxIndex = (lightboxIndex - 1 + allImages.length) % allImages.length
        updateLightbox()
      } else if (e.key === 'ArrowRight') {
              lightboxIndex = (lightboxIndex + 1) % allImages.length
        updateLightbox()
      }
          }
        })

  // 點擊背景關閉燈箱
  lightbox?.addEventListener('click', e => {
          if (e.target === lightbox) {
            window.closeLightbox()
    }
        })

  // 初始化
  if (teamImages.length > 1) {
          updateCarousel()

    // 自動輪播（可選）
    setInterval(() => {
            currentIndex = (currentIndex + 1) % teamImages.length
      updateCarousel()
    }, 5000)
  }
      })
  </script>
  )}
</Layout>
