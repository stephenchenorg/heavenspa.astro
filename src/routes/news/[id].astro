---
import {seoMeta} from '@stephenchenorg/astro/page'
import {getArticle, getRelatedArticles, getAdjacentArticles} from '@/api/articles'
import Prose from '@/components/ui/Prose.vue'
import Layout from '@/layouts/Layout.astro'
import {createNestedT} from '@/utils/i18n'

const t = await createNestedT()
const {id} = Astro.params
if (!id || Number.isNaN(Number(id))) {
    return Astro.rewrite('/404')
}

// 如果找不到文章，創建一個預設的文章物件
const defaultArticle = {
    id: 0,
    title: t('news.errors.notFound'),
    content: t('news.errors.notFoundContent'),
    cover: 'https://hamahairspa.com/wp-content/uploads/2024/06/%E5%A4%A7young-woman-lying-down-with-traditional-hot-stones-along-spi-e1719460788846.jpeg',
}

const article = await getArticle(id) || defaultArticle

// 獲取相關文章
const tagIds = article.tags?.data?.map(tag => Number(tag.id)) || []
const relatedArticles = tagIds.length > 0 ? await getRelatedArticles(tagIds) : []

// 過濾掉當前文章
const filteredRelatedArticles = relatedArticles.filter(relatedArticle => relatedArticle.id !== article.id)

const meta = seoMeta({
    title: `${article.title} - Heaven Spa`,
    description: article.content ? article.content.replace(/<[^>]*>/g, '').substring(0, 160) : t('news.errors.defaultDescription'),
})
---

<Layout meta={meta}>
    <!-- Hero Banner -->
    <section class="relative aspect-[1920/600] overflow-hidden">
        <div class="absolute inset-0">
            <img
                    src={article.cover || 'https://hamahairspa.com/wp-content/uploads/2024/06/%E5%A4%A7young-woman-lying-down-with-traditional-hot-stones-along-spi-e1719460788846.jpeg'}
                    alt={article.title}
                    class="object-cover w-full h-full"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-black/10"></div>
        </div>

        <!-- Hero Content Overlay -->
        <div class="absolute inset-0 flex items-center justify-center">
            <div class="text-center text-white px-4 sm:px-6 lg:px-8">
                <!-- Main Title - Center -->
                <h1 class="text-2xl sm:text-3xl lg:text-5xl xl:text-6xl font-bold leading-tight tracking-wide mb-8">
                    {article.title}
                </h1>

                <!-- Meta Information - Below Title -->
                <div class="flex flex-col sm:flex-row sm:items-center justify-center gap-4 text-sm">
                    <!-- Date -->
                    <div class="flex items-center justify-center space-x-2">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                        </svg>
                        <span>{new Date(article.started_at || new Date()).toLocaleDateString('zh-TW')}</span>
                    </div>

                    <!-- Author -->
                    {(article.author) && (
                            <div class="flex items-center justify-center space-x-2">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                                </svg>
                                <span>{article.author}</span>
                            </div>
                    )}

                    <!-- Tags -->
                    <div class="flex items-center justify-center space-x-2">
                        {article.tags?.data?.map((tag) => (
                            <span class="px-3 py-1 text-xs font-medium rounded-full bg-white/20 backdrop-blur-sm border border-white/20">
                                {tag.title}
                            </span>
                        ))}
                    </div>
                </div>
            </div>
        </div>
    </section>

    <main class="section-container" style="background: var(--theme-bg, #ffffff); color: var(--theme-text, #000000);">
        <!-- Main Content Area with Sidebar Layout -->
        <section class="py-8">
            <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="grid grid-cols-1 lg:grid-cols-5 gap-8">
                    <!-- Left Content - 3/5 (60%) -->
                    <div class="lg:col-span-3">
                        <!-- Image Gallery Carousel -->
                        <div class="mb-12">
                            <div class="relative">
                                <!-- Carousel Container -->
                                <div class="relative aspect-[800/544] overflow-hidden shadow-lg"
                                     style="background: var(--theme-card-bg);">
                                    <!-- Slides -->
                                    <div class="carousel-track flex transition-transform duration-500 ease-in-out h-full">
                                        {article.images && article.images.length > 0 ? (
                                            article.images.map((imageItem, index) => (
                                                <div class="carousel-slide flex-shrink-0 w-full h-full relative">
                                                    <img
                                                        src={imageItem.image.desktop}
                                                        alt={`${article.title} - Image ${index + 1}`}
                                                        class="w-full h-full object-cover"
                                                        loading="lazy"
                                                    />
                                                </div>
                                            ))
                                        ) : (
                                            <!-- Fallback image if no article images -->
                                            <div class="carousel-slide flex-shrink-0 w-full h-full relative">
                                                <img
                                                    src={article.cover || 'https://imagefaker.access.mx.com/800x544/d4af37/ffffff/?text=Article+Image'}
                                                    alt={article.title}
                                                    class="w-full h-full object-cover"
                                                    loading="lazy"
                                                />
                                            </div>
                                        )}
                                    </div>

                                    <!-- Navigation Arrows -->
                                    <button
                                            class="carousel-prev absolute left-4 top-1/2 -translate-y-1/2 w-10 h-10 rounded-full bg-black/50 text-white flex items-center justify-center hover:bg-black/70 transition-colors duration-200"
                                            aria-label="Previous image"
                                    >
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M15 19l-7-7 7-7"/>
                                        </svg>
                                    </button>
                                    <button
                                            class="carousel-next absolute right-4 top-1/2 -translate-y-1/2 w-10 h-10 rounded-full bg-black/50 text-white flex items-center justify-center hover:bg-black/70 transition-colors duration-200"
                                            aria-label="Next image"
                                    >
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                  d="M9 5l7 7-7 7"/>
                                        </svg>
                                    </button>

                                    <!-- Dots Indicator -->
                                    <div class="absolute bottom-4 left-1/2 -translate-x-1/2 flex space-x-2" id="carousel-dots">
                                        <!-- Dots will be dynamically generated by JavaScript based on slide count -->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Article Content -->
                        <article class="prose prose-lg max-w-none my-8" style="color: var(--theme-text);">
                            <Prose sourceDoc={article.content || ''} client:load/>
                        </article>

                        <!-- Article Navigation -->
                        <div class="mb-8 py-8 border-y" style="border-color: var(--theme-border);">
                            <div class="flex items-center justify-between gap-6">
                                <!-- Previous Article -->
                                <div class="flex-1 max-w-sm">
                                    {article.prev ? (
                                        <a href={`/news/${article.prev.id}`}
                                           class="group flex items-center space-x-3 p-4 rounded-lg transition-all duration-300 hover:shadow-md"
                                           style="background: var(--theme-card-bg); border: 1px solid var(--theme-border);">
                                            <svg class="w-5 h-5 transform group-hover:-translate-x-1 transition-transform duration-300 flex-shrink-0"
                                                 style="color: var(--color-primary-500);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                                            </svg>
                                            <div class="flex-1 min-w-0">
                                                <div class="text-xs font-medium mb-1" style="color: var(--color-primary-500);">
                                                    {t('news.navigation.previousArticle')}
                                                </div>
                                                <div class="text-sm font-medium line-clamp-2" style="color: var(--theme-text);">
                                                    {article.prev.title}
                                                </div>
                                            </div>
                                        </a>
                                    ) : (
                                        <div class="p-4 rounded-lg opacity-50" style="background: var(--theme-card-bg); border: 1px solid var(--theme-border);">
                                            <div class="text-xs" style="color: var(--theme-text-secondary);">
                                                {t('news.navigation.noPrevious')}
                                            </div>
                                        </div>
                                    )}
                                </div>

                                <!-- Next Article -->
                                <div class="flex-1 max-w-sm">
                                    {article.next ? (
                                        <a href={`/news/${article.next.id}`}
                                           class="group flex items-center space-x-3 p-4 rounded-lg transition-all duration-300 hover:shadow-md text-right"
                                           style="background: var(--theme-card-bg); border: 1px solid var(--theme-border);">
                                            <div class="flex-1 min-w-0">
                                                <div class="text-xs font-medium mb-1" style="color: var(--color-primary-500);">
                                                    {t('news.navigation.nextArticle')}
                                                </div>
                                                <div class="text-sm font-medium line-clamp-2" style="color: var(--theme-text);">
                                                    {article.next.title}
                                                </div>
                                            </div>
                                            <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300 flex-shrink-0"
                                                 style="color: var(--color-primary-500);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                            </svg>
                                        </a>
                                    ) : (
                                        <div class="p-4 rounded-lg opacity-50 text-right" style="background: var(--theme-card-bg); border: 1px solid var(--theme-border);">
                                            <div class="text-xs" style="color: var(--theme-text-secondary);">
                                                {t('news.navigation.noNext')}
                                            </div>
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Sidebar - 2/5 (40%) -->
                    <div class="lg:col-span-2">
                        <div class="sticky top-8 space-y-8">
                            <!-- Related Articles -->
                            <div class="pb-6 px-6">
                                <h3 class="text-lg font-semibold mb-4 pb-4"
                                    style="border-bottom: 1px solid var(--theme-border); color: var(--theme-text);">
                                    {t('news.relatedArticles')}</h3>
                                <div class="space-y-4">
                                    {filteredRelatedArticles.length > 0 ? (
                                        filteredRelatedArticles.map((relatedArticle) => (
                                            <a href={`/news/${relatedArticle.id}`} class="block group">
                                                <div class="flex space-x-3">
                                                    <img
                                                        src={relatedArticle.cover || 'https://imagefaker.access.mx.com/80x60/d4af37/ffffff/?text=Article'}
                                                        alt={relatedArticle.title}
                                                        class="w-20 h-15 object-cover rounded flex-shrink-0"
                                                    />
                                                    <div class="flex-1 min-w-0">
                                                        <h4 class="text-sm font-medium line-clamp-2 group-hover:underline"
                                                            style="color: var(--theme-text);">
                                                            {relatedArticle.title}
                                                        </h4>
                                                        <p class="text-xs mt-1" style="color: var(--theme-text-secondary);">
                                                            {new Date(relatedArticle.started_at).toLocaleDateString('zh-TW')}
                                                        </p>
                                                    </div>
                                                </div>
                                            </a>
                                        ))
                                    ) : (
                                        <>
                                            <span>{t('news.noRelatedArticles')}</span>
                                        </>
                                    )}
                                </div>
                            </div>

                            <!-- Tags -->
                            <div class="pb-6 px-6">
                                <h3 class="text-lg font-semibold mb-4 pb-4"
                                    style="border-bottom: 1px solid var(--theme-border); color: var(--theme-text);">
                                    {t('news.tags')}</h3>
                                <div class="flex flex-wrap gap-2">
                                    {article.tags?.data?.map((tag) => (
                                        <span class="rounded-md px-3 py-2 text-sm transition-all duration-200 cursor-pointer border hover:border-primary-500 hover:bg-primary-50"
                                              style="border-color: var(--theme-border); color: var(--theme-text); background: var(--theme-card-bg);">
                                            {tag.title}
                                        </span>
                                    ))}
                                    {(!article.tags?.data || article.tags.data.length === 0) && (
                                        <span class="rounded-md px-3 py-2 text-sm transition-all duration-200 cursor-pointer border hover:border-primary-500 hover:bg-primary-50"
                                              style="border-color: var(--theme-border); color: var(--theme-text); background: var(--theme-card-bg);">
                                            {t('news.fallbackTags.beauty')}
                                        </span>
                                    )}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const carouselTrack = document.querySelector('.carousel-track')
            const slides = document.querySelectorAll('.carousel-slide')
            const prevButton = document.querySelector('.banner-prev') as HTMLElement | null
            const nextButton = document.querySelector('.banner-next') as HTMLElement | null
            const dotsContainer = document.querySelector('.dots-container') as HTMLElement | null

            if (!carouselTrack || slides.length === 0) return

            let currentIndex = 0
            const totalSlides = slides.length

            // Generate dots dynamically based on slide count
            function generateDots() {
                if (!dotsContainer) return

                dotsContainer.innerHTML = ''
                for (let i = 0; i < totalSlides; i++) {
                    const dot = document.createElement('button')
                    dot.className = `carousel-dot w-3 h-3 rounded-full transition-all duration-200 ${i === 0 ? 'bg-white' : 'bg-white/50'}`
                    dot.setAttribute('data-slide', i.toString())
                    dot.setAttribute('aria-label', `Go to slide ${i + 1}`)
                    dot.addEventListener('click', () => goToSlide(i))
                    dotsContainer.appendChild(dot)
                }
            }

            // Initialize dots
            generateDots()
            const dots = document.querySelectorAll('.carousel-dot')

            // Hide navigation if only one slide
            if (totalSlides <= 1) {
                if (prevButton) prevButton.style.display = 'none'
                if (nextButton) nextButton.style.display = 'none'
                if (dotsContainer) dotsContainer.style.display = 'none'
            }

            // Update carousel position
            function updateCarousel() {
                const translateX = -currentIndex * 100
                ;(carouselTrack as HTMLElement).style.transform = `translateX(${translateX}%)`

                // Update dots
                const currentDots = document.querySelectorAll('.carousel-dot')
                currentDots.forEach((dot, index) => {
                    if (index === currentIndex) {
                        dot.classList.remove('bg-white/50')
                        dot.classList.add('bg-white')
                    } else {
                        dot.classList.remove('bg-white')
                        dot.classList.add('bg-white/50')
                    }
                })
            }

            // Next slide
            function nextSlide() {
                currentIndex = (currentIndex + 1) % totalSlides
                updateCarousel()
            }

            // Previous slide
            function prevSlide() {
                currentIndex = (currentIndex - 1 + totalSlides) % totalSlides
                updateCarousel()
            }

            // Go to specific slide
            function goToSlide(index: number) {
                currentIndex = index
                updateCarousel()
            }

            // Event listeners
            if (nextButton) {
                nextButton.addEventListener('click', nextSlide)
            }

            if (prevButton) {
                prevButton.addEventListener('click', prevSlide)
            }

            // Dots event listeners are now handled in generateDots function

            // Keyboard navigation
            document.addEventListener('keydown', e => {
                if (e.key === 'ArrowLeft') prevSlide()
                if (e.key === 'ArrowRight') nextSlide()
            })

            // Auto-play (optional)
            let autoPlayInterval = setInterval(nextSlide, 5000)

            // Pause auto-play on hover
            const carouselContainer = document.querySelector('.relative.max-w-\\[800px\\]')
            if (carouselContainer) {
                carouselContainer.addEventListener('mouseenter', () => {
                    clearInterval(autoPlayInterval)
                })

                carouselContainer.addEventListener('mouseleave', () => {
                    autoPlayInterval = setInterval(nextSlide, 5000)
                })
            }
        })
    </script>

    <style>
        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
    </style>
</Layout>
